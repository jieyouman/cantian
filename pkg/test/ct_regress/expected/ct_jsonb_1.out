

SQL> ------------------------------------
SQL> -- JSONB_VALUE
SQL> ------------------------------------
SQL> -- 1. create jsonb data.
SQL> drop table if exists tbl_jb_jbv_test_1;

Succeed.

SQL> create table tbl_jb_jbv_test_1(a jsonb);

Succeed.

SQL> drop table tbl_jb_jbv_test_1;

Succeed.

SQL> 
SQL> drop table if exists tbl_jb_jbv_test_1;

Succeed.

SQL> create table tbl_jb_jbv_test_1(a jsonb, b int);

Succeed.

SQL> insert into tbl_jb_jbv_test_1 values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{"A":1, "B":2, "C":3, "D":4}}', 1); --ok

1 rows affected.

SQL> insert into tbl_jb_jbv_test_1 values('[[1, 2, 3, 4], [11, 22, 33, 44], [31, 32, 33, 34], [41, 42, 43, 44], [51, 52, 53, 54], {"AA":111, "BB":222, "CC":333}]', 2); --ok

1 rows affected.

SQL> insert into tbl_jb_jbv_test_1 values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{A:1, "B":2, "C":3, "D":4}}', 1); --syntax error

CT-02504, JSON syntax error, " expected but A found
SQL> insert into tbl_jb_jbv_test_1 values('"hello word"', 1); --error: can not be scaler

CT-02504, JSON syntax error, input data is not valid JSON
SQL> insert into tbl_jb_jbv_test_1 values('true', 1); --error: can not be scaler

CT-02504, JSON syntax error, input data is not valid JSON
SQL> insert into tbl_jb_jbv_test_1 values('32534.2555', 1); --error: can not be scaler

CT-02504, JSON syntax error, input data is not valid JSON
SQL> insert into tbl_jb_jbv_test_1 values('[true', 1); --error: can not be scaler

CT-02504, JSON syntax error, "," expected but 
SQL> 
SQL> drop table if exists tbl_jv_jbv_test_1;

Succeed.

SQL> create table tbl_jv_jbv_test_1(a clob check(a is json), b int);

Succeed.

SQL> insert into tbl_jv_jbv_test_1 values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{"A":1, "B":2, "C":3, "D":4}}', 1); --ok

1 rows affected.

SQL> insert into tbl_jv_jbv_test_1 values('[[1, 2, 3, 4], [11, 22, 33, 44], [31, 32, 33, 34], [41, 42, 43, 44], [51, 52, 53, 54], {"AA":111, "BB":222, "CC":333}]', 2); --ok

1 rows affected.

SQL> insert into tbl_jv_jbv_test_1 values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{A:1, "B":2, "C":3, "D":4}}', 1); --constraint violated

CT-01127, Check constraint violated
SQL> insert into tbl_jv_jbv_test_1 values('"hello word"', 1); --constraint violated

CT-01127, Check constraint violated
SQL> 
SQL> select length(a), b from tbl_jb_jbv_test_1;

LENGTH(A)            B           
-------------------- ------------
101                  1           
111                  2           

2 rows fetched.

SQL> select length(a), b from tbl_jv_jbv_test_1;

LENGTH(A)            B           
-------------------- ------------
132                  1           
118                  2           

2 rows fetched.

SQL> 
SQL> -- 2. query jsonb data.
SQL> select jsonb_value(a, '$.id') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.name') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
andy                                                            

1 rows fetched.

SQL> select jsonb_value(a, '$.age') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
18                                                              

1 rows fetched.

SQL> select jsonb_value(a, '$.addr') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
China                                                           

1 rows fetched.

SQL> select jsonb_value(a, '$.hob') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.hob' null on error) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.hob' error on error) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

CT-02506, JSONB_VALUE evaluated to non-scalar value
SQL> select jsonb_value(a, '$.hob[4][2].lov') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> select jsonb_value(a, '$.hob[4][2].lov' returning varchar2(256)) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> select jsonb_value(a, '$.hob[4][2].lov' returning clob) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs' null on error) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs' error on error) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

CT-02506, JSONB_VALUE evaluated to non-scalar value
SQL> select jsonb_value(a, '$.attrs.A') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
1                                                               

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs.B') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
2                                                               

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs.C') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
3                                                               

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs.D') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
4                                                               

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs.E') as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs.E' null on error) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

JBV_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_value(a, '$.attrs.E' error on error) as jbv_res from tbl_jb_jbv_test_1 where b = 1;

CT-02506, JSONB_VALUE evaluated to no value
SQL> 
SQL> select jsonb_value(a, '$[0][2]') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
3                                                               

1 rows fetched.

SQL> select jsonb_value(a, '$[1][2]') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
33                                                              

1 rows fetched.

SQL> select jsonb_value(a, '$[2][2]') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
33                                                              

1 rows fetched.

SQL> select jsonb_value(a, '$[3][2]') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
43                                                              

1 rows fetched.

SQL> select jsonb_value(a, '$[4][2]') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
53                                                              

1 rows fetched.

SQL> select jsonb_value(a, '$[5].AA') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
111                                                             

1 rows fetched.

SQL> select jsonb_value(a, '$[5].BB') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
222                                                             

1 rows fetched.

SQL> select jsonb_value(a, '$[5].CC') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
333                                                             

1 rows fetched.

SQL> desc -q select jsonb_value(a, '$[5].CC') as jbv_res from tbl_jb_jbv_test_1 where b = 2;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
JBV_RES                                      VARCHAR(3900 CHAR)                  

SQL> desc -q select jsonb_value(a, '$[5].CC' returning varchar2(256)) as jbv_res from tbl_jb_jbv_test_1 where b = 2;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
JBV_RES                                      VARCHAR(256 CHAR)                   

SQL> desc -q select jsonb_value(a, '$[5].CC' returning clob) as jbv_res from tbl_jb_jbv_test_1 where b = 2;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
JBV_RES                                      CLOB                                

SQL> select jsonb_value(a, '$[5].CC' returning clob error on error) as jbv_res from tbl_jb_jbv_test_1 where b = 2;

JBV_RES                                                         
----------------------------------------------------------------
333                                                             

1 rows fetched.

SQL> 
SQL> drop table if exists tbl_jb_jbv_test_1;

Succeed.

SQL> drop table if exists tbl_jv_jbv_test_1;

Succeed.

SQL> 
SQL> -- 3. as function index
SQL> -- 3.1 testcase 1
SQL> drop table if exists jbv_func_indx_test;

Succeed.

SQL> create table jbv_func_indx_test(a jsonb);

Succeed.

SQL> insert into jbv_func_indx_test values('[{"AAA":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"}, {"BBB":"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"}, {"CCC":"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"}, {"DDD":"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"}, {"EEE":"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"}]');

1 rows affected.

SQL> insert into jbv_func_indx_test values('[{"AAA":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcccAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"}, {"BBB":"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBccccBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"}, {"CCC":"CCCCCCCCCCCCCCCCCCCCCCCCccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"}, {"DDD":"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDccccDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"}, {"EEE":"EEEEEEEEEEEEEEEEEEEEEEEEEEccccEEEEEEEEEEEEEEEEEEE"}]');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> drop index if exists jsonb_value_idx_jbv_func_indx_test on jbv_func_indx_test;

Succeed.

SQL> create index jsonb_value_idx_jbv_func_indx_test on jbv_func_indx_test(jsonb_value(a, '$[0].AAA'));

Succeed.

SQL>
SQL> select jsonb_value(a, '$[0].AAA') as jbv_res from jbv_func_indx_test order by jbv_res;

JBV_RES                                                         
----------------------------------------------------------------
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcccAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

2 rows fetched.

SQL> select jsonb_value(a, '$[0].AAA' returning clob) as jbv_res from jbv_func_indx_test order by jbv_res;

JBV_RES                                                         
----------------------------------------------------------------
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcccAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

2 rows fetched.

SQL> 
SQL> select jsonb_value(a, '$[1].BBB') as jbv_res from jbv_func_indx_test order by jbv_res;

JBV_RES                                                         
----------------------------------------------------------------
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBccccBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

2 rows fetched.

SQL> select jsonb_value(a, '$[2].CCC') as jbv_res from jbv_func_indx_test order by jbv_res;

JBV_RES                                                         
----------------------------------------------------------------
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

2 rows fetched.

SQL> select jsonb_value(a, '$[3].DDD') as jbv_res from jbv_func_indx_test order by jbv_res;

JBV_RES                                                         
----------------------------------------------------------------
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDccccDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD

2 rows fetched.

SQL> select jsonb_value(a, '$[4].EEE') as jbv_res from jbv_func_indx_test order by jbv_res;

JBV_RES                                                         
----------------------------------------------------------------
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                   
EEEEEEEEEEEEEEEEEEEEEEEEEEccccEEEEEEEEEEEEEEEEEEE               

2 rows fetched.

SQL> 
SQL> -- 3.2 testcase 2
SQL> drop table if exists jbv_func_indx_test;

Succeed.

SQL> create table jbv_func_indx_test(a jsonb);

Succeed.

SQL> 
SQL> create unique index DDFDVFD on jbv_func_indx_test(jsonb_value(a, '$.AAA' returning varchar2(1024)), jsonb_value(a, '$.BBB' returning varchar2(1024)));

Succeed.

SQL> insert into jbv_func_indx_test values('{"AAA" : "111", "BBB" : "222", "CCC" : "333"}');

1 rows affected.

SQL> insert into jbv_func_indx_test values('{"AAA" : "111", "BBB" : "222", "CCC" : "333"}'); -- error

CT-00729, Unique constraint violated, index DDFDVFD, duplicate key 111-222
SQL> insert into jbv_func_indx_test values('{"AAA" : "111", "BBB" : "000", "CCC" : "333"}');

1 rows affected.

SQL> select jsonb_query(a, '$') as val from jbv_func_indx_test where jsonb_value(a, '$.AAA' returning varchar2(1024)) = '111';

VAL                                                             
----------------------------------------------------------------
{"AAA":"111","BBB":"222","CCC":"333"}
{"AAA":"111","BBB":"000","CCC":"333"}

2 rows fetched.

SQL> select jsonb_query(a, '$') as val from jbv_func_indx_test where jsonb_value(a, '$.AAA' returning varchar2(1024)) = '111' and jsonb_value(a, '$.BBB' returning varchar2(1024)) = '222';

VAL                                                             
----------------------------------------------------------------
{"AAA":"111","BBB":"222","CCC":"333"}                           

1 rows fetched.

SQL>
SQL> drop table if exists jbv_func_indx_test;

Succeed.

SQL> 
SQL> ------------------------------------
SQL> -- JSONB_QUERY
SQL> ------------------------------------
SQL> --1. basic use
SQL> drop table if exists tbl_jb_jbq_test_1;

Succeed.

SQL> create table tbl_jb_jbq_test_1(a jsonb, b int);

Succeed.

SQL> insert into tbl_jb_jbq_test_1 values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{"A":1, "B":2, "C":3, "D":4}}', 1); --ok

1 rows affected.

SQL> insert into tbl_jb_jbq_test_1 values('[[1, 2, 3, 4], [11, 22, 33, 44], [31, 32, 33, 34], [41, 42, 43, 44], [51, 52, 53, 54], {"AA":111, "BB":222, "CC":333}]', 2); --ok

1 rows affected.

SQL> 
SQL> select jsonb_query(a, '$') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"addr":"China","age":18,"attrs":{"A":1,"B":2,"C":3,"D":4},"hob":[1,2,3,4,[5,6,{"lov":true}]],"id":null,"name":"andy"}

1 rows fetched.

SQL> select jsonb_query(a, '$.id') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_query(a, '$.id' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[null]                                                          

1 rows fetched.

SQL> select jsonb_query(a, '$.name') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_query(a, '$.name' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
["andy"]                                                        

1 rows fetched.

SQL> select jsonb_query(a, '$.age') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_query(a, '$.age' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[18]                                                            

1 rows fetched.

SQL> select jsonb_query(a, '$.addr') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_query(a, '$.addr' with conditional wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
["China"]                                                       

1 rows fetched.

SQL> select jsonb_query(a, '$.hob') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[1,2,3,4,[5,6,{"lov":true}]]                                    

1 rows fetched.

SQL> select jsonb_query(a, '$.hob[2 to 4]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[3,4,[5,6,{"lov":true}]]                                        

1 rows fetched.

SQL> select jsonb_query(a, '$.hob[1, 4]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[2,[5,6,{"lov":true}]]                                          

1 rows fetched.

SQL> select jsonb_query(a, '$.hob[4]' with conditional wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[5,6,{"lov":true}]                                              

1 rows fetched.

SQL> select jsonb_query(a, '$.hob[4][*]' with conditional wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[5,6,{"lov":true}]                                              

1 rows fetched.

SQL> select jsonb_query(a, '$.hob[4][*].*' with conditional wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[true]                                                          

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"A":1,"B":2,"C":3,"D":4}                                       

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[{"A":1,"B":2,"C":3,"D":4}]                                     

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs.A' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[1]                                                             

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs.B' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[2]                                                             

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs.C' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[3]                                                             

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs.D' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[4]                                                             

1 rows fetched.

SQL> 
SQL> select jsonb_query(a, '$') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[[1,2,3,4],[11,22,33,44],[31,32,33,34],[41,42,43,44],[51,52,53,54],{"AA":111,"BB":222,"CC":333}]

1 rows fetched.

SQL> select jsonb_query(a, '$[0]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[1,2,3,4]                                                       

1 rows fetched.

SQL> select jsonb_query(a, '$[0][1, 3]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[2,4]                                                           

1 rows fetched.

SQL> select jsonb_query(a, '$[1]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[11,22,33,44]                                                   

1 rows fetched.

SQL> select jsonb_query(a, '$[1][1, 3]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[22,44]                                                         

1 rows fetched.

SQL> select jsonb_query(a, '$[2]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[31,32,33,34]                                                   

1 rows fetched.

SQL> select jsonb_query(a, '$[2][1, 3]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[32,34]                                                         

1 rows fetched.

SQL> select jsonb_query(a, '$[3]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[41,42,43,44]                                                   

1 rows fetched.

SQL> select jsonb_query(a, '$[3][1, 3]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[42,44]                                                         

1 rows fetched.

SQL> select jsonb_query(a, '$[4]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[51,52,53,54]                                                   

1 rows fetched.

SQL> select jsonb_query(a, '$[4][1, 3]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[52,54]                                                         

1 rows fetched.

SQL> select jsonb_query(a, '$[5]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
{"AA":111,"BB":222,"CC":333}                                    

1 rows fetched.

SQL> select jsonb_query(a, '$[0,2,4]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[[1,2,3,4],[31,32,33,34],[51,52,53,54]]                         

1 rows fetched.

SQL> select jsonb_query(a, '$[1,3,5]' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[[11,22,33,44],[41,42,43,44],{"AA":111,"BB":222,"CC":333}]      

1 rows fetched.

SQL> select jsonb_query(a, '$[5].AA' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[111]                                                           

1 rows fetched.

SQL> select jsonb_query(a, '$[5].BB' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[222]                                                           

1 rows fetched.

SQL> select jsonb_query(a, '$[5].CC' with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[333]                                                           

1 rows fetched.

SQL> select jsonb_query(a, '$[5].DD' with wrapper error on error) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

CT-02506, JSONB_VALUE evaluated to no value
SQL> 
SQL> --returning && mixed with json_value
SQL> select jsonb_query(a, '$                      ') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"addr":"China","age":18,"attrs":{"A":1,"B":2,"C":3,"D":4},"hob":[1,2,3,4,[5,6,{"lov":true}]],"id":null,"name":"andy"}

1 rows fetched.

SQL> desc -q select jsonb_query(a, '$') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
JBQ_RES                                      VARCHAR(3900 CHAR)                  

SQL> select jsonb_query(a, '$' returning clob) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"addr":"China","age":18,"attrs":{"A":1,"B":2,"C":3,"D":4},"hob":[1,2,3,4,[5,6,{"lov":true}]],"id":null,"name":"andy"}

1 rows fetched.

SQL> desc -q select jsonb_query(a, '$' returning clob) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
JBQ_RES                                      CLOB                                

SQL> select jsonb_query(a, '$' returning varchar2(256)) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"addr":"China","age":18,"attrs":{"A":1,"B":2,"C":3,"D":4},"hob":[1,2,3,4,[5,6,{"lov":true}]],"id":null,"name":"andy"}

1 rows fetched.

SQL> desc -q select jsonb_query(a, '$' returning varchar2(256)) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
JBQ_RES                                      VARCHAR(256 CHAR)                   

SQL> 
SQL> select jsonb_query(a, '$[2]' returning varchar2(128)) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[31,32,33,34]                                                   

1 rows fetched.

SQL> select jsonb_query(a, '$[2]' returning jsonb) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
0F000000011104444407090B0D3331333233333334                      

1 rows fetched.

SQL> select jsonb_query(jsonb_query(a, '$[2]' returning jsonb), '$') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[31,32,33,34]                                                   

1 rows fetched.

SQL> select jsonb_query(jsonb_query(a, '$[2]' returning jsonb), '$[1,3]'with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
[32,34]                                                         

1 rows fetched.

SQL> select jsonb_query(jsonb_query(a, '$[2]' returning jsonb), '$[1,3]' returning jsonb with wrapper) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
0800000001110244040633323334                                    

1 rows fetched.

SQL> select jsonb_value(jsonb_query(jsonb_query(a, '$[2]' returning jsonb), '$[1,3]' returning jsonb with wrapper), '$[0]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
32                                                              

1 rows fetched.

SQL> select jsonb_value(jsonb_query(jsonb_query(a, '$[2]' returning jsonb), '$[1,3]' returning jsonb with wrapper), '$[1]') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
34                                                              

1 rows fetched.

SQL> 
SQL> select jsonb_query(a, '$[5]' returning clob) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
{"AA":111,"BB":222,"CC":333}                                    

1 rows fetched.

SQL> select jsonb_query(a, '$[5]' returning jsonb) as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
180000000111834440090B0D0F1215414142424343313131323232333333    

1 rows fetched.

SQL> select json_value(jsonb_query(a, '$[5]' returning clob), '$.AA') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
111                                                             

1 rows fetched.

SQL> select json_value(jsonb_query(a, '$[5]' returning clob), '$.BB') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
222                                                             

1 rows fetched.

SQL> select json_value(jsonb_query(a, '$[5]' returning clob), '$.CC') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
333                                                             

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$[5]' returning jsonb), '$.AA') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
111                                                             

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$[5]' returning jsonb), '$.BB') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
222                                                             

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$[5]' returning jsonb), '$.CC') as jbq_res from tbl_jb_jbq_test_1 where b = 2;

JBQ_RES                                                         
----------------------------------------------------------------
333                                                             

1 rows fetched.

SQL> 
SQL> select jsonb_query(a, '$.attrs' returning clob) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"A":1,"B":2,"C":3,"D":4}                                       

1 rows fetched.

SQL> select jsonb_query(a, '$.attrs' returning jsonb) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
1300000001118444440B0C0D0E0F1011124142434431323334              

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.attrs' returning jsonb), '$.A') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
1                                                               

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.attrs' returning jsonb), '$.B') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
2                                                               

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.attrs' returning jsonb), '$.C') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
3                                                               

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.attrs' returning jsonb), '$.D') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
4                                                               

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.attrs' returning jsonb), '$.D' returning jsonb) as jbq_res from tbl_jb_jbq_test_1 where b = 1;  --error

CT-02501, [1:8]Invalid RETURNING/ON ERROR/ON EMPTY clause, 
SQL> 
SQL> select jsonb_query(a, '$.hob[4]' returning clob) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
[5,6,{"lov":true}]                                              

1 rows fetched.

SQL> select jsonb_query(a, '$.hob[4]' returning jsonb) as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
0F00000001110344500607083536812004076C6F76                      

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.hob[4]' returning jsonb), '$[0]') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
5                                                               

1 rows fetched.

SQL> select jsonb_value(jsonb_query(a, '$.hob[4]' returning jsonb), '$[1]') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
6                                                               

1 rows fetched.

SQL> select jsonb_query(jsonb_query(a, '$.hob[4]' returning jsonb), '$[2]') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
{"lov":true}                                                    

1 rows fetched.

SQL> select json_value(jsonb_query(jsonb_query(a, '$.hob[4]' returning jsonb), '$[2]'), '$.lov') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> select jsonb_value(jsonb_query(jsonb_query(a, '$.hob[4]' returning jsonb), '$[2]' returning jsonb), '$.lov') as jbq_res from tbl_jb_jbq_test_1 where b = 1;

JBQ_RES                                                         
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> 
SQL> drop table if exists tbl_jb_jbq_test_1;

Succeed.

SQL> 
SQL> --sort keys in every object.
SQL> drop table if exists sort_jsonb_tbl;

Succeed.

SQL> create table sort_jsonb_tbl(a jsonb);

Succeed.

SQL> insert into sort_jsonb_tbl values('{"FFF":"dsds", "DDD":null, "EEE":12.25, "AAA":true, "CCC":false, "BBB":[1,2,3,4,5]}');

1 rows affected.

SQL> insert into sort_jsonb_tbl values('{"FFF":"dsds", "DDD":{"AA":{"id":null, "Name":"andy", "age":18, "addr":"China"}, "123":{"Id":null, "name":"andy", "Age":18, "addr":"China"}}}');

1 rows affected.

SQL> select jsonb_query(a, '$') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
{"AAA":true,"BBB":[1,2,3,4,5],"CCC":false,"DDD":null,"EEE":12.25,"FFF":"dsds"}
{"DDD":{"123":{"Age":18,"Id":null,"addr":"China","name":"andy"},"AA":{"Name":"andy","addr":"China","age":18,"id":null}},"FFF":"dsds"}

2 rows fetched.

SQL> commit;

Succeed.

SQL> 
SQL> drop table if exists sort_jsonb_tbl;

Succeed.

SQL> create table sort_jsonb_tbl(a jsonb);

Succeed.

SQL> truncate table sort_jsonb_tbl;

Succeed.

SQL> insert into sort_jsonb_tbl values('{"QQQ":"3454334", "FFF":"dsds", "DDD":null, "CCC":{"QWE":"234234", "KHGF":6776}, "ZZZ":"fvdvfdev", "SSS":12233.25, "EEE":12.25, "AAA":true, "WWW":"huawei.com", "CCC":false, "BBB":[1,2,3,4,5]}');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select jsonb_query(a, '$' with wrapper) as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
[{"AAA":true,"BBB":[1,2,3,4,5],"CCC":false,"CCC":{"KHGF":6776,"QWE":"234234"},"DDD":null,"EEE":12.25,"FFF":"dsds","QQQ":"3454334","SSS":12233.25,"WWW":"huawei.com","ZZZ":"fvdvfdev"}]

1 rows fetched.

SQL> select jsonb_query(a, '$.*' with wrapper) as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
[true,[1,2,3,4,5],false,{"KHGF":6776,"QWE":"234234"},null,12.25,"dsds","3454334",12233.25,"huawei.com","fvdvfdev"]

1 rows fetched.

SQL> select jsonb_query(a, '$.CCC' with wrapper) as val from sort_jsonb_tbl;  --[false,{"KHGF":6776,"QWE":"234234"}]

VAL                                                             
----------------------------------------------------------------
[false,{"KHGF":6776,"QWE":"234234"}]                            

1 rows fetched.

SQL> select jsonb_query(a, '$.CCC' returning jsonb with wrapper) as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
1B0000000111021504048243060A0D114B48474651574536373736323334323334

1 rows fetched.

SQL> select jsonb_query(to_blob('01000000011180'), '$') as val;

VAL                                                             
----------------------------------------------------------------
{}                                                              

1 rows fetched.

SQL> select jsonb_query(to_blob('01000000011100'), '$') as val;

VAL                                                             
----------------------------------------------------------------
[]                                                              

1 rows fetched.

SQL> select jsonb_query(to_blob('01000000021100'), '$') as val;  --version is not correct

CT-02508, JSONB format error, version is not correct.
SQL> select jsonb_query(to_blob('01000000011100'), '$' error on error) as val;

VAL                                                             
----------------------------------------------------------------
[]                                                              

1 rows fetched.

SQL> select jsonb_query(to_blob('01000000011180'), '$' error on error) as val;

VAL                                                             
----------------------------------------------------------------
{}                                                              

1 rows fetched.

SQL> select jsonb_query(to_blob('01000000013180'), '$' error on error);  --error

CT-02508, JSONB format error, invalid header length of jsonb format.
SQL> select jsonb_query(to_blob('0200000001118011'), '$' error on error) as val;

VAL                                                             
----------------------------------------------------------------
{}                                                              

1 rows fetched.

SQL> select jsonb_query(to_blob('0200000001118211'), '$' error on error);  --error

CT-02508, JSONB format error, invalid headers of jsonb format.
SQL> select jsonb_array_length(to_blob('01000000013180'));  --error

CT-02508, JSONB format error, invalid header length of jsonb format.
SQL> 
SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D114B48474651574536373736323334323334'), '$') as val;  --[false,{"KHGF":6776,"QWE":"234234"}]

VAL                                                             
----------------------------------------------------------------
[false,{"KHGF":6776,"QWE":"234234"}]                            

1 rows fetched.

SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D114B48474651574536373736323334323334'), '$[1]' with wrapper) as val;  --[{"KHGF":6776,"QWE":"234234"}]

VAL                                                             
----------------------------------------------------------------
[{"KHGF":6776,"QWE":"234234"}]                                  

1 rows fetched.

SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D124B48474651574536373736323334323334'), '$[1]' with wrapper) as val;  --change offset

VAL                                                             
----------------------------------------------------------------
[{"KHGF":67762,"QWE":"34234"}]                                  

1 rows fetched.

SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D334B48474651574536373736323334323334'), '$[1]' with wrapper error on error) as val; -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D014B48474651574536373736323334323334'), '$[1]' with wrapper error on error) as val; -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D0D4B48474651574536373736323334323334'), '$[1]' with wrapper error on error) as val; -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D0E4B48474651574536373736323334323334'), '$[1]' with wrapper error on error) as val;

VAL                                                             
----------------------------------------------------------------
[{"KHGF":6,"QWE":"776234234"}]                                  

1 rows fetched.

SQL> select jsonb_query(to_blob('1B00000001110215FF048243060A0D114B48474651574536373736323334323334'), '$[1]' with wrapper error on error) as val;

VAL                                                             
----------------------------------------------------------------
[{"KHGF":6776,"QWE":"234234"}]                                  

1 rows fetched.

SQL> 
SQL> select jsonb_value(to_blob('1B0000000111021504048243060A0D114B48474651574536373736323334323334'), '$[0]') as val;

VAL                                                             
----------------------------------------------------------------
false                                                           

1 rows fetched.

SQL> select jsonb_value(to_blob('1B0000000111021504048243060A0D114B48474651574536373736323334323334'), '$[1].KHGF') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
6776                                                            

1 rows fetched.

SQL> select jsonb_value(to_blob('1B0000000111021504048243060A99114B48474651574536373736323334323334'), '$[1].KHGF') as val from sort_jsonb_tbl; -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_value(to_blob('1B0000000111021504048243060A0D114B48474651574536373736323334323334'), '$[1].QWE') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
234234                                                          

1 rows fetched.

SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D114B48474651574536373736414243446768'), '$') as val from sort_jsonb_tbl;  --[false,{"KHGF":6776,"QWE":"ABCDgh"}]

VAL                                                             
----------------------------------------------------------------
[false,{"KHGF":6776,"QWE":"ABCDgh"}]                            

1 rows fetched.

SQL> select jsonb_query(to_blob('4B0000000111021504048243060A0D114B48474651574536373736414243446768'), '$') as val from sort_jsonb_tbl;  --length is not correct

CT-02508, JSONB format error, length is not correct.
SQL> select jsonb_query(to_blob('000000000111'), '$') as val;  --length is not correct

CT-02508, JSONB format error, length is not correct.
SQL> select jsonb_query(to_blob('0000000111'), '$') as val;  --length is not correct

CT-02508, JSONB format error, length is not correct.
SQL> select jsonb_query(to_blob('1B0000000111021504048243060A0D114B4847465157453637373641424344676868686868'), '$') as val from sort_jsonb_tbl;  --length is not correct

CT-02508, JSONB format error, length is not correct.
SQL> select jsonb_query(to_blob('1B0000000211021504048243060A0D114B48474651574536373736414243446768'), '$') as val from sort_jsonb_tbl;  --version is not correct

CT-02508, JSONB format error, version is not correct.
SQL> select jsonb_query(to_blob('1B0000000151021504048243060A0D114B48474651574536373736414243446768'), '$') as val from sort_jsonb_tbl;  --head bytes number is not correct

CT-02508, JSONB format error, head bytes number is not correct.
SQL> select jsonb_query(to_blob('1B0000000115021504048243060A0D114B48474651574536373736414243446768'), '$') as val from sort_jsonb_tbl;  --entry bytes number is not correct

CT-02508, JSONB format error, entry bytes number is not correct.
SQL> select jsonb_query(to_blob('1B0000000113021504048243060A0D114B48474651574536373736323334323334'), '$') as val from sort_jsonb_tbl;  --entry bytes number is not correct

VAL                                                             
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select jsonb_query(to_blob('1B0000000110021504048243060A0D114B48474651574536373736323334323334'), '$') as val from sort_jsonb_tbl;  --entry bytes number is not correct

CT-02508, JSONB format error, entry bytes number is not correct.
SQL> select jsonb_query(to_blob('0B00000001110444440708090A31323334'), '$' error on error) as val;

VAL                                                             
----------------------------------------------------------------
[1,2,3,4]                                                       

1 rows fetched.

SQL> select jsonb_query(to_blob('0B00000001110444440788090A31323334'), '$' error on error); -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(to_blob('0B00000001110444440701090A31323334'), '$' error on error); -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(to_blob('0B00000001120444440701090A31323334'), '$' error on error); -- error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(to_blob('0500000001110444440708'), '$' error on error); -- error

CT-02508, JSONB format error, invalid headers of jsonb format.
SQL> 
SQL> select jsonb_query(jsonb_query(jsonb_query(a, '$.*' returning jsonb with wrapper), '$' returning jsonb), '$') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
[true,[1,2,3,4,5],false,{"KHGF":6776,"QWE":"234234"},null,12.25,"dsds","3454334",12233.25,"huawei.com","fvdvfdev"]

1 rows fetched.

SQL> select jsonb_query(jsonb_query(jsonb_query(a, '$.*' returning jsonb with wrapper), '$' returning jsonb), '$[1,3,5,7]' with wrapper) as val from sort_jsonb_tbl;  --[[1,2,3,4,5],{"KHGF":6776,"QWE":"234234"},12.25,"3454334"]

VAL                                                             
----------------------------------------------------------------
[[1,2,3,4,5],{"KHGF":6776,"QWE":"234234"},12.25,"3454334"]      

1 rows fetched.

SQL> select jsonb_query(jsonb_query(jsonb_query(a, '$.*' returning jsonb with wrapper), '$' returning jsonb), '$[1,3,5,7]' returning jsonb with wrapper) as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334

1 rows fetched.

SQL> select jsonb_query(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$') as val from sort_jsonb_tbl;  --[[1,2,3,4,5],{"KHGF":6776,"QWE":"234234"},12.25,"3454334"]

VAL                                                             
----------------------------------------------------------------
[[1,2,3,4,5],{"KHGF":6776,"QWE":"234234"},12.25,"3454334"]      

1 rows fetched.

SQL> select jsonb_query(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$[0]') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
[1,2,3,4,5]                                                     

1 rows fetched.

SQL> select jsonb_query(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$[0][0,2,4]' with wrapper) as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
[1,3,5]                                                         

1 rows fetched.

SQL> select jsonb_query(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$[1]') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
{"KHGF":6776,"QWE":"234234"}                                    

1 rows fetched.

SQL> select jsonb_value(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$[1].KHGF') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
6776                                                            

1 rows fetched.

SQL> select jsonb_value(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$[1].QWE') as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
234234                                                          

1 rows fetched.

SQL> select jsonb_query(to_blob('38000000011104554307152C3105444440090A0B0C0D31323334358243060A0D114B4847465157453637373632333432333431322E323533343534333334'), '$[2, 3]' with wrapper) as val from sort_jsonb_tbl;

VAL                                                             
----------------------------------------------------------------
[12.25,"3454334"]                                               

1 rows fetched.

SQL> 
SQL> drop table if exists sort_jsonb_tbl;

Succeed.

SQL> 
SQL> drop table if exists binary_test_jsonb;

Succeed.

SQL> create table binary_test_jsonb(a jsonb, b int);

Succeed.

SQL> insert into binary_test_jsonb values('[1,2,3,true]', 1);

1 rows affected.

SQL> insert into binary_test_jsonb values('[1,2,3,4]', 2);

1 rows affected.

SQL> select * from binary_test_jsonb;

A                                                                B           
---------------------------------------------------------------- ------------
0A00000001110444420708090A313233                                 1           
0B00000001110444440708090A31323334                               2           

2 rows fetched.

SQL> commit;

Succeed.

SQL> 
SQL> select jsonb_value(to_blob('0B00000001110444440708090A31323334'), '$[1]' error on error) as val;

VAL                                                             
----------------------------------------------------------------
2                                                               

1 rows fetched.

SQL> select jsonb_value(to_blob('0B00000001110444440708990A31323334'), '$[1]' error on error) as val; --error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_value(to_blob('0A00000001110444420708090A313233'), '$[3]' error on error) as val;

VAL                                                             
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> 
SQL> ------------------------------------
SQL> -- JSONB_EXISTS
SQL> ------------------------------------
SQL> drop table if exists tbl_jb_jbe_test_1;

Succeed.

SQL> create table tbl_jb_jbe_test_1(a jsonb, b int);

Succeed.

SQL> insert into tbl_jb_jbe_test_1 values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{"A":1, "B":2, "C":3, "D":4}}', 1); --ok

1 rows affected.

SQL> insert into tbl_jb_jbe_test_1 values('[[1, 2, 3, 4], [11, 22, 33, 44], [31, 32, 33, 34], [41, 42, 43, 44], [51, 52, 53, 54], {"AA":111, "BB":222, "CC":333}]', 2); --ok

1 rows affected.

SQL> 
SQL> select jsonb_exists(a, '$') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.id') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.name') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.age') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.addr') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[0]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[1]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[2]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[3]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[4]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[4][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[4][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[4][2]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.hob[4][2].lov') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.attrs') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.attrs.A') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.attrs.B') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.attrs.C') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$.attrs.D') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> 
SQL> select jsonb_exists(a, '$.atstrs.B') as jbe_res from tbl_jb_jbe_test_1 where b = 1;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(a, '$.attrs.EDCVD') as jbe_res from tbl_jb_jbe_test_1 where b = 1;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> 
SQL> select jsonb_exists(a, '$[0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[0][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[0][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[0][2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[0][3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[1][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[1][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[1][2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[1][3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[2][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[2][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[2][2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[2][3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[3][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[3][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[3][2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[3][3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[4]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[4][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[4][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[4][2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[4][3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].AA') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].BB') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].CC') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].AA[*]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].BB[*]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].CC[*]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> 
SQL> select jsonb_exists(a, '$[8][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(a, '$[4][9]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].AAs') as jbe_res from tbl_jb_jbe_test_1 where b = 2;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(a, '$[5].AA[1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> 
SQL> --mixed
SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[0]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[1]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[2]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[3]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[4][0]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[4][1]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[4][2].lov') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.attrs' returning jsonb), '$.A') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.attrs' returning jsonb), '$.B') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.attrs' returning jsonb), '$.C') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.attrs' returning jsonb), '$.D') as jbe_res from tbl_jb_jbe_test_1 where b = 1;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[2]' returning jsonb), '$[0]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[2]' returning jsonb), '$[1]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[2]' returning jsonb), '$[2]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[2]' returning jsonb), '$[3]') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[5]' returning jsonb), '$.AA') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[5]' returning jsonb), '$.BB') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[5]' returning jsonb), '$.CC') as jbe_res from tbl_jb_jbe_test_1 where b = 2;

JBE_RES
-------
TRUE   

1 rows fetched.

SQL> 
SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[8]') as jbe_res from tbl_jb_jbe_test_1 where b = 1;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.hob' returning jsonb), '$[4][65].lov') as jbe_res from tbl_jb_jbe_test_1 where b = 1;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$.attrs' returning jsonb), '$.Dsa') as jbe_res from tbl_jb_jbe_test_1 where b = 1;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> select jsonb_exists(jsonb_query(a, '$[5]' returning jsonb), '$.SFDVDF') as jbe_res from tbl_jb_jbe_test_1 where b = 2;  --false

JBE_RES
-------
FALSE  

1 rows fetched.

SQL> 
SQL> drop table if exists tbl_jb_jbe_test_1;

Succeed.

SQL> 
SQL> ------------------------------------
SQL> -- JSONB_MERGEPATCH
SQL> ------------------------------------
SQL> drop table if exists jb_merpatch_tbl;

Succeed.

SQL> create table jb_merpatch_tbl(a jsonb, b int);

Succeed.

SQL> insert into jb_merpatch_tbl values('{"addres":"CHN", "id":"55185651515", "name":"zzzzzzzzzzzzzzzzzzzzzzzzzzzz", "age":4444444444444444444444444, "hobby":[1,2,34,5]}', 1);

1 rows affected.

SQL> insert into jb_merpatch_tbl values('[1,2,3,4,5,6]', 2);

1 rows affected.

SQL> insert into jb_merpatch_tbl values('{"AAA":{"BBB":{"CCC":"XXXXX"}}}', 3);

1 rows affected.

SQL> insert into jb_merpatch_tbl values('[1, 2, {"AAA":{"BBB":{"CCC":"XXXXX"}}}]', 4);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> --replace
SQL> select jsonb_query(a, '$') from jb_merpatch_tbl;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"addres":"CHN","age":4444444444444444444444444,"hobby":[1,2,34,5],"id":"55185651515","name":"zzzzzzzzzzzzzzzzzzzzzzzzzzzz"}
[1,2,3,4,5,6]                                                   
{"AAA":{"BBB":{"CCC":"XXXXX"}}}                                 
[1,2,{"AAA":{"BBB":{"CCC":"XXXXX"}}}]                           

4 rows fetched.

SQL> select jsonb_mergepatch(a, '{"name":"andy", "age":12}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"NAME":"ANDY", "AGE":12}')                
----------------------------------------------------------------
{"addres":"CHN","age":12,"hobby":[1,2,34,5],"id":"55185651515","name":"andy"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"hobby":["basketball", "sing", "soccer", "moive", {"saly" : 6666}]}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"HOBBY":["BASKETBALL", "SING", "SOCCER", "
----------------------------------------------------------------
{"addres":"CHN","age":4444444444444444444444444,"hobby":["basketball","sing","soccer","moive",{"saly":6666}],"id":"55185651515","name":"zzzzzzzzzzzzzzzzzzzzzzzzzzzz"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"addres":"www.huawei.com", "age":88, "name":{"lang":"JAVA"}}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"ADDRES":"WWW.HUAWEI.COM", "AGE":88, "NAME
----------------------------------------------------------------
{"addres":"www.huawei.com","age":88,"hobby":[1,2,34,5],"id":"55185651515","name":{"lang":"JAVA"}}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"BBB":{"CCC":"Andy"}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"BBB":{"CCC":"ANDY"}}}')           
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"Andy"}}}                                  

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"BBB":[true, false, {}]}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"BBB":[TRUE, FALSE, {}]}}')        
----------------------------------------------------------------
{"AAA":{"BBB":[true,false,{}]}}                                 

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"name":"andy"}') from jb_merpatch_tbl where b = 2;

JSONB_MERGEPATCH(A, '{"NAME":"ANDY"}')                          
----------------------------------------------------------------
{"name":"andy"}                                                 

1 rows fetched.

SQL> select jsonb_mergepatch(a, '[4,5,6,1,2,3]') from jb_merpatch_tbl where b = 2;

JSONB_MERGEPATCH(A, '[4,5,6,1,2,3]')                            
----------------------------------------------------------------
[4,5,6,1,2,3]                                                   

1 rows fetched.

SQL> select jsonb_mergepatch(a, '[1,2,3,4]') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '[1,2,3,4]')                                
----------------------------------------------------------------
[1,2,3,4]                                                       

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"name":"andy", "age":12}') from jb_merpatch_tbl where b = 2;

JSONB_MERGEPATCH(A, '{"NAME":"ANDY", "AGE":12}')                
----------------------------------------------------------------
{"age":12,"name":"andy"}                                        

1 rows fetched.

SQL> select jsonb_mergepatch(a, '[1,2,3,4,5,6]') from jb_merpatch_tbl where b = 2;

JSONB_MERGEPATCH(A, '[1,2,3,4,5,6]')                            
----------------------------------------------------------------
[1,2,3,4,5,6]                                                   

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"CCC":"XXXXX"}') from jb_merpatch_tbl where b = 4;

JSONB_MERGEPATCH(A, '{"CCC":"XXXXX"}')                          
----------------------------------------------------------------
{"CCC":"XXXXX"}                                                 

1 rows fetched.

SQL> select jsonb_mergepatch(a, '[{"CCC":"XXXXX"}]') from jb_merpatch_tbl where b = 4;

JSONB_MERGEPATCH(A, '[{"CCC":"XXXXX"}]')                        
----------------------------------------------------------------
[{"CCC":"XXXXX"}]                                               

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":85612}') from jb_merpatch_tbl where b = 4;

JSONB_MERGEPATCH(A, '{"AAA":85612}')                            
----------------------------------------------------------------
{"AAA":85612}                                                   

1 rows fetched.

SQL> 
SQL> --delete
SQL> select jsonb_mergepatch(a, '{"name":null}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"NAME":NULL}')                            
----------------------------------------------------------------
{"addres":"CHN","age":4444444444444444444444444,"hobby":[1,2,34,5],"id":"55185651515"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"id":null}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"ID":NULL}')                              
----------------------------------------------------------------
{"addres":"CHN","age":4444444444444444444444444,"hobby":[1,2,34,5],"name":"zzzzzzzzzzzzzzzzzzzzzzzzzzzz"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"addres":null}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"ADDRES":NULL}')                          
----------------------------------------------------------------
{"age":4444444444444444444444444,"hobby":[1,2,34,5],"id":"55185651515","name":"zzzzzzzzzzzzzzzzzzzzzzzzzzzz"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"addres":null}') from jb_merpatch_tbl where b = 2;

JSONB_MERGEPATCH(A, '{"ADDRES":NULL}')                          
----------------------------------------------------------------
{}                                                              

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"BBB":{"CCC":null}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"BBB":{"CCC":NULL}}}')             
----------------------------------------------------------------
{"AAA":{"BBB":{}}}                                              

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"BBB":null}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"BBB":NULL}}')                     
----------------------------------------------------------------
{"AAA":{}}                                                      

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":null}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":NULL}')                             
----------------------------------------------------------------
{}                                                              

1 rows fetched.

SQL> 
SQL> --insert
SQL> select jsonb_mergepatch(a, '{"AAA":{"BBB":{"CCC":"XXXXX"}}}') from jb_merpatch_tbl where b = 1;

JSONB_MERGEPATCH(A, '{"AAA":{"BBB":{"CCC":"XXXXX"}}}')          
----------------------------------------------------------------
{"addres":"CHN","age":4444444444444444444444444,"hobby":[1,2,34,5],"id":"55185651515","name":"zzzzzzzzzzzzzzzzzzzzzzzzzzzz","AAA":{"BBB":{"CCC":"XXXXX"}}}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"DDD":{"CCC":"XXXXX"}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"DDD":{"CCC":"XXXXX"}}}')          
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"XXXXX"},"DDD":{"CCC":"XXXXX"}}}           

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"DDD":{"EEE":"XXXXX"}, "EEE":{"DDD":"XXXXX"}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"DDD":{"EEE":"XXXXX"}, "EEE":{"DDD"
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"XXXXX"},"DDD":{"EEE":"XXXXX"},"EEE":{"DDD":"XXXXX"}}}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"BBB":{"VVV":"YYYYY"}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"BBB":{"VVV":"YYYYY"}}}')          
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"XXXXX","VVV":"YYYYY"}}}                   

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"FFF":true, "GGG":false}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"FFF":TRUE, "GGG":FALSE}')                
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"XXXXX"}},"FFF":true,"GGG":false}          

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"FFF":{"BBB":{"VVV":"YYYYY", "oooo":"dsadcs"}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"FFF":{"BBB":{"VVV":"YYYYY", "OOOO":"DSADC
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"XXXXX"}},"FFF":{"BBB":{"VVV":"YYYYY","oooo":"dsadcs"}}}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"AAA":{"WWWW":{"VVV":"YYYYY"}}}') from jb_merpatch_tbl where b = 3;

JSONB_MERGEPATCH(A, '{"AAA":{"WWWW":{"VVV":"YYYYY"}}}')         
----------------------------------------------------------------
{"AAA":{"BBB":{"CCC":"XXXXX"},"WWWW":{"VVV":"YYYYY"}}}          

1 rows fetched.

SQL> 
SQL> ------------------------------------
SQL> -- JSONB_SET
SQL> ------------------------------------
SQL> drop table if exists jsonb_set_tbl;

Succeed.

SQL> create table jsonb_set_tbl(a jsonb, b int);

Succeed.

SQL> insert into jsonb_set_tbl values('[{"f1":1,"f2":null},2,null,3]', 1);

1 rows affected.

SQL> insert into jsonb_set_tbl values('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', 2);

1 rows affected.

SQL> insert into jsonb_set_tbl values('{"nickname": "gs", "avatar": "avatar_url", "tags": ["python", "golang", "db"]}', 3);

1 rows affected.

SQL> insert into jsonb_set_tbl values('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', 4);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> --replace
SQL> select jsonb_set(a, '$[0].f1', '[2,3,4]', false returning clob) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0].F1', '[2,3,4]', FALSE RETURNING CLOB)        
----------------------------------------------------------------
[{"f1":[2,3,4],"f2":null},2,null,3]                             

1 rows fetched.

SQL> select jsonb_set(a, '$[0].f1', '[2,3,4]', false returning jsonb) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0].F1', '[2,3,4]', FALSE RETURNING JSONB)       
----------------------------------------------------------------
1C0000000111045404071A1B1B825006080A13663166320344400607083233343233

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[0].f1', '[2,3,4]', false returning jsonb), '$[0].f1') from jsonb_set_tbl where b = 1;

JSONB_QUERY(JSONB_SET(A, '$[0].F1', '[2,3,4]', FALSE RETURNING J
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> select jsonb_set(a, '$[0].f2', '{"name":"hello world"}', false returning clob) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0].F2', '{"NAME":"HELLO WORLD"}', FALSE RETURNIN
----------------------------------------------------------------
[{"f1":1,"f2":{"name":"hello world"}},2,null,3]                 

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[0].f2', '{"name":"hello world"}', false returning jsonb), '$[0].f2') from jsonb_set_tbl where b = 1;

JSONB_QUERY(JSONB_SET(A, '$[0].F2', '{"NAME":"HELLO WORLD"}', FA
----------------------------------------------------------------
{"name":"hello world"}                                          

1 rows fetched.

SQL> select jsonb_set(a, '$[1]', 'true', false returning clob) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[1]', 'TRUE', FALSE RETURNING CLOB)              
----------------------------------------------------------------
[{"f1":1,"f2":null},true,null,3]                                

1 rows fetched.

SQL> select jsonb_value(jsonb_set(a, '$[1]', 'true', false returning jsonb), '$[1]') from jsonb_set_tbl where b = 1;

JSONB_VALUE(JSONB_SET(A, '$[1]', 'TRUE', FALSE RETURNING JSONB),
----------------------------------------------------------------
true                                                            

1 rows fetched.

SQL> select jsonb_set(a, '$[2]', '123456', false returning clob) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[2]', '123456', FALSE RETURNING CLOB)            
----------------------------------------------------------------
[{"f1":1,"f2":null},2,123456,3]                                 

1 rows fetched.

SQL> select jsonb_value(jsonb_set(a, '$[2]', '123456', false returning jsonb), '$[2]') from jsonb_set_tbl where b = 1;

JSONB_VALUE(JSONB_SET(A, '$[2]', '123456', FALSE RETURNING JSONB
----------------------------------------------------------------
123456                                                          

1 rows fetched.

SQL> select jsonb_set(a, '$[3]', 'false', false returning clob) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[3]', 'FALSE', FALSE RETURNING CLOB)             
----------------------------------------------------------------
[{"f1":1,"f2":null},2,null,false]                               

1 rows fetched.

SQL> select jsonb_value(jsonb_set(a, '$[3]', 'false', false returning jsonb), '$[3]') from jsonb_set_tbl where b = 1;

JSONB_VALUE(JSONB_SET(A, '$[3]', 'FALSE', FALSE RETURNING JSONB)
----------------------------------------------------------------
false                                                           

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$.name', '"JDD"') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.NAME', '"JDD"')                                 
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,2,3,4],"name":"JDD"}           

1 rows fetched.

SQL> select jsonb_set(a, '$.age', '1232') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.AGE', '1232')                                   
----------------------------------------------------------------
{"addr":"China","age":1232,"ho":[1,2,3,4],"name":"andy"}        

1 rows fetched.

SQL> select jsonb_set(a, '$.attrs', '["AA", true, {"ccc":34}, [1,2,3,4,5,6,7]]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.ATTRS', '["AA", TRUE, {"CCC":34}, [1,2,3,4,5,6,7
----------------------------------------------------------------
{"addr":"China","age":18,"attrs":["AA",true,{"ccc":34},[1,2,3,4,5,6,7]],"ho":[1,2,3,4],"name":"andy"}

1 rows fetched.

SQL> select jsonb_set(a, '$.ho', '[9,8,7,6]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO', '[9,8,7,6]')                               
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[9,8,7,6],"name":"andy"}          

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[0]', '[9,8,7,6]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[0]', '[9,8,7,6]')                            
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[[9,8,7,6],2,3,4],"name":"andy"}  

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[1]', '[9,8,7,6]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[1]', '[9,8,7,6]')                            
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,[9,8,7,6],3,4],"name":"andy"}  

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[2]', '[9,8,7,6]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[2]', '[9,8,7,6]')                            
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,2,[9,8,7,6],4],"name":"andy"}  

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[3]', '[9,8,7,6]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[3]', '[9,8,7,6]')                            
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,2,3,[9,8,7,6]],"name":"andy"}  

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$.nickname', '"JDD"') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.NICKNAME', '"JDD"')                             
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"JDD","tags":["python","golang","db"]}

1 rows fetched.

SQL> select jsonb_set(a, '$.avatar', '"JDD"') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.AVATAR', '"JDD"')                               
----------------------------------------------------------------
{"avatar":"JDD","nickname":"gs","tags":["python","golang","db"]}

1 rows fetched.

SQL> select jsonb_set(a, '$.tags', '"JDD"') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS', '"JDD"')                                 
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":"JDD"}            

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[0]', '"JDD"') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[0]', '"JDD"')                              
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["JDD","golang","db"]}

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[1]', '"JDD"') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[1]', '"JDD"')                              
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["python","JDD","db"]}

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[2]', '"JDD"') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[2]', '"JDD"')                              
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["python","golang","JDD"]}

1 rows fetched.

SQL> 
SQL> --delete
SQL> select jsonb_set(a, '$[0]') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0]')                                            
----------------------------------------------------------------
[2,null,3]                                                      

1 rows fetched.

SQL> select jsonb_set(a, '$[0].f1') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0].F1')                                         
----------------------------------------------------------------
[{"f2":null},2,null,3]                                          

1 rows fetched.

SQL> select jsonb_set(a, '$[0].f2') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0].F2')                                         
----------------------------------------------------------------
[{"f1":1},2,null,3]                                             

1 rows fetched.

SQL> select jsonb_set(a, '$[1]') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[1]')                                            
----------------------------------------------------------------
[{"f1":1,"f2":null},null,3]                                     

1 rows fetched.

SQL> select jsonb_set(a, '$[2]') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[2]')                                            
----------------------------------------------------------------
[{"f1":1,"f2":null},2,3]                                        

1 rows fetched.

SQL> select jsonb_set(a, '$[3]') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[3]')                                            
----------------------------------------------------------------
[{"f1":1,"f2":null},2,null]                                     

1 rows fetched.

SQL> select jsonb_set(a, '$.name') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.NAME')                                          
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,2,3,4]}                        

1 rows fetched.

SQL> select jsonb_set(a, '$.age') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.AGE')                                           
----------------------------------------------------------------
{"addr":"China","ho":[1,2,3,4],"name":"andy"}                   

1 rows fetched.

SQL> select jsonb_set(a, '$.addr') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.ADDR')                                          
----------------------------------------------------------------
{"age":18,"ho":[1,2,3,4],"name":"andy"}                         

1 rows fetched.

SQL> select jsonb_set(a, '$.ho') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO')                                            
----------------------------------------------------------------
{"addr":"China","age":18,"name":"andy"}                         

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[1, 3]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[1, 3]')                                      
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,3],"name":"andy"}              

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[0, 2]') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[0, 2]')                                      
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[2,4],"name":"andy"}              

1 rows fetched.

SQL> select jsonb_set(a, '$.nickname') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.NICKNAME')                                      
----------------------------------------------------------------
{"avatar":"avatar_url","tags":["python","golang","db"]}         

1 rows fetched.

SQL> select jsonb_set(a, '$.avatar') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.AVATAR')                                        
----------------------------------------------------------------
{"nickname":"gs","tags":["python","golang","db"]}               

1 rows fetched.

SQL> select jsonb_set(a, '$.tags') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS')                                          
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs"}                         

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[0]') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[0]')                                       
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["golang","db"]}  

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[1]') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[1]')                                       
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["python","db"]}  

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[2]') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[2]')                                       
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["python","golang"]}

1 rows fetched.

SQL> 
SQL> --add
SQL> select jsonb_set(a, '$[0].f3','[2,3,4]') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[0].F3','[2,3,4]')                               
----------------------------------------------------------------
[{"f1":1,"f2":null,"f3":[2,3,4]},2,null,3]                      

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[0].f3','[2,3,4]' returning jsonb), '$[0].f3') from jsonb_set_tbl where b = 1;

JSONB_QUERY(JSONB_SET(A, '$[0].F3','[2,3,4]' RETURNING JSONB), '
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> select jsonb_set(a, '$[8]','[2,3,4]') from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[8]','[2,3,4]')                                  
----------------------------------------------------------------
[{"f1":1,"f2":null},2,null,3,[2,3,4]]                           

1 rows fetched.

SQL> select jsonb_set(a, '$[4]', '[true, false]', true returning clob) from jsonb_set_tbl where b = 1;

JSONB_SET(A, '$[4]', '[TRUE, FALSE]', TRUE RETURNING CLOB)      
----------------------------------------------------------------
[{"f1":1,"f2":null},2,null,3,[true,false]]                      

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[4]', '[true, false]', true returning jsonb), '$[4]') from jsonb_set_tbl where b = 1;

JSONB_QUERY(JSONB_SET(A, '$[4]', '[TRUE, FALSE]', TRUE RETURNING
----------------------------------------------------------------
[true,false]                                                    

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$.ccc', '"JDD"') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.CCC', '"JDD"')                                  
----------------------------------------------------------------
{"addr":"China","age":18,"ccc":"JDD","ho":[1,2,3,4],"name":"andy"}

1 rows fetched.

SQL> select jsonb_set(a, '$.AAA', '{"JDD":15}') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.AAA', '{"JDD":15}')                             
----------------------------------------------------------------
{"AAA":{"JDD":15},"addr":"China","age":18,"ho":[1,2,3,4],"name":"andy"}

1 rows fetched.

SQL> select jsonb_set(a, '$.ho[8]', '{"JDD":15}') from jsonb_set_tbl where b = 2;

JSONB_SET(A, '$.HO[8]', '{"JDD":15}')                           
----------------------------------------------------------------
{"addr":"China","age":18,"ho":[1,2,3,4,{"JDD":15}],"name":"andy"}

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$.heigth', '323') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.HEIGTH', '323')                                 
----------------------------------------------------------------
{"avatar":"avatar_url","heigth":323,"nickname":"gs","tags":["python","golang","db"]}

1 rows fetched.

SQL> select jsonb_set(a, '$.AUTO', '{"JDD":15}') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.AUTO', '{"JDD":15}')                            
----------------------------------------------------------------
{"AUTO":{"JDD":15},"avatar":"avatar_url","nickname":"gs","tags":["python","golang","db"]}

1 rows fetched.

SQL> select jsonb_set(a, '$.tags[8]', '["GaussDB", "Zenith", "openGauss"]') from jsonb_set_tbl where b = 3;

JSONB_SET(A, '$.TAGS[8]', '["GAUSSDB", "ZENITH", "OPENGAUSS"]') 
----------------------------------------------------------------
{"avatar":"avatar_url","nickname":"gs","tags":["python","golang","db",["GaussDB","Zenith","openGauss"]]}

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$[0].A3','[2,3,4]') from jsonb_set_tbl where b = 4;

JSONB_SET(A, '$[0].A3','[2,3,4]')                               
----------------------------------------------------------------
[{"A3":[2,3,4],"f0":1,"f1":null,"f2":1,"f4":null,"f5":null,"f6":null,"f7":null,"f8":null},2,null,3]

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[0].A3','[2,3,4]' returning jsonb), '$[0].A3') from jsonb_set_tbl where b = 4;

JSONB_QUERY(JSONB_SET(A, '$[0].A3','[2,3,4]' RETURNING JSONB), '
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$[0].f3','[2,3,4]') from jsonb_set_tbl where b = 4;

JSONB_SET(A, '$[0].F3','[2,3,4]')                               
----------------------------------------------------------------
[{"f0":1,"f1":null,"f2":1,"f3":[2,3,4],"f4":null,"f5":null,"f6":null,"f7":null,"f8":null},2,null,3]

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[0].f3','[2,3,4]' returning jsonb), '$[0].f3') from jsonb_set_tbl where b = 4;

JSONB_QUERY(JSONB_SET(A, '$[0].F3','[2,3,4]' RETURNING JSONB), '
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> 
SQL> select jsonb_set(a, '$[0].gggg','[2,3,4]') from jsonb_set_tbl where b = 4;

JSONB_SET(A, '$[0].GGGG','[2,3,4]')                             
----------------------------------------------------------------
[{"f0":1,"f1":null,"f2":1,"f4":null,"f5":null,"f6":null,"f7":null,"f8":null,"gggg":[2,3,4]},2,null,3]

1 rows fetched.

SQL> select jsonb_query(jsonb_set(a, '$[0].gggg','[2,3,4]' returning jsonb), '$[0].gggg') from jsonb_set_tbl where b = 4;

JSONB_QUERY(JSONB_SET(A, '$[0].GGGG','[2,3,4]' RETURNING JSONB),
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> 
SQL> 
SQL> ------------------------------------
SQL> -- JSONB_ARRAY_LENGTH
SQL> ------------------------------------
SQL> drop table if exists jbal_test_xy;

Succeed.

SQL> create table jbal_test_xy(a jsonb, b int);

Succeed.

SQL> 
SQL> insert into jbal_test_xy values('[]', 1);  

1 rows affected.

SQL> insert into jbal_test_xy values('[null]', 2);  

1 rows affected.

SQL> insert into jbal_test_xy values('[1]', 3);

1 rows affected.

SQL> insert into jbal_test_xy values('[{"one":3323233.24311}]', 4);  

1 rows affected.

SQL> insert into jbal_test_xy values('["one"]', 5);  

1 rows affected.

SQL> insert into jbal_test_xy values('[false]', 6);

1 rows affected.

SQL> insert into jbal_test_xy values('[3323233.24311]', 7);  

1 rows affected.

SQL> insert into jbal_test_xy values('[1,2,3,4]', 8);

1 rows affected.

SQL> insert into jbal_test_xy values('[{"1":1},{"2":2},{"3":3},{"4":4}]', 9);

1 rows affected.

SQL> insert into jbal_test_xy values('["one","two","three","four"]', 10);

1 rows affected.

SQL> insert into jbal_test_xy values('[true,false,false,true]', 11);

1 rows affected.

SQL> insert into jbal_test_xy values('[33.11,11.22,44.33,22.44]', 12);

1 rows affected.

SQL> insert into jbal_test_xy values('[null,null,null,null]', 13);

1 rows affected.

SQL> insert into jbal_test_xy values('[
  2 [{ "firstName": "Brett", "lastName":"McLaughlin"},{ "firstName": "Jason", "lastName":"Hunter"}],
  3 [{ "firstName": "Eric",   "lastName": "Clapton", "instrument": "guitar" },{ "firstName": "Sergei", "lastName": "Rachmaninoff", "instrument": "piano" }]
  4 ]', 14);

1 rows affected.

SQL> insert into jbal_test_xy values('[ [ [1,1,1,1], [1,1,2]],[[1,2,1],[1, 2, 2]],[[1,2,3],[1,2,3,1]]]', 15);

1 rows affected.

SQL> insert into jbal_test_xy values('[ ["one","two","three"],[1,2,3],[1.1,1.2,2.343],[false,false,true],[{"key_1":1},{"key_2":2},{"key_3":3}] ]', 16);

1 rows affected.

SQL> insert into jbal_test_xy values('
  2 [
  3 [{ "firstName": "Brett"}, { "firstName": "Jason", "lastName":"Hunter" },{ "firstName": "Elliotte", "lastName":"Harold"} ],
  4 [{ "firstName": "Isaac", "genre": "science fiction" },{ "firstName": "Tad"}],
  5 [{ "firstName": "Eric", "lastName": "Clapton",  "BWH": [80.1,80.2,80.3]}],
  6 [{ "firstName": "Echo", "lastName": "Hiton",  "BWH": [80.1,80.2,80.3]}],
  7 [{ "firstName": "Kilt", "lastName": "Merbo",  "BWH": [80.1,80.2,80.3]}]
  8 ]', 17);

1 rows affected.

SQL> select jsonb_array_length(a), b from jbal_test_xy order by b;

JSONB_ARRAY_LENGTH(A) B           
--------------------- ------------
0                     1           
1                     2           
1                     3           
1                     4           
1                     5           
1                     6           
1                     7           
4                     8           
4                     9           
4                     10          
4                     11          
4                     12          
4                     13          
2                     14          
3                     15          
5                     16          
5                     17          

17 rows fetched.

SQL> 
SQL> truncate table jbal_test_xy;

Succeed.

SQL> insert into jbal_test_xy values('[343.1341, 11.242, 44.333, 22.4344]', 1);

1 rows affected.

SQL> insert into jbal_test_xy values('[{"osane":3323233.24311}]', 2);  

1 rows affected.

SQL> insert into jbal_test_xy values('{"key":[1,2,3,4,5,6]}', 3);

1 rows affected.

SQL> insert into jbal_test_xy values('{"key1":1,"key2":2,"key3":3,"key4":4}', 4);

1 rows affected.

SQL> insert into jbal_test_xy values('{
  2   "address" : "1007 Mountain Drive",
  3   "rooms" : [ {
  4     "roomNo" : "101",
  5     "personLivedInThisRoom" : "Super Man is rocking"
  6   }, {
  7     "roomNo" : "102",
  8     "personLivedInThisRoom" : "Bat Man is rocking"
  9   }, {
 10     "roomNo" : "201",
 11     "personLivedInThisRoom" : "Rachel is rocking"
 12   } ]
 13 }', 5);

1 rows affected.

SQL> select jsonb_array_length(a), b from jbal_test_xy order by b;

CT-02508, JSONB format error, the data type is not json array.
SQL> select jsonb_array_length(a), b from jbal_test_xy where b < 3 order by b;

JSONB_ARRAY_LENGTH(A) B           
--------------------- ------------
4                     1           
1                     2           

2 rows fetched.

SQL> select jsonb_array_length(a), b from jbal_test_xy where b = 3 order by b;

CT-02508, JSONB format error, the data type is not json array.
SQL> select jsonb_array_length(a), b from jbal_test_xy where b > 3 order by b;

CT-02508, JSONB format error, the data type is not json array.
SQL> 
SQL> drop table if exists jbal_test_xy;

Succeed.

SQL> 
SQL> ------------------------------------
SQL> -- JSONB TYPE
SQL> ------------------------------------
SQL> drop table if exists jbt_test_jdd;

Succeed.

SQL> create table jbt_test_jdd(a jsonb, b int);

Succeed.

SQL> desc jbt_test_jdd;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
A                                            BLOB                                
B                                            BINARY_INTEGER                      

SQL> 
SQL> insert into jbt_test_jdd values('dsfsdd', 1);  -- syntax error

CT-02504, JSON syntax error, input data is not valid JSON
SQL> insert into jbt_test_jdd values(123456, 1);  -- Inconsistent datatypes

CT-00606, [1:33]Inconsistent datatypes, expected BLOB - got BINARY_INTEGER
SQL> insert into jbt_test_jdd values(1234.056, 1);  -- Inconsistent datatypes

CT-00606, [1:33]Inconsistent datatypes, expected BLOB - got NUMBER
SQL> insert into jbt_test_jdd values(true, 1);  -- Inconsistent datatypes

CT-00606, [1:33]Inconsistent datatypes, expected BLOB - got BOOLEAN
SQL> insert into jbt_test_jdd values(false, 1);  -- Inconsistent datatypes

CT-00606, [1:33]Inconsistent datatypes, expected BLOB - got BOOLEAN
SQL> insert into jbt_test_jdd values(current_timestamp, 1);  -- Inconsistent datatypes

CT-00606, [1:33]Inconsistent datatypes, expected BLOB - got TIMESTAMP_TZ
SQL> 
SQL> insert into jbt_test_jdd values('{"count":234}', 1);

1 rows affected.

SQL> insert into jbt_test_jdd values('[{"count":234}]', 2);

1 rows affected.

SQL> select * from jbt_test_jdd;

A                                                                B           
---------------------------------------------------------------- ------------
0C000000011181400409636F756E74323334                             1           
0F000000011101500381400409636F756E74323334                       2           

2 rows fetched.

SQL> select length(a) from jbt_test_jdd;

LENGTH(A)           
--------------------
18                  
21                  

2 rows fetched.

SQL> select jsonb_query(a, '$') from jbt_test_jdd;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"count":234}                                                   
[{"count":234}]                                                 

2 rows fetched.

SQL> 
SQL> --
SQL> drop table if exists inner_table_test;

Succeed.

SQL> create table inner_table_test(a clob check(a is json), b int);

Succeed.

SQL> insert into inner_table_test values('{"count":234}', 1);

1 rows affected.

SQL> insert into inner_table_test values('[{"count":234}]', 2);

1 rows affected.

SQL> 
SQL> truncate table jbt_test_jdd;

Succeed.

SQL> insert into jbt_test_jdd select * from inner_table_test;

2 rows affected.

SQL> select * from jbt_test_jdd;

A                                                                B           
---------------------------------------------------------------- ------------
0C000000011181400409636F756E74323334                             1           
0F000000011101500381400409636F756E74323334                       2           

2 rows fetched.

SQL> select length(a) from jbt_test_jdd;

LENGTH(A)           
--------------------
18                  
21                  

2 rows fetched.

SQL> select jsonb_query(a, '$') from jbt_test_jdd;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"count":234}                                                   
[{"count":234}]                                                 

2 rows fetched.

SQL> 
SQL> --
SQL> drop table if exists inner_table_test;

Succeed.

SQL> create table inner_table_test(a varbinary(100), b int);

Succeed.

SQL> insert into inner_table_test select * from jbt_test_jdd;

2 rows affected.

SQL> select bin2hex(a) from inner_table_test;

BIN2HEX(A)                                                      
----------------------------------------------------------------
0x0C000000011181400409636F756E74323334                          
0x0F000000011101500381400409636F756E74323334                    

2 rows fetched.

SQL> select length(a) from inner_table_test;

LENGTH(A)           
--------------------
18                  
21                  

2 rows fetched.

SQL> select jsonb_query(a, '$') from inner_table_test;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"count":234}                                                   
[{"count":234}]                                                 

2 rows fetched.

SQL> 
SQL> truncate table jbt_test_jdd;

Succeed.

SQL> insert into jbt_test_jdd select * from inner_table_test;

2 rows affected.

SQL> select * from jbt_test_jdd;

A                                                                B           
---------------------------------------------------------------- ------------
0C000000011181400409636F756E74323334                             1           
0F000000011101500381400409636F756E74323334                       2           

2 rows fetched.

SQL> select length(a) from jbt_test_jdd;

LENGTH(A)           
--------------------
18                  
21                  

2 rows fetched.

SQL> select jsonb_query(a, '$') from jbt_test_jdd;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"count":234}                                                   
[{"count":234}]                                                 

2 rows fetched.

SQL> 
SQL> --
SQL> drop table if exists inner_table_test;

Succeed.

SQL> create table inner_table_test(a blob, b int);

Succeed.

SQL> insert into inner_table_test select * from jbt_test_jdd;

2 rows affected.

SQL> select * from inner_table_test;

A                                                                B           
---------------------------------------------------------------- ------------
0C000000011181400409636F756E74323334                             1           
0F000000011101500381400409636F756E74323334                       2           

2 rows fetched.

SQL> select length(a) from inner_table_test;

LENGTH(A)           
--------------------
18                  
21                  

2 rows fetched.

SQL> select jsonb_query(a, '$') from inner_table_test;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"count":234}                                                   
[{"count":234}]                                                 

2 rows fetched.

SQL> 
SQL> truncate table jbt_test_jdd;

Succeed.

SQL> insert into jbt_test_jdd select * from inner_table_test;

2 rows affected.

SQL> select * from jbt_test_jdd;

A                                                                B           
---------------------------------------------------------------- ------------
0C000000011181400409636F756E74323334                             1           
0F000000011101500381400409636F756E74323334                       2           

2 rows fetched.

SQL> select length(a) from jbt_test_jdd;

LENGTH(A)           
--------------------
18                  
21                  

2 rows fetched.

SQL> select jsonb_query(a, '$') from jbt_test_jdd;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"count":234}                                                   
[{"count":234}]                                                 

2 rows fetched.

SQL> 
SQL> drop table if exists inner_table_test;

Succeed.

SQL> drop table if exists jbt_test_jdd;

Succeed.

SQL> 
SQL> ------------------------------------
SQL> -- OTHER TEST
SQL> ------------------------------------
SQL> drop table if exists tbl_jsonb_ft3_test;

Succeed.

SQL> create table tbl_jsonb_ft3_test(a jsonb, b int primary key);

Succeed.

SQL> insert into tbl_jsonb_ft3_test values('{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2}, "OME_A":3}}',2);

1 rows affected.

SQL> select jsonb_query(a, '$') from tbl_jsonb_ft3_test where b = 2;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"A":{"ADC":{"BBC":"2"},"KMP":"1","OME":3},"B":{"ADC_A":{"BBC_A":2},"KMP_A":1,"OME_A":3}}

1 rows fetched.

SQL> select jsonb_value(a, '$.A.OME') from tbl_jsonb_ft3_test where b = 2;

JSONB_VALUE(A, '$.A.OME')                                       
----------------------------------------------------------------
3                                                               

1 rows fetched.

SQL> select json_query('{"A":{"OME":{"BBC":30}}}', '$.A.OME');

JSON_QUERY('{"A":{"OME":{"BBC":30}}}', '$.A.OME')               
----------------------------------------------------------------
{"BBC":30}                                                      

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"A":{"OME":{"BBC":30}}}') from tbl_jsonb_ft3_test where b = 2;

JSONB_MERGEPATCH(A, '{"A":{"OME":{"BBC":30}}}')                 
----------------------------------------------------------------
{"A":{"ADC":{"BBC":"2"},"KMP":"1","OME":{"BBC":30}},"B":{"ADC_A":{"BBC_A":2},"KMP_A":1,"OME_A":3}}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"A":{"OME":89}}') from tbl_jsonb_ft3_test where b = 2;

JSONB_MERGEPATCH(A, '{"A":{"OME":89}}')                         
----------------------------------------------------------------
{"A":{"ADC":{"BBC":"2"},"KMP":"1","OME":89},"B":{"ADC_A":{"BBC_A":2},"KMP_A":1,"OME_A":3}}

1 rows fetched.

SQL> 
SQL> insert into tbl_jsonb_ft3_test values('{"addres":{"home":"xxx","company":"xxx"}, "age":0, "name":"xxx", "hobby":[{"key1":{"key2":10}},"music","run","food"]}',3);

1 rows affected.

SQL> select jsonb_mergepatch(a, '{"addres":{"home":"xxx","company":"xxx"}, "age":0, "name":"xxx", "hobby":[{"key1":{"key8":8, "key2":5}}]}') from tbl_jsonb_ft3_test where b = 3;

JSONB_MERGEPATCH(A, '{"ADDRES":{"HOME":"XXX","COMPANY":"XXX"}, "
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"xxx"},"age":0,"hobby":[{"key1":{"key2":5,"key8":8}}],"name":"xxx"}

1 rows fetched.

SQL> select jsonb_set(a, '$.hobby[0].key1.key2', 18) from tbl_jsonb_ft3_test where b = 3;

JSONB_SET(A, '$.HOBBY[0].KEY1.KEY2', 18)                        
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"xxx"},"age":0,"hobby":[{"key1":{"key2":18}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> select jsonb_set(a, '$.hobby[0].key1', '{"key2":2}') from tbl_jsonb_ft3_test where b = 3;

JSONB_SET(A, '$.HOBBY[0].KEY1', '{"KEY2":2}')                   
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"xxx"},"age":0,"hobby":[{"key1":{"key2":2}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> select jsonb_set(a, '$.hobby[0].key1', '{"key8":8, "key6":{"key8":{"key8":8, "key6":6, "key9":{"key8":{"key8":8, "key6":6, "key9":9}, "key6":6, "key9":9}}, "key6":6, "key9":9}, "key9":9}') from tbl_jsonb_ft3_test where b = 3;

JSONB_SET(A, '$.HOBBY[0].KEY1', '{"KEY8":8, "KEY6":{"KEY8":{"KEY
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"xxx"},"age":0,"hobby":[{"key1":{"key6":{"key6":6,"key8":{"key6":6,"key8":8,"key9":{"key6":6,"key8":{"key6":6,"key8":8,"key9":9},"key9":9}},"key9":9},"key8":8,"key9":9}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> select jsonb_query(a, '$') from tbl_jsonb_ft3_test where b = 3;

JSONB_QUERY(A, '$')                                             
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"xxx"},"age":0,"hobby":[{"key1":{"key2":10}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> 
SQL> select jsonb_mergepatch(a, '{"addres":{"home":{"BBC":30}}}') from tbl_jsonb_ft3_test where b = 3;

JSONB_MERGEPATCH(A, '{"ADDRES":{"HOME":{"BBC":30}}}')           
----------------------------------------------------------------
{"addres":{"company":"xxx","home":{"BBC":30}},"age":0,"hobby":[{"key1":{"key2":10}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"addres":{"home":"ccxbbbbbbbbbbbbbbsssssc"}}') from tbl_jsonb_ft3_test where b = 3;

JSONB_MERGEPATCH(A, '{"ADDRES":{"HOME":"CCXBBBBBBBBBBBBBBSSSSSC"
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"ccxbbbbbbbbbbbbbbsssssc"},"age":0,"hobby":[{"key1":{"key2":10}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"name":{"home":{"BBC":30}}}') from tbl_jsonb_ft3_test where b = 3;

JSONB_MERGEPATCH(A, '{"NAME":{"HOME":{"BBC":30}}}')             
----------------------------------------------------------------
{"addres":{"company":"xxx","home":"xxx"},"age":0,"hobby":[{"key1":{"key2":10}},"music","run","food"],"name":{"home":{"BBC":30}}}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"addres":{"home":{"BBC":{"key8":8, "key6":{"key8":{"key8":8, "key6":6, "key9":{"key8":{"key8":8, "key6":6, "key9":9}, "key6":6, "key9":9}}, "key6":6, "key9":9}, "key9":9}}}}') from tbl_jsonb_ft3_test where b = 3;

JSONB_MERGEPATCH(A, '{"ADDRES":{"HOME":{"BBC":{"KEY8":8, "KEY6":
----------------------------------------------------------------
{"addres":{"company":"xxx","home":{"BBC":{"key6":{"key6":6,"key8":{"key6":6,"key8":8,"key9":{"key6":6,"key8":{"key6":6,"key8":8,"key9":9},"key9":9}},"key9":9},"key8":8,"key9":9}}},"age":0,"hobby":[{"key1":{"key2":10}},"music","run","food"],"name":"xxx"}

1 rows fetched.

SQL> 
SQL> insert into tbl_jsonb_ft3_test values('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}',4);

1 rows affected.

SQL> select jsonb_set(to_blob(a),'$.age') from tbl_jsonb_ft3_test where b=4;

JSONB_SET(TO_BLOB(A),'$.AGE')                                   
----------------------------------------------------------------
{"addr":"xxx","case":{"A":1,"B":2,"C":3},"ho":[0,0,0,{"o":0}],"manny":false,"name":"xxx"}

1 rows fetched.

SQL> select jsonb_set(a,'$.age') from tbl_jsonb_ft3_test where b=4;

JSONB_SET(A,'$.AGE')                                            
----------------------------------------------------------------
{"addr":"xxx","case":{"A":1,"B":2,"C":3},"ho":[0,0,0,{"o":0}],"manny":false,"name":"xxx"}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"A":{"P2":{"Z3":{"T3":{"K3":1000, "K2":1000}}, "Z2":856}}}') from tbl_jsonb_ft3_test where b = 4;

JSONB_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T3":{"K3":1000, "K2":100
----------------------------------------------------------------
{"addr":"xxx","age":0,"case":{"A":1,"B":2,"C":3},"ho":[0,0,0,{"o":0}],"manny":false,"name":"xxx","A":{"P2":{"Z2":856,"Z3":{"T3":{"K2":1000,"K3":1000}}}}}

1 rows fetched.

SQL> drop table if exists tbl_jsonb_ft3_test;

Succeed.

SQL> 
SQL> --clob can not insert into non-jsonb column
SQL> drop table if exists jdd_jsonb_t1;

Succeed.

SQL> drop table if exists jdd_jsonb_t2;

Succeed.

SQL> create table jdd_jsonb_t1(a clob);

Succeed.

SQL> create table jdd_jsonb_t2(a blob);

Succeed.

SQL> insert into jdd_jsonb_t1 values('fsdffcwsdfcvrwefregfver#@%$&^^$%&#$%^$#@%@$%#$%$#');

1 rows affected.

SQL> insert into jdd_jsonb_t2 select * from jdd_jsonb_t1;

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_clob('fsdffcwsdfcvrwefregfver#@%$&^^$%&#$%^$#@%@$%#$%$#'));

1 rows affected.

SQL> drop table if exists jdd_jsonb_t1;

Succeed.

SQL> drop table if exists jdd_jsonb_t2;

Succeed.

SQL> create table jdd_jsonb_t1(a clob check (a is json));

Succeed.

SQL> create table jdd_jsonb_t2(a jsonb);

Succeed.

SQL> insert into jdd_jsonb_t1 values('fsdffcwsdfcvrwefregfver#@%$&^^$%&#$%^$#@%@$%#$%$#');

CT-01127, Check constraint violated
SQL> insert into jdd_jsonb_t1 values('{"dscdsd":"dsa4334fdsc", "134":"3454343", "324324":"345", "dscds234325d":"dsafd3443sc"}');

1 rows affected.

SQL> insert into jdd_jsonb_t2 select * from jdd_jsonb_t1;

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_clob('fsdffcwsdfcvrwefregfver#@%$&^^$%&#$%^$#@%@$%#$%$#'));

CT-02504, JSON syntax error, input data is not valid JSON
SQL> insert into jdd_jsonb_t2 values(to_clob('{"dscdsd":"dsa4334fdsc", "134":"3454343", "324324":"345", "dscds234325d":"dsafd3443sc"}'));

1 rows affected.

SQL> drop table if exists jdd_jsonb_t1;

Succeed.

SQL> drop table if exists jdd_jsonb_t2;

Succeed.

SQL> 
SQL> --valiate the binary data into jsonb column
SQL> drop table if exists jdd_jsonb_t2;

Succeed.

SQL> create table jdd_jsonb_t2(a jsonb);

Succeed.

SQL> insert into jdd_jsonb_t2 values(to_blob('01000000011100'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('01000000011200'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('01000000013100')); --error

CT-02508, JSONB format error, invalid header length of jsonb format.
SQL> insert into jdd_jsonb_t2 values(to_blob('01000000010100')); --error

CT-02508, JSONB format error, head bytes number is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('01000000011800')); --error

CT-02508, JSONB format error, entry bytes number is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('01000000011100000000')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('11000000011100')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('111111111111111111111')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('2143534667532432142523525245245346356')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('01000000011100111111111111111111111')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_clob('{"D":"dsa4334fdsc", "Z":"3454343", "A":"345", "R":"dsafd3443sc"}'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118433330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001110433330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118333330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118443340B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118533330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433')); --error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> insert into jdd_jsonb_t2 values(to_blob('5F00000001118433330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000003118433330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433')); --error

CT-02508, JSONB format error, version is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001218433330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433')); --error

CT-02508, JSONB format error, invalid headers of jsonb format.
SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118433330B0C0D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433DDDDDDDDDDDDDD')); --error

CT-02508, JSONB format error, length is not correct.
SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118433330B0C0D0E0F121D28414141414141414141414141414141414141414141414141414141414141414141414141'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118433330B0C0D0E0F121D284144525A3333333333333333333333333333333333333333333333333333333333333333'));

1 rows affected.

SQL> insert into jdd_jsonb_t2 values(to_blob('2F00000001118433330B0C2D0E0F121D284144525A3334356473613433333466647363647361666433343433736333343534333433')); --error

CT-02508, JSONB format error, invalid entry offset of jsonb format.
SQL> select jsonb_query(a, '$') val from jdd_jsonb_t2 order by val;

VAL                                                             
----------------------------------------------------------------
["A","D","R","Z345dsa4334fdscdsafd3443sc3454343"]               
[]                                                              
[]                                                              
{"A":"333","D":"33333333333","R":"33333333333","Z":"3333333"}   
{"A":"345","D":"dsa4334fdsc","R":"dsafd3443sc","Z":"3454343"}   
{"A":"345","D":"dsa4334fdsc","R":"dsafd3443sc","Z":"3454343"}   
{"A":"AAA","A":"AAAAAAAAAAA","A":"AAAAAAAAAAA","A":"AAAAAAA"}   
{"A":"Z","D":"345","R":"dsa4334fdscdsafd3443sc3454343"}         
{"A":345,"D":"dsa4334fdsc","R":"dsafd3443sc","Z":3454343}       

9 rows fetched.

SQL> drop table if exists jdd_jsonb_t2;

Succeed.

SQL> 
SQL> --support raw tyype to store jsonb
SQL> drop table if exists tbl_jsonb_006;

Succeed.

SQL> CREATE GLOBAL TEMPORARY TABLE tbl_jsonb_006(
  2 id BINARY_INTEGER not null,
  3 c_jsonb jsonb default 0x390000000111044405070A0B0B2D313030024504063130024504063230024504063330024504063430823506080A0E6B317331676F6F640244040638303930
  4 ) ON COMMIT DELETE ROWS;

Succeed.

SQL> insert into tbl_jsonb_006 (id)values(1);

1 rows affected.

SQL> select jsonb_query(c_jsonb, '$' returning varchar2(32767)) from tbl_jsonb_006;

JSONB_QUERY(C_JSONB, '$' RETURNING VARCHAR2(32767))
----------------------------------------------------------------
[-10,0,null,[10,[20,[30,[40,{"k1":"good","s1":[80,90]}]]]]]

1 rows fetched.

SQL> drop table if exists tbl_jsonb_006;

Succeed.

SQL> 
SQL> drop table if exists tbl_jsonb_006;

Succeed.

SQL> create table tbl_jsonb_006(a raw);

CT-00601, [1:33]Sql syntax error: the column size must be specified
SQL> create table tbl_jsonb_006(a raw(256));

Succeed.

SQL> insert into tbl_jsonb_006 values(0x390000000111044405070A0B0B2D313030024504063130024504063230024504063330024504063430823506080A0E6B317331676F6F640244040638303930);

1 rows affected.

SQL> select jsonb_query(a, '$') from tbl_jsonb_006;

JSONB_QUERY(A, '$')
----------------------------------------------------------------
[-10,0,null,[10,[20,[30,[40,{"k1":"good","s1":[80,90]}]]]]]

1 rows fetched.

SQL> drop table if exists tbl_jsonb_006;

Succeed.

SQL> 
SQL> --create table as select
SQL> drop table if exists jdd_jsonb_tbl_test_1;

Succeed.

SQL> create table jdd_jsonb_tbl_test_1(a jsonb not null) format csf;

Succeed.

SQL> 
SQL> drop table if exists jdd_jsonb_tbl_test_2;

Succeed.

SQL> create table jdd_jsonb_tbl_test_2 as select * from jdd_jsonb_tbl_test_1;

Succeed.

SQL> select IS_JSONB from adm_tab_cols where TABLE_NAME = upper('jdd_jsonb_tbl_test_2');

IS_JSONB
--------
TRUE

1 rows fetched.

SQL> insert into jdd_jsonb_tbl_test_2 values('{"name":"Andy"}');

1 rows affected.

SQL> select jsonb_query(a, '$') from jdd_jsonb_tbl_test_2;

JSONB_QUERY(A, '$')
----------------------------------------------------------------
{"name":"Andy"}

1 rows fetched.

SQL> 
SQL> drop table if exists jdd_jsonb_tbl_test_3;

Succeed.

SQL> create table jdd_jsonb_tbl_test_3 as select a from jdd_jsonb_tbl_test_1;

Succeed.

SQL> select IS_JSONB from adm_tab_cols where TABLE_NAME = upper('jdd_jsonb_tbl_test_3');

IS_JSONB
--------
TRUE

1 rows fetched.

SQL> insert into jdd_jsonb_tbl_test_3 values('{"name":"Andy"}');

1 rows affected.

SQL> select jsonb_value(a, '$.name') from jdd_jsonb_tbl_test_3;

JSONB_VALUE(A, '$.NAME')
----------------------------------------------------------------
Andy

1 rows fetched.

SQL> 
SQL> drop table if exists jdd_jsonb_tbl_test_1;

Succeed.

SQL> drop table if exists jdd_jsonb_tbl_test_2;

Succeed.

SQL> drop table if exists jdd_jsonb_tbl_test_3;

Succeed.

SQL> 
SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> create table tbl_jsonb_025(id int,c_json clob,c_jsonb jsonb);

Succeed.

SQL> insert into tbl_jsonb_025 values(1,'[{"k1":[{"s1":["a","sd","-100",[0,100,[{"s2":"rr","s3":"周杰伦"}]]]},1000,"200we",{"d1":{"t1":"被子","t2":9999}}],"k2":{"q2":{"f2":"水杯","f3":"手机","f4":"fdfs","f5":["fdf",[100,200,"re",[1000,2000,[3000,{"w1":"终结者"}]]]]}},"k3":[{"g1":100},{"g2":{"g3":"nice"}},10000,{"g4":{"g5":{"g6":"2323","g7":-100000}}},"good boy","giraffe"]},{"":[null,0,-100,{"a2":null,"水果":"香蕉"},["富贵竹","panda","@#$$",[1000,"鼠标",null]]]},[100,[200,[300,[400,[500,[{"结果":"死机"}]]]]]],{"h1":{"h2":{"h3":{"h4":{"h5":["中国好娃娃"]}}}}}]','[{"k1":[{"s1":["a","sd","-100",[0,100,[{"s2":"rr","s3":"周杰伦"}]]]},1000,"200we",{"d1":{"t1":"被子","t2":9999}}],"k2":{"q2":{"f2":"水杯","f3":"手机","f4":"fdfs","f5":["fdf",[100,200,"re",[1000,2000,[3000,{"w1":"终结者"}]]]]}},"k3":[{"g1":100},{"g2":{"g3":"nice"}},10000,{"g4":{"g5":{"g6":"2323","g7":-100000}}},"good boy","giraffe"]},{"":[null,0,-100,{"a2":null,"水果":"香蕉"},["富贵竹","panda","@#$$",[1000,"鼠标",null]]]},[100,[200,[300,[400,[500,[{"结果":"死机"}]]]]]],{"h1":{"h2":{"h3":{"h4":{"h5":["中国好娃娃"]}}}}}]');

1 rows affected.

SQL> insert into tbl_jsonb_025 values(2,'["",""]', '["",""]');

1 rows affected.

SQL> commit;

Succeed.

SQL> select jsonb_query(c_jsonb,'$' with wrapper error on error ) from tbl_jsonb_025 order by id;

JSONB_QUERY(C_JSONB,'$' WITH WRAPPER ERROR ON ERROR )
----------------------------------------------------------------
[[{"k1":[{"s1":["a","sd","-100",[0,100,[{"s2":"rr","s3":"周杰伦"}]]]},1000,"200we",{"d1":{"t1":"被子","t2":9999}}],"k2":{"q2":{"f2":"水杯","f3":"手机","f4":"fdfs","f5":["fdf",[100,200,"re",[1000,2000,[3000,{"w1":"终结者"}]]]]}},"k3":[{"g1":100},{"g2":{"g3":"nice"}},10000,{"g4":{"g5":{"g6":"2323","g7":-100000}}},"good boy","giraffe"]},{"":[null,0,-100,{"a2":null,"水果":"香蕉"},["富贵竹","panda","@#$$",[1000,"鼠标",null]]]},[100,[200,[300,[400,[500,[{"结果":"死机"}]]]]]],{"h1":{"h2":{"h3":{"h4":{"h5":["中国好娃娃"]}}}}}]]
[["",""]]

2 rows fetched.

SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> 
SQL> --DTS202107190GMSSWP1400
SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> create table tbl_jsonb_025(id int,c_json clob,c_jsonb jsonb);

Succeed.

SQL> insert into tbl_jsonb_025 values(1,'[{"k1":"lili","k2":[10,{"k3":20}],"k3":{"k4":"语文","k5":"数学"}},{"k1":"luna","k2":[100,{"k3":200}],"k3":{"k4":"物理","k5":"化学"}},{"k1":"joyh","k2":[1000,{"k3":2000}],"k3":{"k4":"高数","k5":"生物"}}]','[{"k1":"lili","k2":[10,{"k3":20}],"k3":{"k4":"语文","k5":"数学"}},{"k1":"luna","k2":[100,{"k3":200}],"k3":{"k4":"物理","k5":"化学"}},{"k1":"joyh","k2":[1000,{"k3":2000}],"k3":{"k4":"高数","k5":"生物"}}]');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select jsonb_mergepatch(t1.c_jsonb,'[{"k1":"lili","k2":[10,{"k3":20}],"k3":{"k4":"语文","k5":"数学"}},{"k1":"luna","k2":[100,{"k3":200}],"k3":{"k4":"物理","k5":"化学"}},{"k1":"joyh","k2":[1000,{"k3":2000}],"k3":{"k4":"高数","k5":"生物"}},{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"数学"}}]' returning jsonb error on error) from tbl_jsonb_025 t1;

JSONB_MERGEPATCH(T1.C_JSONB,'[{"K1":"LILI","K2":[10,{"K3":20}],"
----------------------------------------------------------------
F10000000111045555073E77B2833550090B0D0F13216B316B326B336C696C69024504063130814004066B333230823306080A106B346B35E8AFADE69687...

1 rows fetched.

SQL> select jsonb_mergepatch(t1.c_jsonb,'[]' returning jsonb error on error) from tbl_jsonb_025 t1;

JSONB_MERGEPATCH(T1.C_JSONB,'[]' RETURNING JSONB ERROR ON ERROR)
----------------------------------------------------------------
01000000011100

1 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_mergepatch(t1.c_jsonb,'[{"k1":"lili","k2":[10,{"k3":20}],"k3":{"k4":"语文","k5":"数学"}},{"k1":"luna","k2":[100,{"k3":200}],"k3":{"k4":"物理","k5":"化学"}},{"k1":"joyh","k2":[1000,{"k3":2000}],"k3":{"k4":"高数","k5":"生物"}},{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"数学"}}]' returning jsonb error on error),'$[*]' error on error columns(c1 varchar2(10) path '$.k1',c4 varchar2(10) path '$.k3.k4',c6 for ordinality)) t2;

C1                                                           C4                                                           C6
------------------------------------------------------------ ------------------------------------------------------------ --------------------
lili                                                         语文                                                       1
luna                                                         物理                                                       2
joyh                                                         高数                                                       3
esmen                                                        english                                                      4

4 rows fetched.

SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> 
SQL> --support string with any length.
SQL> drop table if exists test_json_src_1;

Succeed.

SQL> create table test_json_src_1(a clob);

Succeed.

SQL> insert into test_json_src_1 values(lpad('dscds', 8000, 'asdcsaf'));

1 rows affected.

SQL> update test_json_src_1 set a = a || a;

1 rows affected.

SQL> update test_json_src_1 set a = a || a;

1 rows affected.

SQL> update test_json_src_1 set a = a || a;

1 rows affected.

SQL> update test_json_src_1 set a = a || a;

1 rows affected.

SQL> update test_json_src_1 set a = a || lpad('dscds', 8000, 'asdcsaf');

1 rows affected.

SQL> update test_json_src_1 set a = '{"name":"' || a || '"}';

1 rows affected.

SQL> select length(a) from test_json_src_1;

LENGTH(A)
--------------------
136011

1 rows fetched.

SQL> select 1 from test_json_src_1 where a is json;

1
------------
1

1 rows fetched.

SQL> select length(json_value(a, '$.name' returning clob)) val from test_json_src_1;

VAL
--------------------
136002

1 rows fetched.

SQL> select length(json_query(a, '$' returning clob)) val from test_json_src_1;

VAL
--------------------
136011

1 rows fetched.

SQL> 
SQL> drop table if exists test_jsonb_dst;

Succeed.

SQL> create table test_jsonb_dst(a jsonb);

Succeed.

SQL> insert into test_jsonb_dst select * from test_json_src_1;

1 rows affected.

SQL> select length(jsonb_value(a, '$.name' returning clob)) val from test_jsonb_dst;

VAL
--------------------
136002

1 rows fetched.

SQL> select length(jsonb_query(a, '$' returning clob)) val from test_jsonb_dst;

VAL
--------------------
136011

1 rows fetched.

SQL> 
SQL> drop table if exists test_json_src_1;

Succeed.

SQL> drop table if exists test_jsonb_dst;

Succeed.

SQL> 
SQL> --DTS2021071905Y3BMP1D00
SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> create table tbl_jsonb_025(id int,c_json clob,c_jsonb jsonb);

Succeed.

SQL> insert into tbl_jsonb_025 values(1,'[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}}]','[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}}]');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select jsonb_set(t1.c_jsonb,'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"Math"}}' returning varchar2(1000) error on error) from tbl_jsonb_025 t1;

JSONB_SET(T1.C_JSONB,'$[4]','{"K1":"ESMEN","K2":[10000,{"K3":200
----------------------------------------------------------------
[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}},{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"Math"}}]

1 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(jsonb_set(t1.c_jsonb,'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning varchar2(1000) error on error),'$[*]' columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3
esmen                                                        english                                                          4

4 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(jsonb_set(jsonb_query(jsonb_query(jsonb_query(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning varchar2(1000) error on error),'$[*]' columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3
esmen                                                        english                                                          4

4 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(jsonb_set(jsonb_query(jsonb_query(jsonb_query(jsonb_query(jsonb_set(jsonb_set(t1.c_jsonb,'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning jsonb error on error),'$[5]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$[6]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning varchar2(1000) error on error),'$[*]' columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3
esmen                                                        english                                                          4
esmen                                                        english                                                          5
esmen                                                        english                                                          6

6 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(json_set(t1.c_json,'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning varchar2(1000) error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3
esmen                                                        english                                                          4

4 rows fetched.

SQL> select jsonb_query(t1.c_jsonb,'$' returning varchar2(1000) error on error) from tbl_jsonb_025 t1;

JSONB_QUERY(T1.C_JSONB,'$' RETURNING VARCHAR2(1000) ERROR ON ERR
----------------------------------------------------------------
[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}}]

1 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(jsonb_query(t1.c_jsonb,'$' returning varchar2(1000) error on error),'$[*]'   columns(c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C4                                                               C6
---------------------------------------------------------------- --------------------
Chinese                                                          1
PYH                                                              2
High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(jsonb_query(t1.c_jsonb,'$' returning varchar2(1000) error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> 
SQL> select t2.* from tbl_jsonb_025 t1,json_table(jsonb_query(t1.c_jsonb,'$' returning clob error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(json_query(t1.c_json,'$' returning varchar2(1000) error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,json_table(t1.c_json,'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_query(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$' returning jsonb error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_query(jsonb_query(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_query(jsonb_query(jsonb_query(jsonb_query(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(c_jsonb,'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3

3 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_set(t1.c_jsonb,'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning jsonb error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3
esmen                                                        english                                                          4

4 rows fetched.

SQL> select t2.* from tbl_jsonb_025 t1,jsonb_table(jsonb_set(jsonb_set(t1.c_jsonb,'$[4]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning jsonb error on error),'$[5]','{"k1":"esmen","k2":[10000,{"k3":20000}],"k3":{"k4":"english","k5":"math"}}' returning jsonb error on error),'$[*]'   columns(c1 varchar2(10) path '$.k1',c4 varchar2(100) path '$.k3.k4',c6 for ordinality)) t2 order by c6;

C1                                                           C4                                                               C6
------------------------------------------------------------ ---------------------------------------------------------------- --------------------
lili                                                         Chinese                                                          1
luna                                                         PYH                                                              2
joyh                                                         High                         QQ                         Math     3
esmen                                                        english                                                          4
esmen                                                        english                                                          5

5 rows fetched.

SQL> 
SQL> select json_query(t1.c_json,'$' returning varchar2(1000) error on error) from tbl_jsonb_025 t1;

JSON_QUERY(T1.C_JSON,'$' RETURNING VARCHAR2(1000) ERROR ON ERROR
----------------------------------------------------------------
[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}}]

1 rows fetched.

SQL> select jsonb_query(jsonb_query(jsonb_query(jsonb_query(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning varchar2(1000) error on error) from tbl_jsonb_025 t1;

JSONB_QUERY(JSONB_QUERY(JSONB_QUERY(JSONB_QUERY(JSONB_QUERY(T1.C
----------------------------------------------------------------
[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}}]

1 rows fetched.

SQL> select json_query(jsonb_query(jsonb_query(jsonb_query(jsonb_query(t1.c_jsonb,'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning jsonb error on error),'$' returning varchar2(1000) error on error),'$' returning varchar2(1000) error on error) from tbl_jsonb_025 t1;

JSON_QUERY(JSONB_QUERY(JSONB_QUERY(JSONB_QUERY(JSONB_QUERY(T1.C_
----------------------------------------------------------------
[{"k1":"lili","k3":{"k4":"Chinese","k5":"math"}},{"k1":"luna","k3":{"k4":"PYH","k5":"CHEM"}},{"k1":"joyh","k3":{"k4":"High                         QQ                         Math","k5":"bio"}}]

1 rows fetched.

SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> 
SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> create table tbl_jsonb_025(id int,c_jsonb jsonb,c_json clob);

Succeed.

SQL> insert into tbl_jsonb_025 values(1,'[{"k1":[{"s1":["a","sd","-100",[0,100,[{"s2":"rr","s3":"周杰伦"}]]]},1000,"200we",{"d1":{"t1":"2021-7-21 09:23:45.66","t2":9999}}],"k2":{"q2":{"f2":"水杯","f3":"手机","f4":"fdfs","f5":["fdf",[100,200,"re",[1000,2000,[-1.234,{"w1":"终结者"}]]]]}},"k3":[{"g1":100},{"g2":{"g3":"nice"}},10000,{"g4":{"g5":{"g6":"2323","g7":-100000}}},"good boy","giraffe"]},{"s1#$%%@#":[null,0,-100,{"a2":null,"水果":"香蕉"},["富贵竹","panda","@#$$",[1000,"鼠标",null]]]},[100,[200,[300,[400,[500,[{"结果":"死机"}]]]]]],{"h1":{"h2":{"h3":{"h4":{"h5":["中国好娃娃"]}}}}}]','[{"k1":[{"s1":["a","sd","-100",[0,100,[{"s2":"rr","s3":"周杰伦"}]]]},1000,"200we",{"d1":{"t1":"2021-7-21 09:23:45.66","t2":9999}}],"k2":{"q2":{"f2":"水杯","f3":"手机","f4":"fdfs","f5":["fdf",[100,200,"re",[1000,2000,[-1.234,{"w1":"终结者"}]]]]}},"k3":[{"g1":100},{"g2":{"g3":"nice"}},10000,{"g4":{"g5":{"g6":"2323","g7":-100000}}},"good boy","giraffe"]},{"s1#$%%@#":[null,0,-100,{"a2":null,"水果":"香蕉"},["富贵竹","panda","@#$$",[1000,"鼠标",null]]]},[100,[200,[300,[400,[500,[{"结果":"死机"}]]]]]],{"h1":{"h2":{"h3":{"h4":{"h5":["中国好娃娃"]}}}}}]');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select c_jsonb from tbl_jsonb_025;

C_JSONB
----------------------------------------------------------------
7702000001120455550B009001F9013C028355500F001100130015009C0019016B316B326B330454350B004F005300580081500600080073310433350B00...

1 rows fetched.

SQL> select jsonb_set(c_jsonb,'$[1]."s1#$%%@#"[3].a2','1000' returning jsonb error on error ) from tbl_jsonb_025;

JSONB_SET(C_JSONB,'$[1]."S1#$%%@#"[3].A2','1000' RETURNING JSONB
----------------------------------------------------------------
7B02000001120455550B009001FD0140028355500F001100130015009C0019016B316B326B330454350B004F005300580081500600080073310433350B00...

1 rows fetched.

SQL> select jsonb_set(c_jsonb,'$[1]."s1#$%%@#"[3].a2','1000' returning clob error on error ) from tbl_jsonb_025;

JSONB_SET(C_JSONB,'$[1]."S1#$%%@#"[3].A2','1000' RETURNING CLOB
----------------------------------------------------------------
[{"k1":[{"s1":["a","sd","-100",[0,100,[{"s2":"rr","s3":"周杰伦"}]]]},1000,"200we",{"d1":{"t1":"2021-7-21 09:23:45.66","t2":9999}}],"k2":{"q2":{"f2":"水杯","f3":"手机","f4":"fdfs","f5":["fdf",[100,200,"re",[1000,2000,[-1.234,{"w1":"终结者"}]]]]}},"k3":[{"g1":100},{"g2":{"g3":"nice"}},10000,{"g4":{"g5":{"g6":"2323","g7":-100000}}},"good boy","giraffe"]},{"s1#$%%@#":[null,0,-100,{"a2":1000,"水果":"香蕉"},["富贵竹","panda","@#$$",[1000,"鼠标",null]]]},[100,[200,[300,[400,[500,[{"结果":"死机"}]]]]]],{"h1":{"h2":{"h3":{"h4":{"h5":["中国好娃娃"]}}}}}]

1 rows fetched.

SQL> select jsonb_query(jsonb_set(c_jsonb,'$[1]."s1#$%%@#"[3].a2','1000' returning jsonb error on error ),'$[1]."s1#$%%@#"[3].a2' returning jsonb with wrapper error on error) from tbl_jsonb_025;

JSONB_QUERY(JSONB_SET(C_JSONB,'$[1]."S1#$%%@#"[3].A2','1000' RET
----------------------------------------------------------------
0800000001120140040031303030

1 rows fetched.

SQL> select jsonb_query(jsonb_set(c_jsonb,'$[1]."s1#$%%@#"[3].a2','1000' returning jsonb error on error ),'$[1]."s1#$%%@#"[3].a2' returning clob with wrapper error on error) from tbl_jsonb_025;

JSONB_QUERY(JSONB_SET(C_JSONB,'$[1]."S1#$%%@#"[3].A2','1000' RET
----------------------------------------------------------------
[1000]

1 rows fetched.

SQL> select jsonb_value(jsonb_query(jsonb_set(c_jsonb,'$[1]."s1#$%%@#"[3].a2','1000' returning jsonb error on error ),'$[1]."s1#$%%@#"[3].a2' returning jsonb with wrapper error on error) ,'$[0]' error on error)from tbl_jsonb_025;

JSONB_VALUE(JSONB_QUERY(JSONB_SET(C_JSONB,'$[1]."S1#$%%@#"[3].A2
----------------------------------------------------------------
1000

1 rows fetched.

SQL> select json_value(json_query(json_set(c_json,'$[1]."s1#$%%@#"[3].a2','1000' returning varchar2(1000) error on error ),'$[1]."s1#$%%@#"[3].a2' returning varchar2(100) with wrapper error on error) ,'$[0]' error on error )from tbl_jsonb_025;

JSON_VALUE(JSON_QUERY(JSON_SET(C_JSON,'$[1]."S1#$%%@#"[3].A2','1
----------------------------------------------------------------
1000

1 rows fetched.

SQL> drop table if exists tbl_jsonb_025;

Succeed.

SQL> 