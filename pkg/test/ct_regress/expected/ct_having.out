

SQL> DROP TABLE IF EXISTS T_HAVING_1;

Succeed.

SQL> CREATE TABLE T_HAVING_1 (F_INT1 INT, F_INT2 INT, F_CHAR CHAR(16), F_TIME TIMESTAMP);

Succeed.

SQL> 
SQL> INSERT INTO T_HAVING_1 VALUES(1,2,'A','2017-12-11 14:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(3,4,'C','2017-12-12 16:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(1,3,'A','2017-12-11 14:18:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(1,3,'A','2017-12-11 14:18:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(2,3,'B','2017-12-11 16:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(2,3,'B','2017-12-11 16:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(1,2,'A','2017-12-11 14:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(3,4,'C','2017-12-12 16:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(1,3,'A','2017-12-11 14:18:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(1,3,'A','2017-12-11 14:18:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(2,3,'B','2017-12-11 16:08:00.123456');

1 rows affected.

SQL> INSERT INTO T_HAVING_1 VALUES(2,3,'B','2017-12-11 16:08:00.123456');

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> 
SQL> 
SQL> SELECT F_INT1+1 FROM T_HAVING_1 GROUP BY 1+F_INT1 HAVING F_INT1 > 1;

CT-00609, [1:58]Expression not in group list
SQL> SELECT F_INT1,F_INT2 FROM T_HAVING_1 GROUP BY F_INT1,F_INT2 HAVING F_CHAR = 'A';

CT-00609, [1:68]Expression not in group list
SQL> 
SQL> 
SQL> SELECT F_INT1+1 FROM T_HAVING_1 GROUP BY 1+F_INT1 HAVING F_INT1+1 > 2 order by 1;

F_INT1+1            
--------------------
3                   
4                   

2 rows fetched.

SQL> SELECT F_INT1,F_INT2 FROM T_HAVING_1 GROUP BY F_INT1,F_INT2 HAVING F_INT2 <= 3 order by 1,2;

F_INT1       F_INT2      
------------ ------------
1            2           
1            3           
2            3           

3 rows fetched.

SQL> SELECT F_INT1 FROM T_HAVING_1 GROUP BY F_INT1 HAVING F_INT1 = 2;

F_INT1      
------------
2           

1 rows fetched.

SQL> SELECT F_CHAR FROM T_HAVING_1 GROUP BY F_CHAR HAVING F_CHAR = 'B';

F_CHAR          
----------------
B               

1 rows fetched.

SQL> SELECT F_TIME FROM T_HAVING_1 GROUP BY F_TIME HAVING F_TIME > to_timestamp('2017-12-11 16:08:00.123455', 'YYYY-MM-dd hh24:mi:ss.ff6') ORDER BY F_TIME;

F_TIME                          
--------------------------------
2017-12-11 16:08:00.123456      
2017-12-12 16:08:00.123456      

2 rows fetched.

SQL> SELECT F_INT1,F_INT2 FROM T_HAVING_1 GROUP BY F_INT1,F_INT2,F_CHAR,F_TIME HAVING F_INT1 > 1 AND F_INT2 < 4;

F_INT1       F_INT2      
------------ ------------
2            3           

1 rows fetched.

SQL> SELECT F_INT1,F_INT2,F_CHAR,F_TIME FROM T_HAVING_1 GROUP BY F_INT1,F_INT2,F_CHAR,F_TIME  HAVING F_CHAR = 'A' ORDER BY F_TIME DESC;

F_INT1       F_INT2       F_CHAR           F_TIME                          
------------ ------------ ---------------- --------------------------------
1            3            A                2017-12-11 14:18:00.123456      
1            2            A                2017-12-11 14:08:00.123456      

2 rows fetched.

SQL> 
SQL> SELECT F_INT1,count(1) FROM T_HAVING_1 GROUP BY F_INT1 HAVING COUNT(1) > 1 ORDER BY F_INT1 DESC;

F_INT1       COUNT(1)            
------------ --------------------
3            2                   
2            4                   
1            6                   

3 rows fetched.

SQL> SELECT F_INT1,avg(f_int2) FROM T_HAVING_1 GROUP BY F_INT1 HAVING F_INT1 > 1 AND AVG(F_INT2) > 3  ORDER BY F_INT1 DESC;

F_INT1       AVG(F_INT2)                             
------------ ----------------------------------------
3            4                                       

1 rows fetched.

SQL> SELECT F_INT1,max(f_int2) FROM T_HAVING_1 GROUP BY F_INT1 HAVING MAX(F_INT2) < 4 AND F_INT1 = 1 ORDER BY F_INT1 DESC;

F_INT1       MAX(F_INT2) 
------------ ------------
1            3           

1 rows fetched.

SQL> SELECT F_INT1,min(f_int2) FROM T_HAVING_1 GROUP BY F_INT1 HAVING MIN(F_INT2) > 1 ORDER BY F_INT1 DESC;

F_INT1       MIN(F_INT2) 
------------ ------------
3            4           
2            3           
1            2           

3 rows fetched.

SQL> SELECT F_INT1,sum(f_int2) FROM T_HAVING_1 GROUP BY F_INT1 HAVING SUM(F_INT2) > 8 ORDER BY F_INT1 DESC;

F_INT1       SUM(F_INT2)         
------------ --------------------
2            12                  
1            16                  

2 rows fetched.

SQL> SELECT F_INT1,min(f_int2) + max(f_int2) FROM T_HAVING_1 GROUP BY F_INT1 HAVING MIN(F_INT2)+MAX(F_INT2) > 5 ORDER BY F_INT1 DESC;

F_INT1       MIN(F_INT2) + MAX(F_INT2)
------------ -------------------------
3            8                        
2            6                        

2 rows fetched.

SQL> 
SQL> SELECT count(1) FROM T_HAVING_1 HAVING COUNT(1) > 1;

COUNT(1)            
--------------------
12                  

1 rows fetched.

SQL> SELECT avg(f_int2) FROM T_HAVING_1 HAVING AVG(F_INT2) > 3;

AVG(F_INT2)                             
----------------------------------------
3                                       

1 rows fetched.

SQL> SELECT max(f_int2) FROM T_HAVING_1 HAVING MAX(F_INT2) < 4;

MAX(F_INT2) 
------------

0 rows fetched.

SQL> SELECT min(f_int2) FROM T_HAVING_1 HAVING MIN(F_INT2) > 1;

MIN(F_INT2) 
------------
2           

1 rows fetched.

SQL> SELECT sum(f_int2) FROM T_HAVING_1 HAVING SUM(F_INT2) > 8;

SUM(F_INT2)         
--------------------
36                  

1 rows fetched.

SQL> SELECT min(f_int2) + max(f_int2) FROM T_HAVING_1 HAVING MIN(F_INT2)+MAX(F_INT2) > 5;

MIN(F_INT2) + MAX(F_INT2)
-------------------------
6                        

1 rows fetched.

SQL> 
SQL> 
SQL> SELECT * FROM (SELECT F_CHAR FROM T_HAVING_1 GROUP BY F_CHAR HAVING F_CHAR = 'B') TT;

F_CHAR          
----------------
B               

1 rows fetched.

SQL> SELECT * FROM (SELECT F_INT1,min(f_int2) + max(f_int2) FROM T_HAVING_1 GROUP BY F_INT1 HAVING MIN(F_INT2)+MAX(F_INT2) > 5 ORDER BY F_INT1 DESC) TT;

F_INT1       MIN(F_INT2) + MAX(F_INT2)
------------ -------------------------
3            8                        
2            6                        

2 rows fetched.

SQL> SELECT f_int1 FROM (SELECT F_INT1,min(f_int2) + max(f_int2) as ff FROM T_HAVING_1 GROUP BY F_INT1 HAVING MIN(F_INT2)+MAX(F_INT2) > 5 ORDER BY F_INT1 DESC) TT where ff = 8;

F_INT1      
------------
3           

1 rows fetched.

SQL> SELECT distinct f_int1,avg(f_int2) FROM T_HAVING_1 GROUP BY f_int1 HAVING avg(f_int2) > (SELECT distinct f_int1 FROM T_HAVING_1 WHERE f_int1 <= 1)  order by f_int1;

F_INT1       AVG(F_INT2)                             
------------ ----------------------------------------
1            2.66666666666666666666666666666666666667
2            3                                       
3            4                                       

3 rows fetched.

SQL> 
SQL> -- AR.SR.IREQ02183315.002.006
SQL> select f_int1 from t_having_1 group by f_int1 having count(f_int1) > 2 order by f_int1;

F_INT1      
------------
1           
2           

2 rows fetched.

SQL> select f_int1, count(f_int1) from t_having_1 group by f_int1 having sum(f_int1) > 6;

F_INT1       COUNT(F_INT1)       
------------ --------------------
2            4                   

1 rows fetched.

SQL> select f_int1 from t_having_1 having count(f_int1) > 2;

CT-01317, [1:38]Unexpected aggregation 'COUNT'
SQL> 
SQL> DROP TABLE T_HAVING_1;

Succeed.

SQL> 


