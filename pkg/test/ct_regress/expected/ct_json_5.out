

SQL> --do delete
SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.name');

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"age":18,"addr":"China","ho":[1,2,3,4]}                        

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.age');

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","addr":"China","ho":[1,2,3,4]}                   

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho');

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China"}                         

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[0,2]');

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[2,4]}              

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[0,2, 5, 15, 86]');

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[2,4]}              

1 rows fetched.

SQL> 
SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$');  --null

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select 1 from SYS_DUMMY where json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$') is null;  --null

1           
------------
1           

1 rows fetched.

SQL> 
SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.name', '{"bbb":66, "aaa":54}');  --replace

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":{"bbb":66,"aaa":54},"age":18,"addr":"China","ho":[1,2,3,4]}

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[0]', '{"bbb":66, "aaa":54}');  --replace

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[{"bbb":66,"aaa":54},2,3,4]}

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[1 to 3]', '{"bbb":66, "aaa":54}');  --replace

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54}]}

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[1 to 3, 8, 9]', '{"bbb":66, "aaa":54}');  --replace

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54}]}

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[8, 9]', '{"bbb":66, "aaa":54}');  --add

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4,{"bbb":66,"aaa":54}]}

1 rows fetched.

SQL> select json_set(json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[8, 9]', '{"bbb":66, "aaa":54}'), '$.ho[8, 9]', '{"bbb":66, "aaa":54}');  --add

JSON_SET(JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4,{"bbb":66,"aaa":54},{"bbb":66,"aaa":54}]}

1 rows fetched.

SQL> select json_set(json_set(json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[8, 9]', '{"bbb":66, "aaa":54}'), '$.ho[8, 9]', '{"bbb":66, "aaa":54}'), '$.ho[8, 9]', '{"bbb":66, "aaa":54}');  --add

JSON_SET(JSON_SET(JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CH
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4,{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54}]}

1 rows fetched.

SQL> select json_set(json_set(json_set(json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.ho[1 to 3, 8, 9]', '{"bbb":66, "aaa":54}'), '$.ho[8, 9]', '{"bbb":66, "aaa":54}'), '$.ho[8, 9]', '{"bbb":66, "aaa":54}'), '$.ho[8, 9]', '{"bbb":66, "aaa":54}');  --add

JSON_SET(JSON_SET(JSON_SET(JSON_SET('{"NAME":"ANDY", "AGE":18, "
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54},{"bbb":66,"aaa":54}]}

1 rows fetched.

SQL> 
SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.C', '{"bbb":66, "aaa":54}');  --replace

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.C', '{"BBB":66, "AAA":
----------------------------------------------------------------
{"A":{"B":{"C":{"bbb":66,"aaa":54}}}}                           

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.C', '{"D":{"bbb":66, "aaa":54}}');  --replace

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.C', '{"D":{"BBB":66, "
----------------------------------------------------------------
{"A":{"B":{"C":{"D":{"bbb":66,"aaa":54}}}}}                     

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.C.D', '{"bbb":66, "aaa":54}');  --no change

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.C.D', '{"BBB":66, "AAA
----------------------------------------------------------------
{"A":{"B":{"C":true}}}                                          

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":{}}}}', '$.A.B.C.D', '{"bbb":66, "aaa":54}');  --add

JSON_SET('{"A":{"B":{"C":{}}}}', '$.A.B.C.D', '{"BBB":66, "AAA":
----------------------------------------------------------------
{"A":{"B":{"C":{"D":{"bbb":66,"aaa":54}}}}}                     

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":{}}}}', '$.A.B.C.D.D.D.D.D.D.D', '{"bbb":66, "aaa":54}');  --no change

JSON_SET('{"A":{"B":{"C":{}}}}', '$.A.B.C.D.D.D.D.D.D.D', '{"BBB
----------------------------------------------------------------
{"A":{"B":{"C":{}}}}                                            

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.C.H.K.K.F', 'false');  --no change

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.C.H.K.K.F', 'FALSE')  
----------------------------------------------------------------
{"A":{"B":{"C":true}}}                                          

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C.D', '{"bbb":66, "aaa":54}');  --no change

JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C.D', '{"BBB":66, 
----------------------------------------------------------------
{"A":{"B":{"C":[15,16]}}}                                       

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.D', 'false');  --add

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.D', 'FALSE')          
----------------------------------------------------------------
{"A":{"B":{"C":true,"D":false}}}                                

1 rows fetched.

SQL> 
SQL> --insert, add item into an array
SQL> select json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[6]', '{"bbb":66, "aaa":54}');  --insert

JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[6]', '{"BBB":66,
----------------------------------------------------------------
{"A":{"B":{"C":[15,16,{"bbb":66,"aaa":54}]}}}                   

1 rows fetched.

SQL> select json_query(json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[6]', '{"bbb":66, "aaa":54}'), '$.A.B.C[2]'); 

JSON_QUERY(JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[6]', 
----------------------------------------------------------------
{"bbb":66,"aaa":54}                                             

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[7]', '{"bbb":66, "aaa":54}');

JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[7]', '{"BBB":66,
----------------------------------------------------------------
{"A":{"B":{"C":[15,16,{"bbb":66,"aaa":54}]}}}                   

1 rows fetched.

SQL> select json_query(json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[7]', '{"bbb":66, "aaa":54}'), '$.A.B.C[2]'); 

JSON_QUERY(JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[7]', 
----------------------------------------------------------------
{"bbb":66,"aaa":54}                                             

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[8]', '{"bbb":66, "aaa":54}');

JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[8]', '{"BBB":66,
----------------------------------------------------------------
{"A":{"B":{"C":[15,16,{"bbb":66,"aaa":54}]}}}                   

1 rows fetched.

SQL> select json_query(json_set('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[8]', '{"bbb":66, "aaa":54}'), '$.A.B.C[2]'); 

JSON_QUERY(JSON_SET('{"A":{"B":{"C":[15, 16]}}}', '$.A.B.C[8]', 
----------------------------------------------------------------
{"bbb":66,"aaa":54}                                             

1 rows fetched.

SQL> 
SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.aaaa', '{"xxxx":54}');  --add

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4],"aaaa":{"xxxx":54}}

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.aaaa', '[1,2,3]');  --add

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4],"aaaa":[1,2,3]}

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.aaaa.bbbb', '[1,2,3]');  --no change

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4]}          

1 rows fetched.

SQL> 
SQL> --replace
SQL> select json_set('[[1,2,3,4]]', '$[0][0]', '"csdvcfedvef"');

JSON_SET('[[1,2,3,4]]', '$[0][0]', '"CSDVCFEDVEF"')             
----------------------------------------------------------------
[["csdvcfedvef",2,3,4]]                                         

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', 'true');

JSON_SET('[[1,2,3,4]]', '$[0][0]', 'TRUE')                      
----------------------------------------------------------------
[[true,2,3,4]]                                                  

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', 'false');

JSON_SET('[[1,2,3,4]]', '$[0][0]', 'FALSE')                     
----------------------------------------------------------------
[[false,2,3,4]]                                                 

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', 'null');

JSON_SET('[[1,2,3,4]]', '$[0][0]', 'NULL')                      
----------------------------------------------------------------
[[null,2,3,4]]                                                  

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', '1235.25632');

JSON_SET('[[1,2,3,4]]', '$[0][0]', '1235.25632')                
----------------------------------------------------------------
[[1235.25632,2,3,4]]                                            

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', 1235.25632);

JSON_SET('[[1,2,3,4]]', '$[0][0]', 1235.25632)                  
----------------------------------------------------------------
[[1235.25632,2,3,4]]                                            

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', '{"aaa":54}');

JSON_SET('[[1,2,3,4]]', '$[0][0]', '{"AAA":54}')                
----------------------------------------------------------------
[[{"aaa":54},2,3,4]]                                            

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][0]', '[[[[123]]]]');

JSON_SET('[[1,2,3,4]]', '$[0][0]', '[[[[123]]]]')               
----------------------------------------------------------------
[[[[[[123]]]],2,3,4]]                                           

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][1 to 2]', '{"aaa":54}');

JSON_SET('[[1,2,3,4]]', '$[0][1 TO 2]', '{"AAA":54}')           
----------------------------------------------------------------
[[1,{"aaa":54},{"aaa":54},4]]                                   

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][*]', '{"aaa":54}');

JSON_SET('[[1,2,3,4]]', '$[0][*]', '{"AAA":54}')                
----------------------------------------------------------------
[[{"aaa":54},{"aaa":54},{"aaa":54},{"aaa":54}]]                 

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*]', '{"aaa":54}');

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*]', '{"AAA":54}')         
----------------------------------------------------------------
[{"aaa":54},{"aaa":54}]                                         

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*][*]', '{"aaa":54}');

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*][*]', '{"AAA":54}')      
----------------------------------------------------------------
[[{"aaa":54},{"aaa":54},{"aaa":54},{"aaa":54}],[{"aaa":54},{"aaa":54},{"aaa":54},{"aaa":54}]]

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}');  --add

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}')                
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}]]                                          

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}', true);  --add

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}', TRUE)          
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}]]                                          

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}', true returning clob);  --add

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}', TRUE RETURNING 
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}]]                                          

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}', true returning clob error on error);  --add

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}', TRUE RETURNING 
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}]]                                          

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}', false);  --no change

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}', FALSE)         
----------------------------------------------------------------
[[1,2,3,4]]                                                     

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[1 to 55]', '{"aaa":54}');  --add

JSON_SET('[[1,2,3,4]]', '$[1 TO 55]', '{"AAA":54}')             
----------------------------------------------------------------
[[1,2,3,4],{"aaa":54}]                                          

1 rows fetched.

SQL> 
SQL> select json_set('[{"f1":1,"f2":null},2,null,3]', '$[0].f1', '[2,3,4]', false);  --replace

JSON_SET('[{"F1":1,"F2":NULL},2,NULL,3]', '$[0].F1', '[2,3,4]', 
----------------------------------------------------------------
[{"f1":[2,3,4],"f2":null},2,null,3]                             

1 rows fetched.

SQL> select json_set('[{"f1":1,"f2":null},2]', '$[0].f3', '[2,3,4]');  --add

JSON_SET('[{"F1":1,"F2":NULL},2]', '$[0].F3', '[2,3,4]')        
----------------------------------------------------------------
[{"f1":1,"f2":null,"f3":[2,3,4]},2]                             

1 rows fetched.

SQL> select json_set('[{"f1":1,"f2":null},2]', '$[0].f3', '[2,3,4]', true);  --add

JSON_SET('[{"F1":1,"F2":NULL},2]', '$[0].F3', '[2,3,4]', TRUE)  
----------------------------------------------------------------
[{"f1":1,"f2":null,"f3":[2,3,4]},2]                             

1 rows fetched.

SQL> select json_set('[{"f1":1,"f2":null},2]', '$[0].f3', '[2,3,4]', false);  --no change

JSON_SET('[{"F1":1,"F2":NULL},2]', '$[0].F3', '[2,3,4]', FALSE) 
----------------------------------------------------------------
[{"f1":1,"f2":null},2]                                          

1 rows fetched.

SQL> 
SQL> select json_set('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', '$[0].a3', '[2,3,4]');  --add

JSON_SET('[{"F2":1, "F0":1, "F1":NULL, "F5":NULL, "F4":NULL, "F7
----------------------------------------------------------------
[{"f2":1,"f0":1,"f1":null,"f5":null,"f4":null,"f7":null,"f8":null,"f6":null,"a3":[2,3,4]},2,null,3]

1 rows fetched.

SQL> select json_query(json_set('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', '$[0].a3', '[2,3,4]'), '$[0].a3');  --add

JSON_QUERY(JSON_SET('[{"F2":1, "F0":1, "F1":NULL, "F5":NULL, "F4
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> select json_set('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', '$[0].f3', '[2,3,4]');  --add

JSON_SET('[{"F2":1, "F0":1, "F1":NULL, "F5":NULL, "F4":NULL, "F7
----------------------------------------------------------------
[{"f2":1,"f0":1,"f1":null,"f5":null,"f4":null,"f7":null,"f8":null,"f6":null,"f3":[2,3,4]},2,null,3]

1 rows fetched.

SQL> select json_query(json_set('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', '$[0].f3', '[2,3,4]'), '$[0].f3');  --add

JSON_QUERY(JSON_SET('[{"F2":1, "F0":1, "F1":NULL, "F5":NULL, "F4
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> select json_set('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', '$[0].gggg', '[2,3,4]');  --add

JSON_SET('[{"F2":1, "F0":1, "F1":NULL, "F5":NULL, "F4":NULL, "F7
----------------------------------------------------------------
[{"f2":1,"f0":1,"f1":null,"f5":null,"f4":null,"f7":null,"f8":null,"f6":null,"gggg":[2,3,4]},2,null,3]

1 rows fetched.

SQL> select json_query(json_set('[{"f2":1, "f0":1, "f1":null, "f5":null, "f4":null, "f7":null, "f8":null, "f6":null},2,null,3]', '$[0].gggg', '[2,3,4]'), '$[0].gggg');  --add

JSON_QUERY(JSON_SET('[{"F2":1, "F0":1, "F1":NULL, "F5":NULL, "F4
----------------------------------------------------------------
[2,3,4]                                                         

1 rows fetched.

SQL> 
SQL> --====================================== replacement ======================================
SQL> --For replacement, no matter what type of data is matched, the replacement can be performed only when the number of data is matched.
SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*][*]', '{"aaa":54}');  --replace

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*][*]', '{"AAA":54}')      
----------------------------------------------------------------
[[{"aaa":54},{"aaa":54},{"aaa":54},{"aaa":54}],[{"aaa":54},{"aaa":54},{"aaa":54},{"aaa":54}]]

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[0][*]', '{"aaa":54}');  --replace

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[0][*]', '{"AAA":54}')      
----------------------------------------------------------------
[[{"aaa":54},{"aaa":54},{"aaa":54},{"aaa":54}],[1,2,3,4]]       

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[1][1 to 2]', '{"aaa":54}');  --replace

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[1][1 TO 2]', '{"AAA":54}') 
----------------------------------------------------------------
[[1,2,3,4],[1,{"aaa":54},{"aaa":54},4]]                         

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[8][*]', '{"aaa":54}');  --no change

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[8][*]', '{"AAA":54}')      
----------------------------------------------------------------
[[1,2,3,4],[1,2,3,4]]                                           

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*][8]', '{"aaa":54}');  --no match so insert

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*][8]', '{"AAA":54}')      
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}],[1,2,3,4,{"aaa":54}]]                     

1 rows fetched.

SQL> 
SQL> --====================================== deletion ======================================
SQL> --For deletion, the element found in the last path must belong to an existing object or array, because only objects and arrays can delete data.
SQL> --In addition, no matter what type of data is matched, the data can be deleted only when the number of data is matched.
SQL> --If the last searched element belongs to an array, delete itself.
SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*][*]');  --delete

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*][*]')                    
----------------------------------------------------------------
[[],[]]                                                         

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*]');  --delete

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*]')                       
----------------------------------------------------------------
[]                                                              

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[8]');  --no change

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[8]')                       
----------------------------------------------------------------
[[1,2,3,4],[1,2,3,4]]                                           

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*][8]');  --no change

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*][8]')                    
----------------------------------------------------------------
[[1,2,3,4],[1,2,3,4]]                                           

1 rows fetched.

SQL> --If the last searched element belongs to an object, delete the object.
SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.age');  --delete

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","addr":"China","ho":[1,2,3,4]}                   

1 rows fetched.

SQL> select json_set('{"name":"andy", "age":18, "addr":"China", "ho":[1,2,3,4]}', '$.agessss');  --no change

JSON_SET('{"NAME":"ANDY", "AGE":18, "ADDR":"CHINA", "HO":[1,2,3,
----------------------------------------------------------------
{"name":"andy","age":18,"addr":"China","ho":[1,2,3,4]}          

1 rows fetched.

SQL> 
SQL> --====================================== addition ======================================
SQL> --For addition, the last searched element must belong to an existing object or array, because only objects and arrays can be added.
SQL> --If the last searched element belongs to an object, the key value of the last step must not exist, and other path steps must exist.
SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.D', 'false');  --add

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.D', 'FALSE')          
----------------------------------------------------------------
{"A":{"B":{"C":true,"D":false}}}                                

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":true}}}', '$.A.B.C.D', '{"aaa":54}');  --no change

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.A.B.C.D', '{"AAA":54}')   
----------------------------------------------------------------
{"A":{"B":{"C":true}}}                                          

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":{}}}}', '$.A.B.C.D', '{"aaa":54}');  --add

JSON_SET('{"A":{"B":{"C":{}}}}', '$.A.B.C.D', '{"AAA":54}')     
----------------------------------------------------------------
{"A":{"B":{"C":{"D":{"aaa":54}}}}}                              

1 rows fetched.

SQL> select json_set('{"A":{"B":{"C":true}}}', '$.XX.B.C.D', '{"aaa":54}');  --no change

JSON_SET('{"A":{"B":{"C":TRUE}}}', '$.XX.B.C.D', '{"AAA":54}')  
----------------------------------------------------------------
{"A":{"B":{"C":true}}}                                          

1 rows fetched.

SQL> --If the last searched element belongs to an array, the element subscript of the last path in the path expression does not exist. The element subscript of the last path can be added only when the number of elements in the array is greater than or equal to the number of elements in the array. Other paths must exist. Otherwise, the element subscript of the last path cannot be added.
SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}');  --add

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}')                
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}]]                                          

1 rows fetched.

SQL> select json_set('[[1,2,3,4]]', '$[1][6]', '{"aaa":54}', false);  --no change

JSON_SET('[[1,2,3,4]]', '$[1][6]', '{"AAA":54}', FALSE)         
----------------------------------------------------------------
[[1,2,3,4]]                                                     

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[*][8]', '"hello"');  --add

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[*][8]', '"HELLO"')         
----------------------------------------------------------------
[[1,2,3,4,"hello"],[1,2,3,4,"hello"]]                           

1 rows fetched.

SQL> select json_set('[[1,2,3,4],[1,2,3,4]]', '$[5][8]', '"hello"');  --no change

JSON_SET('[[1,2,3,4],[1,2,3,4]]', '$[5][8]', '"HELLO"')         
----------------------------------------------------------------
[[1,2,3,4],[1,2,3,4]]                                           

1 rows fetched.

SQL> 
SQL> select json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}');  --add

JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}')                
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54}]]                                          

1 rows fetched.

SQL> select json_set(json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}'), '$[0][4].bbb', '"hello"');  --add

JSON_SET(JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}'), '$[0]
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54,"bbb":"hello"}]]                            

1 rows fetched.

SQL> select json_set(json_set(json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}'), '$[0][4].bbb', '"hello"'), '$[0][4].bbb', '"world"');  --replace

JSON_SET(JSON_SET(JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54,"bbb":"world"}]]                            

1 rows fetched.

SQL> select json_set(json_set(json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}'), '$[0][4].bbb', '"hello"'), '$[1]', '"world"');  --add

JSON_SET(JSON_SET(JSON_SET('[[1,2,3,4]]', '$[0][6]', '{"AAA":54}
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54,"bbb":"hello"}],"world"]                    

1 rows fetched.

SQL> select json_set(json_set(json_set(json_set('[[1,2,3,4]]', '$[0][6]', '{"aaa":54}'), '$[0][4].bbb', '"hello"'), '$[1]', '"world"'), '$[1]');  --delete

JSON_SET(JSON_SET(JSON_SET(JSON_SET('[[1,2,3,4]]', '$[0][6]', '{
----------------------------------------------------------------
[[1,2,3,4,{"aaa":54,"bbb":"hello"}]]                            

1 rows fetched.

SQL> 
SQL> ------------------------------------
SQL> -- BASE FUNC TEST:DDL
SQL> ------------------------------------
SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> create table tbl_json_base_test(a CLOB check(a IS JSON), b int);  ---Succeed.

Succeed.

SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> create table tbl_json_base_test(a CLOB check(a IS JSON) primary key, b int); ---  Cannot create index on 'BLOB'

CT-00633, Cannot create normal index on column with datatype 'CLOB'
SQL> create table tbl_json_base_test(a CLOB check(a IS JSON), b int);  ---Succeed.

Succeed.

SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> truncate table tbl_json_base_test; ---table does not exist

CT-00843, The table or view SYS.TBL_JSON_BASE_TEST does not exist.
SQL> create table tbl_json_base_test(a CLOB check(a IS JSON), b int primary key);---Succeed.

Succeed.

SQL> insert into tbl_json_base_test values('{"kex_1":{"kex_2":{"kex_3":{"kex_4":{"kex_5":[{"kex_6":"six"}]}}}}}',19);   ---1 rows affected.

1 rows affected.

SQL> create table tbl_json_base_test(a CLOB check(a IS JSON), b int primary key);---Succeed.

CT-01301, SYS.TBL_JSON_BASE_TEST already exists
SQL> truncate table tbl_json_base_test; ---Succeed.

Succeed.

SQL> insert into tbl_json_base_test values('{"kex_1":{"kex_2":{"kex_3":{"kex_4":{"kex_5":[{"kex_6":"six"}]}}}}}',19);   ---1 rows affected.                            

1 rows affected.

SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> create table tbl_json_base_test(a CLOB check(a IS JSON));

Succeed.

SQL> insert into tbl_json_base_test values('[{"AAA":"AAA"}, {"BBB":"BBB"}, {"CCC":"CCC"}, {"DDD":"DDD"}, {"EEE":"EEE"}]');

1 rows affected.

SQL> insert into tbl_json_base_test values('[{"AAA":"AAA"}, {"BBB":"BBB"}, {"CCC":"CCC"}, {"DDD":"DDD"}, {"EEE":"EEE"}]');

1 rows affected.

SQL> insert into tbl_json_base_test values('[{"AAA":"AAAa"}, {"BBB":"BBBa"}, {"CCC":"CCCa"}, {"DDD":"DDDa"}, {"EEE":"EEEa"}]');

1 rows affected.

SQL> commit;

Succeed.

SQL> drop index if exists jsonb_index on tbl_json_base_test;---Succeed.

Succeed.

SQL> create index jsonb_index on tbl_json_base_test(jsonb_value(a, '$[0].AAA')); ---Succeed.

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> drop index if exists jsonb_index on tbl_json_base_test; ---Succeed.

Succeed.

SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> drop table if exists tbl_json_base_test;

Succeed.

SQL> create table tbl_json_base_test(a jsonb);

Succeed.

SQL> create unique index tbl_json_base_test_idx on tbl_json_base_test(jsonb_value(a, '$.AAA' returning varchar2(1024)), jsonb_value(a, '$.BBB' returning varchar2(1024)));

Succeed.

SQL> insert into tbl_json_base_test values('{"AAA" : "111", "BBB" : "222", "CCC" : "333"}');

1 rows affected.

SQL> insert into tbl_json_base_test values('{"AAA" : "111", "BBB" : "222", "CCC" : "333"}'); -- error

CT-00729, Unique constraint violated, index TBL_JSON_BASE_TEST_IDX, duplicate key 111-222
SQL> insert into tbl_json_base_test values('{"AAA" : "111", "BBB" : "000", "CCC" : "333"}');

1 rows affected.

SQL> select jsonb_query(a, '$') as val from tbl_json_base_test where jsonb_value(a, '$.AAA' returning varchar2(1024)) = '111';

VAL                                                             
----------------------------------------------------------------
{"AAA":"111","BBB":"222","CCC":"333"}
{"AAA":"111","BBB":"000","CCC":"333"}

2 rows fetched.

SQL> select jsonb_query(a, '$') as val from tbl_json_base_test where jsonb_value(a, '$.AAA' returning varchar2(1024)) = '111' and jsonb_value(a, '$.BBB' returning varchar2(1024)) = '222';

VAL                                                             
----------------------------------------------------------------
{"AAA":"111","BBB":"222","CCC":"333"}                           

1 rows fetched.

SQL> drop table if exists tbl_json_base_test;

Succeed.

SQL> ------------------------------------
SQL> -- BASE FUNC TEST:DML
SQL> ------------------------------------
SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> create table tbl_json_base_test(a CLOB check(a IS JSON), b int primary key);  ---Succeed.

Succeed.

SQL> insert into tbl_json_base_test values('[]',1);     ---1 rows affected.    

1 rows affected.

SQL> insert into tbl_json_base_test values('[null]',2); ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('["string"]',3);  ---1 rows affected.       

1 rows affected.

SQL> insert into tbl_json_base_test values('[true]',4);   ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[false]',5);   ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[-101998]',6);  ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[101998]',7);   ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[-101998545554.101454455451998]',8);---1 rows affected.  

1 rows affected.

SQL> insert into tbl_json_base_test values('[101998545554.101454455451998]',9); ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[1,2,3,4]',10);---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('["world","time","room","chairman"]',11); ---1 rows affected.       

1 rows affected.

SQL> insert into tbl_json_base_test values('[true,false,true,false]', 12); ---1 rows affected.                  

1 rows affected.

SQL> insert into tbl_json_base_test values('[-124554.115454582,124554.115454582,565656556454787512121212,565656556454787512121212]',13); ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[{"kex_1":1},{"kex_2":"string"},{"kex_3":12323323.21233},{"kex_4":false}]',14); --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('[["one","two","three"],[1,2,3],[1.1,1.2,2.343],[false,false,true],[{"kex_1":1},{"kex_2":"string"},{"kex_3":12323323.21233},{"kex_4":false}]]',15); --1 rows affected.   

1 rows affected.

SQL> insert into tbl_json_base_test values('
  2  [ {"programmers": [
  3     { "firstName": "Brett", "lastName":"McLaughlin", "email": "brett@newInstance.com" },
  4     { "firstName": "Jason", "lastName":"Hunter", "email": "jason@servlets.com" },
  5     { "firstName": "Elliotte", "lastName":"Harold", "email": "elharo@macfaq.com" }
  6    ]},
  7   {"authors": [
  8     { "firstName": "Isaac", "lastName": "Asimov", "genre": "science fiction" },
  9     { "firstName": "Tad", "lastName": "Williams", "genre": "fantasy" },
 10     { "firstName": "Frank", "lastName": "Peretti", "genre": "christian fiction" }
 11    ]},
 12   {"musicians": [
 13     { "firstName": "Eric", "lastName": "Clapton", "instrument": "guitar" },
 14     { "firstName": "Sergei", "lastName": "Rachmaninoff", "instrument": "piano" }
 15    ]}
 16   ]',16);   ---1 rows affected.   

1 rows affected.

SQL> insert into tbl_json_base_test values('{"kex_1":2738937798.925638525,"kex_2":"string","kex_3":false,"kex_4":[1,2,3,4],"kex_5":{"k_1":1,"k_2":"string"}}',17);     --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('{"kex_1":44454547.28534326,"kex_2":"string","kex_3":false,"kex_4":{"k_1":"string","k_2":123,"kex_3":
  2 [["one","two","three"],[1,2,3],[1.1,1.2,2.343],[false,false,true],[{"kex_1":1},{"kex_2":"string"},{"kex_3":12323323.21233},{"kex_4":false}]]}}',18);   --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('{"kex_1":{"kex_2":{"kex_3":{"kex_4":{"kex_5":[{"kex_6":"six"}]}}}}}',19);   --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('{"count":4,"filename":"chiefbook","line":{
  2 "one":{"a":0,"b":0,"c":0.292,"d":820,"ex":852,"ey":571,"id":0,"sx":0,"sy":820},
  3 "two":{"a":0,"b":0,"c":-1.187,"d":1680.5999755859375,"ex":934,"ey":572,"id":1,"sx":506,"sy":1080},
  4 "three":{"a":0,"b":0,"c":0.531,"d":26.270000457763672,"ex":1919,"ey":1045,"id":2,"sx":1028,"sy":572},
  5 "four":{"a":0,"b":0,"c":0.316,"d":232.5,"ex":1919,"ey":838,"id":3,"sx":1076,"sy":572}},"timeStamp":{"nesc:":5678,"sec:":1234}}',20);   --1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b=1; ---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b=1;---0 rows affected.

0 rows affected.

SQL> select b from tbl_json_base_test; ---19 rows affected.

B           
------------
2           
3           
4           
5           
6           
7           
8           
9           
10          
11          
12          
13          
14          
15          
16          
17          
18          
19          
20          

19 rows fetched.

SQL> select count(*) from tbl_json_base_test; ---19

COUNT(*)            
--------------------
19                  

1 rows fetched.

SQL> delete tbl_json_base_test where b=2; ---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b=3; ---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b=4;  ---1 rows affected.

1 rows affected.

SQL> select b from tbl_json_base_test; ---16 rows affected.

B           
------------
5           
6           
7           
8           
9           
10          
11          
12          
13          
14          
15          
16          
17          
18          
19          
20          

16 rows fetched.

SQL> select count(*) from tbl_json_base_test; ---1 rows affected.

COUNT(*)            
--------------------
16                  

1 rows fetched.

SQL> delete tbl_json_base_test where b > 20; ---0 rows affected.

0 rows affected.

SQL> delete tbl_json_base_test where b > 18;  ---2 rows affected.

2 rows affected.

SQL> select b from tbl_json_base_test; ---14 rows fetched.

B           
------------
5           
6           
7           
8           
9           
10          
11          
12          
13          
14          
15          
16          
17          
18          

14 rows fetched.

SQL> select count(*) from tbl_json_base_test;---1 rows affected.

COUNT(*)            
--------------------
14                  

1 rows fetched.

SQL> delete tbl_json_base_test where b < 10; ---5 rows affected.

5 rows affected.

SQL> select count(*) from tbl_json_base_test;---1 rows affected:9

COUNT(*)            
--------------------
9                   

1 rows fetched.

SQL> delete tbl_json_base_test where b>15 or b<12;---5 rows affected.

5 rows affected.

SQL> delete tbl_json_base_test where b<15 and b>12; ---2 rows affected.

2 rows affected.

SQL> delete tbl_json_base_test where b = 15; ---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b = 12; ---1 rows affected.

1 rows affected.

SQL> select count(*) from tbl_json_base_test; ---1 rows affected:0

COUNT(*)            
--------------------
0                   

1 rows fetched.

SQL> insert into tbl_json_base_test values('[]',1);     ---1 rows affected.    

1 rows affected.

SQL> insert into tbl_json_base_test values('[null]',2); ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('["string"]',3);  ---1 rows affected.       

1 rows affected.

SQL> insert into tbl_json_base_test values('[true]',4);   ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[false]',5);   ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[-101998]',6);  ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[101998]',7);   ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[-101998545554.101454455451998]',8);---1 rows affected.  

1 rows affected.

SQL> insert into tbl_json_base_test values('[101998545554.101454455451998]',9); ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[1,2,3,4]',10);---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('["world","time","room","chairman"]',11); ---1 rows affected.       

1 rows affected.

SQL> insert into tbl_json_base_test values('[true,false,true,false]', 12); ---1 rows affected.                  

1 rows affected.

SQL> insert into tbl_json_base_test values('[-124554.115454582,124554.115454582,565656556454787512121212,565656556454787512121212]',13); ---1 rows affected. 

1 rows affected.

SQL> insert into tbl_json_base_test values('[{"kex_1":1},{"kex_2":"string"},{"kex_3":12323323.21233},{"kex_4":false}]',14); --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('[["one","two","three"],[1,2,3],[1.1,1.2,2.343],[false,false,true],[{"kex_1":1},{"kex_2":"string"},{"kex_3":12323323.21233},{"kex_4":false}]]',15); --1 rows affected.   

1 rows affected.

SQL> insert into tbl_json_base_test values('
  2  [ {"programmers": [
  3     { "firstName": "Brett", "lastName":"McLaughlin", "email": "brett@newInstance.com" },
  4     { "firstName": "Jason", "lastName":"Hunter", "email": "jason@servlets.com" },
  5     { "firstName": "Elliotte", "lastName":"Harold", "email": "elharo@macfaq.com" }
  6    ]},
  7   {"authors": [
  8     { "firstName": "Isaac", "lastName": "Asimov", "genre": "science fiction" },
  9     { "firstName": "Tad", "lastName": "Williams", "genre": "fantasy" },
 10     { "firstName": "Frank", "lastName": "Peretti", "genre": "christian fiction" }
 11    ]},
 12   {"musicians": [
 13     { "firstName": "Eric", "lastName": "Clapton", "instrument": "guitar" },
 14     { "firstName": "Sergei", "lastName": "Rachmaninoff", "instrument": "piano" }
 15    ]}
 16   ]',16);   ---1 rows affected.   

1 rows affected.

SQL> insert into tbl_json_base_test values('{"kex_1":2738937798.925638525,"kex_2":"string","kex_3":false,"kex_4":[1,2,3,4],"kex_5":{"k_1":1,"k_2":"string"}}',17);     --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('{"kex_1":44454547.28534326,"kex_2":"string","kex_3":false,"kex_4":{"k_1":"string","k_2":123,"kex_3":
  2 [["one","two","three"],[1,2,3],[1.1,1.2,2.343],[false,false,true],[{"kex_1":1},{"kex_2":"string"},{"kex_3":12323323.21233},{"kex_4":false}]]}}',18);   --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('{"kex_1":{"kex_2":{"kex_3":{"kex_4":{"kex_5":[{"kex_6":"six"}]}}}}}',19);   --1 rows affected.

1 rows affected.

SQL> insert into tbl_json_base_test values('{"count":4,"filename":"chiefbook","line":{
  2 "one":{"a":0,"b":0,"c":0.292,"d":820,"ex":852,"ey":571,"id":0,"sx":0,"sy":820},
  3 "two":{"a":0,"b":0,"c":-1.187,"d":1680.5999755859375,"ex":934,"ey":572,"id":1,"sx":506,"sy":1080},
  4 "three":{"a":0,"b":0,"c":0.531,"d":26.270000457763672,"ex":1919,"ey":1045,"id":2,"sx":1028,"sy":572},
  5 "four":{"a":0,"b":0,"c":0.316,"d":232.5,"ex":1919,"ey":838,"id":3,"sx":1076,"sy":572}},"timeStamp":{"nesc:":5678,"sec:":1234}}',20);   --1 rows affected

1 rows affected.

SQL> update tbl_json_base_test set a = '[{"key":"value"}]' where b=1; ---1 rows affected.

1 rows affected.

SQL> select a from tbl_json_base_test where b=1;---0F0000000111015003813004076B657976616C7565

A                                                               
----------------------------------------------------------------
[{"key":"value"}]                                               

1 rows fetched.

SQL> update tbl_json_base_test set a = '[{"one":1}]' where b=1; ---1 rows affected.

1 rows affected.

SQL> select a from tbl_json_base_test where b=1; ---0B0000000111015003814004076F6E6531

A                                                               
----------------------------------------------------------------
[{"one":1}]                                                     

1 rows fetched.

SQL> delete tbl_json_base_test where b=20;---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b=20;---0 rows affected.

0 rows affected.

SQL> update tbl_json_base_test set a = '[{"one":1}]' where b=20; ---0 rows affected.

0 rows affected.

SQL> update tbl_json_base_test set a = '[{"one":1}]' where b <=10; ---10 rows affected.

10 rows affected.

SQL> select a from tbl_json_base_test where b<=10; ---10* 0B0000000111015003814004076F6E6531

A                                                               
----------------------------------------------------------------
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     

10 rows fetched.

SQL> update tbl_json_base_test set a = '[{"one":1}]' where b >=10 and b <=15;---6 rows affected.

6 rows affected.

SQL> select a from tbl_json_base_test where b >=10 and b <=15; ---6* 0B0000000111015003814004076F6E6531

A                                                               
----------------------------------------------------------------
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     
[{"one":1}]                                                     

6 rows fetched.

SQL> delete tbl_json_base_test where b =16;---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b =17;---1 rows affected.

1 rows affected.

SQL> delete tbl_json_base_test where b =18;---1 rows affected.

1 rows affected.

SQL> delete from tbl_json_base_test where b =19;---1 rows affected.

1 rows affected.

SQL> select a from tbl_json_base_test where b >15;---0 rows fetched.

A                                                               
----------------------------------------------------------------

0 rows fetched.

SQL> select length(a) from tbl_json_base_test;--- 15* 17

LENGTH(A)           
--------------------
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  
11                  

15 rows fetched.

SQL> drop table if exists tbl_json_base_test; ---Succeed.

Succeed.

SQL> ------------------------------------
SQL> --JSONB_VALUE
SQL> ------------------------------------
SQL> drop table if exists tbl_json_ft1_test;          ---Succeed.

Succeed.

SQL> create table tbl_json_ft1_test(a CLOB check(a IS JSON), b int primary key);  ---Succeed.

Succeed.

SQL> insert into tbl_json_ft1_test values('{"user name":"jsonb","id":"123456789abcdefghijk", "age":35, "phone number":"033-5578456978251","vip level":3,"new user ?":false,"preference":["book","music","run"]}', 0); ---1 rows affected.

1 rows affected.

SQL> select jsonb_value(a, '$."user name"') from tbl_json_ft1_test where b = 1; ---1 rows fetched. jsonb

JSONB_VALUE(A, '$."USER NAME"')                                 
----------------------------------------------------------------

0 rows fetched.

SQL> insert into tbl_json_ft1_test values('{ "user_name":"jsonb","id":"123456789abcdefghijk", "age":35, "phone_number":"033-5578456978251","vip_level":3,"new_user_?":false,"preference":["book","music","run"]}', 2);  ---1 rows affected.

1 rows affected.

SQL> select json_value(a, '$.user_name') from tbl_json_ft1_test where b = 2;---1 rows fetched.

JSON_VALUE(A, '$.USER_NAME')                                    
----------------------------------------------------------------
jsonb                                                           

1 rows fetched.

SQL> select json_value(a, '$.id') from tbl_json_ft1_test where b = 2;---1 rows fetched.

JSON_VALUE(A, '$.ID')                                           
----------------------------------------------------------------
123456789abcdefghijk                                            

1 rows fetched.

SQL> select json_value(a, '$.age') from tbl_json_ft1_test where b = 2;---1 rows fetched.

JSON_VALUE(A, '$.AGE')                                          
----------------------------------------------------------------
35                                                              

1 rows fetched.

SQL> select json_value(a, '$.phone_number') from tbl_json_ft1_test where b = 2;---1 rows fetched

JSON_VALUE(A, '$.PHONE_NUMBER')                                 
----------------------------------------------------------------
033-5578456978251                                               

1 rows fetched.

SQL> select json_value(a, '$.vip_level') from tbl_json_ft1_test where b = 2;---1 rows fetched

JSON_VALUE(A, '$.VIP_LEVEL')                                    
----------------------------------------------------------------
3                                                               

1 rows fetched.

SQL> select json_value(a, '$.preference[0]') from tbl_json_ft1_test where b = 2;---1 rows fetched

JSON_VALUE(A, '$.PREFERENCE[0]')                                
----------------------------------------------------------------
book                                                            

1 rows fetched.

SQL> select json_value(a, '$.preference[1]') from tbl_json_ft1_test where b = 2;---1 rows fetched

JSON_VALUE(A, '$.PREFERENCE[1]')                                
----------------------------------------------------------------
music                                                           

1 rows fetched.

SQL> select json_value(a, '$.preference[2]') from tbl_json_ft1_test where b = 2;---1 rows fetched

JSON_VALUE(A, '$.PREFERENCE[2]')                                
----------------------------------------------------------------
run                                                             

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCDEFGHIJKLMN":1}', 3);

1 rows affected.

SQL> select json_value(a, '$.ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCDEFGHIJKLMN') from tbl_json_ft1_test where b = 3;---1 rows fetched 

CT-02503, JSON path expression syntax error, the current length(86) of step name has exceeded maximum length(68) 
SQL> insert into tbl_json_ft1_test values('[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[1,"z"],2],3],4],5],6],7],8],9],10],11],12],13],14],15],16],17],18],19],20],21],22],23],24],25],26],27],28],29],30],31],32],33],34],35],36],37],38],39],40],41],42],43],44],45]',4); //find troble 未校验

1 rows affected.

SQL> select json_value(a, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1]') from tbl_json_ft1_test where b = 4;

CT-00601, [1:1]Sql syntax error: key word expected
SQL> insert into tbl_json_ft1_test values('[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[1,"z"],2],3],4],5],6],7],8],9],10],11],12],13],14],15],16],17],18],19],20],21],22],23],24],25],26],27],28],29],30],31],32]',5); //未校验

1 rows affected.

SQL> select json_value(a, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1]') from tbl_json_ft1_test where b = 5;  ----1 rows fetched  z

CT-00601, [1:1]Sql syntax error: key word expected
SQL> select json_value(a, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]') from tbl_json_ft1_test where b = 5;  ----1 rows fetched. 1

JSON_VALUE(A, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0
----------------------------------------------------------------
1                                                               

1 rows fetched.

SQL> select json_value(a, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1]') from tbl_json_ft1_test where b = 5; ---1 rows fetched 2

JSON_VALUE(A, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0
----------------------------------------------------------------
2                                                               

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"key":123456789123456789123456789123456789}',6);

1 rows affected.

SQL> select json_value(a,'$.key') from tbl_json_ft1_test where b=6;---1 rows fetched:123456789123456789123456789123456789

JSON_VALUE(A,'$.KEY')                                           
----------------------------------------------------------------
123456789123456789123456789123456789                            

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"key":123456789123456789123456789123456789123456789}',7); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.key') from tbl_json_ft1_test where b=7;  ---123456789123456789123456789123456789123456789

JSON_VALUE(A,'$.KEY')                                           
----------------------------------------------------------------
123456789123456789123456789123456789123456789                   

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"key":123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789}',8); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.key') from tbl_json_ft1_test where b=8;  

JSON_VALUE(A,'$.KEY')                                           
----------------------------------------------------------------
123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789

1 rows fetched.

SQL> ---123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789
SQL> insert into tbl_json_ft1_test values('{"key":123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789}',9); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.key') from tbl_json_ft1_test where b=9;

JSON_VALUE(A,'$.KEY')                                           
----------------------------------------------------------------
123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789

1 rows fetched.

SQL>  ---123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789
SQL> insert into tbl_json_ft1_test values('{"key":12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912}',10); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.key') from tbl_json_ft1_test where b=10;

JSON_VALUE(A,'$.KEY')                                           
----------------------------------------------------------------
12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912

1 rows fetched.

SQL> ---12345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912345678912
SQL> insert into tbl_json_ft1_test values('{"key":123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123}',11); ---invalid json number

CT-01127, Check constraint violated
SQL> insert into tbl_json_ft1_test values('{"one_order":[1],"two_order":[[1,2,3],[4,5,6],[7,8,9]]}',11);

1 rows affected.

SQL> select json_value(a,'$.two_order[0][0]') from tbl_json_ft1_test where b=11;---1

JSON_VALUE(A,'$.TWO_ORDER[0][0]')                               
----------------------------------------------------------------
1                                                               

1 rows fetched.

SQL> select json_value(a,'$.two_order[1][1]') from tbl_json_ft1_test where b=11;---5

JSON_VALUE(A,'$.TWO_ORDER[1][1]')                               
----------------------------------------------------------------
5                                                               

1 rows fetched.

SQL> select json_value(a,'$.two_order[2][2]') from tbl_json_ft1_test where b=11;---9

JSON_VALUE(A,'$.TWO_ORDER[2][2]')                               
----------------------------------------------------------------
9                                                               

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"one_order":[1],"two_order":[[1,2,3],[4,5,6],[7,8,9]],
  2 "three_order":[[[111,112,113],[121,122,123],[131,132,133]],[[211,212,213],[221,222,223],[231,232,233]],[[311,312,313],[321,322,323],[331,332,333]]]
  3 }',12); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.three_order[0][0][0]') from tbl_json_ft1_test where b=12;---111

JSON_VALUE(A,'$.THREE_ORDER[0][0][0]')                          
----------------------------------------------------------------
111                                                             

1 rows fetched.

SQL> select json_value(a,'$.three_order[1][1][1]') from tbl_json_ft1_test where b=12;---222

JSON_VALUE(A,'$.THREE_ORDER[1][1][1]')                          
----------------------------------------------------------------
222                                                             

1 rows fetched.

SQL> select json_value(a,'$.three_order[2][2][2]') from tbl_json_ft1_test where b=12;---333

JSON_VALUE(A,'$.THREE_ORDER[2][2][2]')                          
----------------------------------------------------------------
333                                                             

1 rows fetched.

SQL> select json_value(a,'$.three_order[0][1][2]') from tbl_json_ft1_test where b=12;---123

JSON_VALUE(A,'$.THREE_ORDER[0][1][2]')                          
----------------------------------------------------------------
123                                                             

1 rows fetched.

SQL> select json_value(a,'$.three_order[2][1][0]') from tbl_json_ft1_test where b=12;---321

JSON_VALUE(A,'$.THREE_ORDER[2][1][0]')                          
----------------------------------------------------------------
321                                                             

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"one_order":[1],"two_order":[[1,2,3],[4,5,6],[7,8,9]],
  2 "three_order":[[[111,112,113],[121,122,123],[131,132,133]],[[211,212,213],[221,222,223],[231,232,233]],[[311,312,313],[321,322,323],[331,332,333]]],
  3 "four_order":[[[[4111,112,113],[4121,122,123],[4131,4132,4133]],[[4211,4212,4213],[4221,4222,4223],[4231,4232,4233]],[[4311,4312,4313],[4321,4322,4323],[4331,4332,4333]]],
  4                [[[4111,4112,4113],[4121,4122,4123],[4131,4132,4133]],[[4211,4212,4213],[4221,4222,4223],[4231,4232,4233]],[[4311,4312,4313],[4321,4322,4323],[4331,4332,4333]]],
  5                [[[4111,4112,4113],[4121,4122,4123],[4131,4132,4133]],[[4211,4212,4213],[4221,4222,4223],[4231,4232,4233]],[[4311,4312,4313],[4321,4322,4323],[4331,4332,4333]]]]
  6 }',13); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.four_order[0][0][0][0]') from tbl_json_ft1_test where b=13;---4111

JSON_VALUE(A,'$.FOUR_ORDER[0][0][0][0]')                        
----------------------------------------------------------------
4111                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[1][1][1][1]') from tbl_json_ft1_test where b=13;---4222

JSON_VALUE(A,'$.FOUR_ORDER[1][1][1][1]')                        
----------------------------------------------------------------
4222                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[2][2][2][2]') from tbl_json_ft1_test where b=13;---4333

JSON_VALUE(A,'$.FOUR_ORDER[2][2][2][2]')                        
----------------------------------------------------------------
4333                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[0][1][2][2]') from tbl_json_ft1_test where b=13;---4233

JSON_VALUE(A,'$.FOUR_ORDER[0][1][2][2]')                        
----------------------------------------------------------------
4233                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[2][2][1][0]') from tbl_json_ft1_test where b=13;---4321

JSON_VALUE(A,'$.FOUR_ORDER[2][2][1][0]')                        
----------------------------------------------------------------
4321                                                            

1 rows fetched.

SQL> insert into tbl_json_ft1_test values('{"one_order":[1],"two_order":[[1,2,3],[4,5,6],[7,8,9]],
  2 "three_order":[[[111,112,113],[121,122,123],[131,132,133]],[[211,212,213],[221,222,223],[231,232,233]],[[311,312,313],[321,322,323],[331,332,333]]],
  3 "four_order":[[[[1111,1112,1113],[1121,1122,1123],[1131,1132,1133]],[[1211,1212,1213],[1221,1222,1223],[1231,1232,1233]],[[1311,1312,1313],[1321,1322,1323],[1331,1332,1333]]],
  4                [[[2111,2112,2113],[2121,2122,2123],[2131,2132,2133]],[[2211,2212,2213],[2221,2222,2223],[2231,2232,2233]],[[2311,2312,2313],[2321,2322,2323],[2331,2332,2333]]],
  5                [[[3111,3112,3113],[3121,3122,3123],[3131,3132,3133]],[[3211,3212,3213],[3221,3222,3223],[3231,3232,3233]],[[3311,3312,3313],[3321,3322,3323],[3331,3332,3333]]]]
  6 }',14); ---1 rows affected.

1 rows affected.

SQL> select json_value(a,'$.four_order[0][0][0][0]') from tbl_json_ft1_test where b=14; ---1111

JSON_VALUE(A,'$.FOUR_ORDER[0][0][0][0]')                        
----------------------------------------------------------------
1111                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[1][1][1][1]') from tbl_json_ft1_test where b=14;---2222

JSON_VALUE(A,'$.FOUR_ORDER[1][1][1][1]')                        
----------------------------------------------------------------
2222                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[2][2][2][2]') from tbl_json_ft1_test where b=14;---3333

JSON_VALUE(A,'$.FOUR_ORDER[2][2][2][2]')                        
----------------------------------------------------------------
3333                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[0][1][2][2]') from tbl_json_ft1_test where b=14;---1233

JSON_VALUE(A,'$.FOUR_ORDER[0][1][2][2]')                        
----------------------------------------------------------------
1233                                                            

1 rows fetched.

SQL> select json_value(a,'$.four_order[2][2][1][0]') from tbl_json_ft1_test where b=14;---3321

JSON_VALUE(A,'$.FOUR_ORDER[2][2][1][0]')                        
----------------------------------------------------------------
3321                                                            

1 rows fetched.

SQL> drop table if exists tbl_json_ft1_test; ---1 rows affected.

Succeed.

SQL> ------------------------------------
SQL> --JSONB_QUERY |JSONB_EXIST
SQL> ------------------------------------
SQL> drop table if exists tbl_json_ft2_test; ---Succeed.

Succeed.

SQL> create table tbl_json_ft2_test(a CLOB check(a IS JSON), b int primary key);---Succeed.

Succeed.

SQL> insert into tbl_json_ft2_test values('{
  2 "A1":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  3 "A2":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  4 "A3":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  5 "A4":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  6 "A5":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  7 "A6":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  8 "A7":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
  9 "A8":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 10 "A9":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 11 "AA":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 12 "AB":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 13 "AC":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 14 "AD":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 15 "AE":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}},
 16 "AF":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2, "three"],"B6":{"C1":1,"C2":2,"C3":3}}
 17 }',1);---affected.

1 rows affected.

SQL> select json_query(a, '$')  from tbl_json_ft2_test where b = 1; ---ok

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A1":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A2":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A3":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A4":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A5":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A6":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A7":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A8":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"A9":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"AA":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"AB":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"AC":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"AD":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"AE":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}},"AF":{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}}

1 rows fetched.

SQL> select json_query(a, '$.A1')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.A1')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.A3')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.A3')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.A5')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.A5')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.A7')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.A7')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.A9')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.A9')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.AB')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.AB')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.AD')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.AD')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.AE')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.AE')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.AF')  from tbl_json_ft2_test where b = 1;---{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

JSON_QUERY(A, '$.AF')                                           
----------------------------------------------------------------
{"B1":"JSONB","B2":1000,"B3":false,"B4":true,"B5":[true,2,"three"],"B6":{"C1":1,"C2":2,"C3":3}}

1 rows fetched.

SQL> select json_query(a, '$.A1.B1')  from tbl_json_ft2_test where b = 1; ---find trouble

JSON_QUERY(A, '$.A1.B1')                                        
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.A1.B2')  from tbl_json_ft2_test where b = 1;

JSON_QUERY(A, '$.A1.B2')                                        
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.A1.B3')  from tbl_json_ft2_test where b = 1;

JSON_QUERY(A, '$.A1.B3')                                        
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.A1.B4')  from tbl_json_ft2_test where b = 1;

JSON_QUERY(A, '$.A1.B4')                                        
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.A1.B5')  from tbl_json_ft2_test where b = 1;

JSON_QUERY(A, '$.A1.B5')                                        
----------------------------------------------------------------
[true,2,"three"]                                                

1 rows fetched.

SQL> select json_query(a, '$.A1.B6')  from tbl_json_ft2_test where b = 1;

JSON_QUERY(A, '$.A1.B6')                                        
----------------------------------------------------------------
{"C1":1,"C2":2,"C3":3}                                          

1 rows fetched.

SQL> select json_query(a, '$.A1.B7')  from tbl_json_ft2_test where b = 1;

JSON_QUERY(A, '$.A1.B7')                                        
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_exists(a, '$')  from tbl_json_ft2_test where b = 1; ---ok

JSON_EXISTS(A, '$')
-------------------
TRUE               

1 rows fetched.

SQL> select json_exists(a, '$.A1' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A3' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A5' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A7' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A9' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AB' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AD' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AE' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AF' with wrapper)  from tbl_json_ft2_test where b = 1;---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B1' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B2' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B3' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B4' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B5' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B6' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B7' with wrapper)  from tbl_json_ft2_test where b = 1; ---TRUE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.Aa' with wrapper)  from tbl_json_ft2_test where b = 1;---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AK' with wrapper)  from tbl_json_ft2_test where b = 1;---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AM' with wrapper)  from tbl_json_ft2_test where b = 1;---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.AX' with wrapper)  from tbl_json_ft2_test where b = 1;---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.BA' with wrapper)  from tbl_json_ft2_test where b = 1; ---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.BD' with wrapper)  from tbl_json_ft2_test where b = 1; ---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> select json_exists(a, '$.A1.B6x.C5' with wrapper)  from tbl_json_ft2_test where b = 1; ---FALSE

CT-02501, [1:8]Invalid ON ERROR clause, 
SQL> insert into tbl_json_ft2_test values('{
  2 "A1x":{"B1x":"JSONB1","B2x":10001,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":1,"C2x":2,"C3x":3}},
  3 "A2x":{"B1x":"JSONB2","B2x":10002,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":2,"C2x":2,"C3x":3}},
  4 "A3x":{"B1x":"JSONB3","B2x":10003,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":3,"C2x":2,"C3x":3}},
  5 "A4x":{"B1x":"JSONB4","B2x":10004,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":4,"C2x":2,"C3x":3}},
  6 "A5x":{"B1x":"JSONB5","B2x":10005,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":5,"C2x":2,"C3x":3}},
  7 "A6x":{"B1x":"JSONB6","B2x":10006,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":6,"C2x":2,"C3x":3}},
  8 "A7x":{"B1x":"JSONB7","B2x":10007,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":7,"C2x":2,"C3x":3}},
  9 "A8x":{"B1x":"JSONB8","B2x":10008,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":8,"C2x":2,"C3x":3}},
 10 "A9x":{"B1x":"JSONB9","B2x":10009,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":9,"C2x":2,"C3x":3}},
 11 "AAx":{"B1x":"JSONBa","B2x":100010,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":10,"C2x":2,"C3x":3}},
 12 "ABx":{"B1x":"JSONBb","B2x":100011,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":11,"C2x":2,"C3x":3}},
 13 "ACx":{"B1x":"JSONBc","B2x":100012,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":12,"C2x":2,"C3x":3}},
 14 "ADx":{"B1x":"JSONBd","B2x":100013,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":13,"C2x":2,"C3x":3}},
 15 "AEx":{"B1x":"JSONBe","B2x":100014,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":14,"C2x":2,"C3x":3}},
 16 "AFx":{"B1x":"JSONBf","B2x":100015,"B3x":false,"B4x":true,"B5x":[true,2, "three"],"B6x":{"C1x":15,"C2x":2,"C3x":3}}
 17 }',2);---1 rows affected.

1 rows affected.

SQL> select json_query(a, '$.A1x')  from tbl_json_ft2_test where b = 2;---{"B1x":"JSONB1","B2x":10001,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":1,"C2x":2,"C3x":3}}

JSON_QUERY(A, '$.A1X')                                          
----------------------------------------------------------------
{"B1x":"JSONB1","B2x":10001,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":1,"C2x":2,"C3x":3}}

1 rows fetched.

SQL> select json_query(a, '$.A3x')  from tbl_json_ft2_test where b = 2;---{"B1x":"JSONB3","B2x":10003,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":3,"C2x":2,"C3x":3}}

JSON_QUERY(A, '$.A3X')                                          
----------------------------------------------------------------
{"B1x":"JSONB3","B2x":10003,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":3,"C2x":2,"C3x":3}}

1 rows fetched.

SQL> select json_query(a, '$.A5x')  from tbl_json_ft2_test where b = 2;---{"B1x":"JSONB5","B2x":10005,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":5,"C2x":2,"C3x":3}}

JSON_QUERY(A, '$.A5X')                                          
----------------------------------------------------------------
{"B1x":"JSONB5","B2x":10005,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":5,"C2x":2,"C3x":3}}

1 rows fetched.

SQL> select json_query(a, '$.A7x')  from tbl_json_ft2_test where b = 2;---{"B1x":"JSONB7","B2x":10007,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":7,"C2x":2,"C3x":3}}

JSON_QUERY(A, '$.A7X')                                          
----------------------------------------------------------------
{"B1x":"JSONB7","B2x":10007,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":7,"C2x":2,"C3x":3}}

1 rows fetched.

SQL> select json_query(a, '$.ABx')  from tbl_json_ft2_test where b = 2;---{"B1x":"JSONBb","B2x":100011,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":11,"C2x":2,"C3x":3}}

JSON_QUERY(A, '$.ABX')                                          
----------------------------------------------------------------
{"B1x":"JSONBb","B2x":100011,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":11,"C2x":2,"C3x":3}}

1 rows fetched.

SQL> select json_query(a, '$.ADx')  from tbl_json_ft2_test where b = 2;---{"B1x":"JSONBd","B2x":100013,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":13,"C2x":2,"C3x":3}}

JSON_QUERY(A, '$.ADX')                                          
----------------------------------------------------------------
{"B1x":"JSONBd","B2x":100013,"B3x":false,"B4x":true,"B5x":[true,2,"three"],"B6x":{"C1x":13,"C2x":2,"C3x":3}}

1 rows fetched.

SQL> select json_query(a, '$.A1x.B1x'  with wrapper)  from tbl_json_ft2_test where b = 2; --- 1 rows fetched

JSON_QUERY(A, '$.A1X.B1X'  WITH WRAPPER)                        
----------------------------------------------------------------
["JSONB1"]                                                      

1 rows fetched.

SQL> select json_query(a, '$.A1x.B1x' with wrapper)  from tbl_json_ft2_test where b = 2;---1 rows fetched.  ["JSONB1"]

JSON_QUERY(A, '$.A1X.B1X' WITH WRAPPER)                         
----------------------------------------------------------------
["JSONB1"]                                                      

1 rows fetched.

SQL> select json_query(a, '$.A1x.B2x' with wrapper)  from tbl_json_ft2_test where b = 2;---1 rows fetched.  [10001];

JSON_QUERY(A, '$.A1X.B2X' WITH WRAPPER)                         
----------------------------------------------------------------
[10001]                                                         

1 rows fetched.

SQL> select json_query(a, '$.A1x.B3x' with wrapper)  from tbl_json_ft2_test where b = 2;---1 rows fetched.  [false]

JSON_QUERY(A, '$.A1X.B3X' WITH WRAPPER)                         
----------------------------------------------------------------
[false]                                                         

1 rows fetched.

SQL> select json_query(a, '$.A1x.B4x' with wrapper)  from tbl_json_ft2_test where b = 2;---1 rows fetched.  [true]

JSON_QUERY(A, '$.A1X.B4X' WITH WRAPPER)                         
----------------------------------------------------------------
[true]                                                          

1 rows fetched.

SQL> select json_query(a, '$.A1x.B5x' with wrapper)  from tbl_json_ft2_test where b = 2;---1 rows fetched.  [[true,2,"three"]]

JSON_QUERY(A, '$.A1X.B5X' WITH WRAPPER)                         
----------------------------------------------------------------
[[true,2,"three"]]                                              

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x' with wrapper)  from tbl_json_ft2_test where b = 2;---1 rows fetched.  [{"C1x":1,"C2x":2,"C3x":3}]

JSON_QUERY(A, '$.A1X.B6X' WITH WRAPPER)                         
----------------------------------------------------------------
[{"C1x":1,"C2x":2,"C3x":3}]                                     

1 rows fetched.

SQL> select json_query(a, '$.A1x.B7x' error on error)  from tbl_json_ft2_test where b = 2; ---JSON_VALUE evaluated to no value

CT-02506, JSON_VALUE evaluated to no value
SQL> select json_query(a, '$.A1x.B5x')  from tbl_json_ft2_test where b = 2;---1 rows fetched. ---[true,2,"three"]

JSON_QUERY(A, '$.A1X.B5X')                                      
----------------------------------------------------------------
[true,2,"three"]                                                

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x')  from tbl_json_ft2_test where b = 2;---1 rows fetched. ---{"C1x":1,"C2x":2,"C3x":3}

JSON_QUERY(A, '$.A1X.B6X')                                      
----------------------------------------------------------------
{"C1x":1,"C2x":2,"C3x":3}                                       

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x.C1x') from tbl_json_ft2_test where b = 2;---nothing

JSON_QUERY(A, '$.A1X.B6X.C1X')                                  
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x.C2x' with wrapper) from tbl_json_ft2_test where b = 2;---1 rows fetched.: [2]

JSON_QUERY(A, '$.A1X.B6X.C2X' WITH WRAPPER)                     
----------------------------------------------------------------
[2]                                                             

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x.C3x' with wrapper) from tbl_json_ft2_test where b = 2;---1 rows fetched.: [3]

JSON_QUERY(A, '$.A1X.B6X.C3X' WITH WRAPPER)                     
----------------------------------------------------------------
[3]                                                             

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x.C3x' returning varchar2(256) with wrapper) from tbl_json_ft2_test where b = 2;---1 rows fetched.: [3]

JSON_QUERY(A, '$.A1X.B6X.C3X' RETURNING VARCHAR2(256) WITH WRAPP
----------------------------------------------------------------
[3]                                                             

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x.C3x' returning varchar2(256) with wrapper) as jbv_res from tbl_json_ft2_test where b = 2;---1 rows fetched.: [3]

JBV_RES                                                         
----------------------------------------------------------------
[3]                                                             

1 rows fetched.

SQL> select json_query(a, '$.A1x.B6x.C4x' error on error) from tbl_json_ft2_test where b = 2;---JSON_VALUE evaluated to no value

CT-02506, JSON_VALUE evaluated to no value
SQL> select json_exists(a, '$.A1x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X')
-----------------------
TRUE                   

1 rows fetched.

SQL> select json_exists(a, '$.A3x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A3X')
-----------------------
TRUE                   

1 rows fetched.

SQL> select json_exists(a, '$.A5x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A5X')
-----------------------
TRUE                   

1 rows fetched.

SQL> select json_exists(a, '$.A7x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A7X')
-----------------------
TRUE                   

1 rows fetched.

SQL> select json_exists(a, '$.ABx')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.ABX')
-----------------------
TRUE                   

1 rows fetched.

SQL> select json_exists(a, '$.ADx')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.ADX')
-----------------------
TRUE                   

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B1x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B1X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B1x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B1X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B2x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B2X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B3x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B3X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B4x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B4X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B5x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B5X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B5x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B5X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x')  from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X')
---------------------------
TRUE                       

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x.C1x') from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X.C1X')
-------------------------------
TRUE                           

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x.C2x') from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X.C2X')
-------------------------------
TRUE                           

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x.C3x') from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X.C3X')
-------------------------------
TRUE                           

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x.C3x') from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X.C3X')
-------------------------------
TRUE                           

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x.C3x') as jbv_res from tbl_json_ft2_test where b = 2;---TRUE

JBV_RES
-------
TRUE   

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B6x.C4x') from tbl_json_ft2_test where b = 2;---TRUE

JSON_EXISTS(A, '$.A1X.B6X.C4X')
-------------------------------
FALSE                          

1 rows fetched.

SQL> select json_exists(a, '$.AHx')  from tbl_json_ft2_test where b = 2;---FALSE

JSON_EXISTS(A, '$.AHX')
-----------------------
FALSE                  

1 rows fetched.

SQL> select json_exists(a, '$.AKx')  from tbl_json_ft2_test where b = 2;---FALSE

JSON_EXISTS(A, '$.AKX')
-----------------------
FALSE                  

1 rows fetched.

SQL> select json_exists(a, '$.A1x.B7x')  from tbl_json_ft2_test where b = 2;---FALSE

JSON_EXISTS(A, '$.A1X.B7X')
---------------------------
FALSE                      

1 rows fetched.

SQL> insert into tbl_json_ft2_test values('{"id":null, "name":"andy", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{"A":1, "B":2, "C":3, "D":4}}', 3); --ok

1 rows affected.

SQL> select json_query(a, '$') as jbq_res from tbl_json_ft2_test where b = 3;---{"addr":"China","age":18,"attrs":{"A":1,"B":2,"C":3,"D":4},"hob":[1,2,3,4,[5,6,{"lov":true}]],"id":null,"name":"andy"}

JBQ_RES                                                         
----------------------------------------------------------------
{"id":null,"name":"andy","age":18,"addr":"China","hob":[1,2,3,4,[5,6,{"lov":true}]],"attrs":{"A":1,"B":2,"C":3,"D":4}}

1 rows fetched.

SQL> select json_query(a, '$.id') as jbq_res from tbl_json_ft2_test where b = 3;---nothing

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.id' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---null

JBQ_RES                                                         
----------------------------------------------------------------
[null]                                                          

1 rows fetched.

SQL> select json_query(a, '$.name') as jbq_res from tbl_json_ft2_test where b = 3;---nothing

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.name' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---["andy"]

JBQ_RES                                                         
----------------------------------------------------------------
["andy"]                                                        

1 rows fetched.

SQL> select json_query(a, '$.age') as jbq_res from tbl_json_ft2_test where b = 3;---nothing

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.age' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[18]

JBQ_RES                                                         
----------------------------------------------------------------
[18]                                                            

1 rows fetched.

SQL> select json_query(a, '$.addr' with conditional wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---["China"]

JBQ_RES                                                         
----------------------------------------------------------------
["China"]                                                       

1 rows fetched.

SQL> select json_query(a, '$.hob[2 to 4]' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[3,4,[5,6,{"lov":true}]]

JBQ_RES                                                         
----------------------------------------------------------------
[3,4,[5,6,{"lov":true}]]                                        

1 rows fetched.

SQL> select json_query(a, '$.hob[2 to 4]') as jbq_res from tbl_json_ft2_test where b = 3;---nothing

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.hob') as jbq_res from tbl_json_ft2_test where b = 3;---[1,2,3,4,[5,6,{"lov":true}]]

JBQ_RES                                                         
----------------------------------------------------------------
[1,2,3,4,[5,6,{"lov":true}]]                                    

1 rows fetched.

SQL> select json_query(a, '$.hob[1, 4]' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[2,[5,6,{"lov":true}]]

JBQ_RES                                                         
----------------------------------------------------------------
[2,[5,6,{"lov":true}]]                                          

1 rows fetched.

SQL> select json_query(a, '$.hob[1, 4]') as jbq_res from tbl_json_ft2_test where b = 3;---nothing

JBQ_RES                                                         
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_query(a, '$.hob[4]' with conditional wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[5,6,{"lov":true}]

JBQ_RES                                                         
----------------------------------------------------------------
[5,6,{"lov":true}]                                              

1 rows fetched.

SQL> select json_query(a, '$.hob[4][*]' with conditional wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[5,6,{"lov":true}]

JBQ_RES                                                         
----------------------------------------------------------------
[5,6,{"lov":true}]                                              

1 rows fetched.

SQL> select json_query(a, '$.hob[4][*].*' with conditional wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[true]

JBQ_RES                                                         
----------------------------------------------------------------
[true]                                                          

1 rows fetched.

SQL> select json_query(a, '$.attrs.A' with wrapper) from tbl_json_ft2_test where b = 3;---[1]

JSON_QUERY(A, '$.ATTRS.A' WITH WRAPPER)                         
----------------------------------------------------------------
[1]                                                             

1 rows fetched.

SQL> select json_query(a, '$.attrs' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[{"A":1,"B":2,"C":3,"D":4}]

JBQ_RES                                                         
----------------------------------------------------------------
[{"A":1,"B":2,"C":3,"D":4}]                                     

1 rows fetched.

SQL> select json_query(a, '$.attrs.A' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[1]

JBQ_RES                                                         
----------------------------------------------------------------
[1]                                                             

1 rows fetched.

SQL> select json_query(a, '$.attrs.B' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[2]

JBQ_RES                                                         
----------------------------------------------------------------
[2]                                                             

1 rows fetched.

SQL> select json_query(a, '$.attrs.C' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[3]

JBQ_RES                                                         
----------------------------------------------------------------
[3]                                                             

1 rows fetched.

SQL> select json_query(a, '$.attrs.D' with wrapper) as jbq_res from tbl_json_ft2_test where b = 3;---[4]

JBQ_RES                                                         
----------------------------------------------------------------
[4]                                                             

1 rows fetched.

SQL> insert into tbl_json_ft2_test values('{"id":0004, "name":"liucf", "age":21, "addr":"China", "hob":[2, 2, 3, 8, [1, 8, {"lov":true}]], "attrs":{"A":1, "B":8, "C":3, "D":4}}', 4); 

1 rows affected.

SQL> insert into tbl_json_ft2_test values('{"id":0005, "name":"yinmhd", "age":22, "addr":"China", "hob":[1, 4, 0, 8, [5, 1, {"lov":false}]], "attrs":{"A":0, "B":1, "C":3, "D":4}}', 5); 

1 rows affected.

SQL> insert into tbl_json_ft2_test values('{"id":0006, "name":"anxi", "age":34, "addr":"China", "hob":[4, 2, 0, 3, [2, 3, {"lov":true}]], "attrs":{"A":1, "B":2, "C":9, "D":8}}', 6); 

1 rows affected.

SQL> insert into tbl_json_ft2_test values('{"id":0008, "name":"tyth", "age":19, "addr":"China", "hob":[1, 2, 9, 7, [7, 5, {"lov":false}]], "attrs":{"A":4, "B":5, "C":3, "D":4}}', 7); 

1 rows affected.

SQL> insert into tbl_json_ft2_test values('{"id":0017, "name":"sunwq", "age":18, "addr":"China", "hob":[9, 4, 4, 5, [9, 1, {"lov":true}]], "attrs":{"A":1, "B":3, "C":2, "D":7}}', 8); 

1 rows affected.

SQL> insert into tbl_json_ft2_test values('{"id":0108, "name":"lami", "age":22, "addr":"China", "hob":[1, 2, 5, 1, [0, 2, {"lov":false}]], "attrs":{"A":5, "B":2, "C":3, "D":0}}', 9);

1 rows affected.

SQL> insert into tbl_json_ft2_test values('{"id":0128, "name":"dsasd", "age":18, "addr":"China", "hob":[1, 2, 3, 4, [5, 6, {"lov":true}]], "attrs":{"A":1, "B":2, "C":3, "D":4}}', 10);

1 rows affected.

SQL> select json_query(a, '$.attrs.D' with wrapper) as jbq_res from tbl_json_ft2_test where b > 3; ---7 rows fetched. [4][4][8][4][7][0][4]

JBQ_RES                                                         
----------------------------------------------------------------
[4]                                                             
[4]                                                             
[8]                                                             
[4]                                                             
[7]                                                             
[0]                                                             
[4]                                                             

7 rows fetched.

SQL> select json_query(a, '$.hob[1, 4]' with wrapper) as jbq_res from tbl_json_ft2_test where b > 3;---7 rows fetched. ok

JBQ_RES                                                         
----------------------------------------------------------------
[2,[1,8,{"lov":true}]]                                          
[4,[5,1,{"lov":false}]]                                         
[2,[2,3,{"lov":true}]]                                          
[2,[7,5,{"lov":false}]]                                         
[4,[9,1,{"lov":true}]]                                          
[2,[0,2,{"lov":false}]]                                         
[2,[5,6,{"lov":true}]]                                          

7 rows fetched.

SQL> select json_query(a, '$.name' with wrapper) as jbq_res from tbl_json_ft2_test where b > 3;---7 rows fetched.ok

JBQ_RES                                                         
----------------------------------------------------------------
["liucf"]                                                       
["yinmhd"]                                                      
["anxi"]                                                        
["tyth"]                                                        
["sunwq"]                                                       
["lami"]                                                        
["dsasd"]                                                       

7 rows fetched.

SQL> select json_query(a, '$.id' with wrapper) as jbq_res from tbl_json_ft2_test where b > 3;---7 rows fetched.ok

JBQ_RES                                                         
----------------------------------------------------------------
[0004]                                                          
[0005]                                                          
[0006]                                                          
[0008]                                                          
[0017]                                                          
[0108]                                                          
[0128]                                                          

7 rows fetched.

SQL> select json_query(a, '$.hob[4][2].lov' with wrapper) as jbq_res from tbl_json_ft2_test where b > 3;--- ok,nice

JBQ_RES                                                         
----------------------------------------------------------------
[true]                                                          
[false]                                                         
[true]                                                          
[false]                                                         
[true]                                                          
[false]                                                         
[true]                                                          

7 rows fetched.

SQL> select json_query(a, '$.attrs.A' with wrapper) as jbq_res from tbl_json_ft2_test where b > 3;---ok,nice

JBQ_RES                                                         
----------------------------------------------------------------
[1]                                                             
[0]                                                             
[1]                                                             
[4]                                                             
[1]                                                             
[5]                                                             
[1]                                                             

7 rows fetched.

SQL> select json_value(a, '$.attrs.D') as jbq_res from tbl_json_ft2_test where b > 3; ---7 rows fetched. 4 4 8 4 7 0 4

JBQ_RES                                                         
----------------------------------------------------------------
4                                                               
4                                                               
8                                                               
4                                                               
7                                                               
0                                                               
4                                                               

7 rows fetched.

SQL> select json_value(a, '$.hob[1, 4]' ) as jbq_res from tbl_json_ft2_test where b > 3;---nothing

JBQ_RES                                                         
----------------------------------------------------------------
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                

7 rows fetched.

SQL> select json_query(a, '$.hob[1, 4]' with wrapper)as jbq_res from tbl_json_ft2_test where b > 3;

JBQ_RES                                                         
----------------------------------------------------------------
[2,[1,8,{"lov":true}]]                                          
[4,[5,1,{"lov":false}]]                                         
[2,[2,3,{"lov":true}]]                                          
[2,[7,5,{"lov":false}]]                                         
[4,[9,1,{"lov":true}]]                                          
[2,[0,2,{"lov":false}]]                                         
[2,[5,6,{"lov":true}]]                                          

7 rows fetched.

SQL> select json_value(a, '$.name' ) as jbq_res from tbl_json_ft2_test where b > 3;---7 rows fetched.ok

JBQ_RES                                                         
----------------------------------------------------------------
liucf                                                           
yinmhd                                                          
anxi                                                            
tyth                                                            
sunwq                                                           
lami                                                            
dsasd                                                           

7 rows fetched.

SQL> select json_value(a, '$.id') as jbq_res from tbl_json_ft2_test where b > 3;---7 rows fetched.ok

JBQ_RES                                                         
----------------------------------------------------------------
0004                                                            
0005                                                            
0006                                                            
0008                                                            
0017                                                            
0108                                                            
0128                                                            

7 rows fetched.

SQL> select json_value(a, '$.hob[4][2].lov' ) as jbq_res from tbl_json_ft2_test where b > 3;--- ok,nice

JBQ_RES                                                         
----------------------------------------------------------------
true                                                            
false                                                           
true                                                            
false                                                           
true                                                            
false                                                           
true                                                            

7 rows fetched.

SQL> select json_value(a, '$.attrs.A') as jbq_res from tbl_json_ft2_test where b > 3;---ok,nice

JBQ_RES                                                         
----------------------------------------------------------------
1                                                               
0                                                               
1                                                               
4                                                               
1                                                               
5                                                               
1                                                               

7 rows fetched.

SQL> insert into tbl_json_ft2_test values('[{"name":"sdf","age":15,"fans":false,"xiaodi":[1]},{"name":"xsa","age":16,"fans":true, "xiaodi":[1]}]',1001);

1 rows affected.

SQL> insert into tbl_json_ft2_test values('[{"name":"sdf","age":15,"fans":false,"xiaodi":[null]},
  2                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
  3                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
  4                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]}]',1002);

1 rows affected.

SQL> insert into tbl_json_ft2_test values('[
  2                                        {"name":"sdf","age":15,"fans":false,"xiaodi":
  3                                        [{"name":"sdf","age":15,"fans":false,"xiaodi":[null]},
  4                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
  5                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
  6                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]}]},
  7                                         
  8                                         {"name":"xsa","age":16,"fans":true, "xiaodi":
  9                                         [{"name":"sdf","age":15,"fans":false,"xiaodi":[null]},
 10                                          {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
 11                                          {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
 12                                          {"name":"xsa","age":16,"fans":true, "xiaodi":[null]}]},                                       
 13                                         {"name":"xsa","age":17,"fans":false, "xiaodi":
 14                                         [{"name":"sdf","age":15,"fans":false,"xiaodi":[null]},
 15                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
 16                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
 17                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]}]},                                        
 18                                         {"name":"xsa","age":18,"fans":true, "xiaodi":
 19                                         [{"name":"sdf","age":15,"fans":false,"xiaodi":[null]},
 20                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
 21                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]},
 22                                         {"name":"xsa","age":16,"fans":true, "xiaodi":[null]}]}]',13);                                                         

1 rows affected.

SQL> select json_query(a, '$[0 to 4].name' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13; ---ok

JBQ_RES                                                         
----------------------------------------------------------------
["sdf","xsa","xsa","xsa"]                                       

1 rows fetched.

SQL> select json_query(a, '$[*].name' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13;---ok

JBQ_RES                                                         
----------------------------------------------------------------
["sdf","xsa","xsa","xsa"]                                       

1 rows fetched.

SQL> select json_query(a, '$[0 to 4].age' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13; ---ok

JBQ_RES                                                         
----------------------------------------------------------------
[15,16,17,18]                                                   

1 rows fetched.

SQL> select json_query(a, '$[0 to 4].fans' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13; ---ok     

JBQ_RES                                                         
----------------------------------------------------------------
[false,true,false,true]                                         

1 rows fetched.

SQL> select json_query(a, '$[0 to 4].xiaodi.name' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13; ---ok 

JBQ_RES                                                         
----------------------------------------------------------------
["sdf","xsa","xsa","xsa","sdf","xsa","xsa","xsa","sdf","xsa","xsa","xsa","sdf","xsa","xsa","xsa"]

1 rows fetched.

SQL> select json_query(a, '$[0 to 4].xiaodi.fans' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13; ---ok 

JBQ_RES                                                         
----------------------------------------------------------------
[false,true,true,true,false,true,true,true,false,true,true,true,false,true,true,true]

1 rows fetched.

SQL> select json_query(a, '$[0 to 4].xiaodi.xiaodi' with wrapper)as jbq_res from tbl_json_ft2_test where b = 13;---ok

JBQ_RES                                                         
----------------------------------------------------------------
[[null],[null],[null],[null],[null],[null],[null],[null],[null],[null],[null],[null],[null],[null],[null],[null]]

1 rows fetched.

SQL> select json_exists(a, '$')  from tbl_json_ft2_test where b > 3; ---OK

JSON_EXISTS(A, '$')
-------------------
TRUE               
TRUE               
TRUE               
TRUE               
TRUE               
TRUE               
TRUE               
TRUE               
TRUE               
TRUE               

10 rows fetched.

SQL> select json_exists(a, '$.attrs.A')  from tbl_json_ft2_test where b > 3; ---OK

JSON_EXISTS(A, '$.ATTRS.A')
---------------------------
TRUE                       
TRUE                       
TRUE                       
TRUE                       
TRUE                       
TRUE                       
TRUE                       
FALSE                      
FALSE                      
FALSE                      

10 rows fetched.

SQL> select json_exists(a, '$.age')  from tbl_json_ft2_test where b > 3; ---OK

JSON_EXISTS(A, '$.AGE')
-----------------------
TRUE                   
TRUE                   
TRUE                   
TRUE                   
TRUE                   
TRUE                   
TRUE                   
TRUE                   
TRUE                   
TRUE                   

10 rows fetched.

SQL> select json_exists(a, '$.fans')  from tbl_json_ft2_test where b > 3; ---OK

JSON_EXISTS(A, '$.FANS')
------------------------
FALSE                   
FALSE                   
FALSE                   
FALSE                   
FALSE                   
FALSE                   
FALSE                   
TRUE                    
TRUE                    
TRUE                    

10 rows fetched.

SQL> ------------------------------------
SQL> -- JSONB_MERGEPATCH
SQL> ------------------------------------
SQL> drop table if exists tbl_json_ft3_test;          ---Succeed.

Succeed.

SQL> create table tbl_json_ft3_test(a CLOB check(a IS JSON), b int primary key);  ---Succeed.

Succeed.

SQL> insert into tbl_json_ft3_test values('{"addres":{"home":"xxx","company":"xxx"}, "age":0, "name":"xxx", "hobby":["book","music","run","food"]}',1);

1 rows affected.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"name":"adc007"}') from tbl_json_ft3_test where b = 1;

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"addres":{"home":"I no"}}') from tbl_json_ft3_test where b = 1;

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select jsonb_mergepatch(a,  '{"addres":{"company":"HHHKKK"}}') from tbl_json_ft3_test where b = 1;

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"age":"22"}') from tbl_json_ft3_test where b = 1;

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"age":22}') from tbl_json_ft3_test where b = 1;

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select jsonb_mergepatch(a, '{"hobby":[123,"123"]}') from tbl_json_ft3_test where b = 1;

CT-01302, Unknown lob type when Input to JSONB generation function has unsupported data type.
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =1;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> select json_mergepatch(a, '{"addres":{"home":"xzx","moe":"cdf"}}') from tbl_json_ft3_test where b = 1;

JSON_MERGEPATCH(A, '{"ADDRES":{"HOME":"XZX","MOE":"CDF"}}')     
----------------------------------------------------------------
{"addres":{"home":"xzx","company":"xxx","moe":"cdf"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}

1 rows fetched.

SQL> insert into tbl_json_ft3_test values('{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2}, "OME_A":3}}',2);

1 rows affected.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =2;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"KMP":10}}') from tbl_json_ft3_test where b = 2;

JSON_MERGEPATCH(A, '{"A":{"KMP":10}}')                          
----------------------------------------------------------------
{"A":{"KMP":10,"ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

2 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"ADC":{"BBC":20}}}') from tbl_json_ft3_test where b = 2;

JSON_MERGEPATCH(A, '{"A":{"ADC":{"BBC":20}}}')                  
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":20},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

2 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"OME":{"A":2}}}') from tbl_json_ft3_test where b = 2;---ok

JSON_MERGEPATCH(A, '{"A":{"OME":{"A":2}}}')                     
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":{"A":2}},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

2 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"OME":30}}') from tbl_json_ft3_test where b = 2;

JSON_MERGEPATCH(A, '{"A":{"OME":30}}')                          
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":30},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

2 rows fetched.

SQL> select json_mergepatch(a, '{"B":{"KMP_A":10}}') from tbl_json_ft3_test where b = 2;

JSON_MERGEPATCH(A, '{"B":{"KMP_A":10}}')                        
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":10,"ADC_A":{"BBC_A":2},"OME_A":3}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

2 rows fetched.

SQL> select json_mergepatch(a, '{"B":{"ADC_A":30}}') from tbl_json_ft3_test where b = 2;

JSON_MERGEPATCH(A, '{"B":{"ADC_A":30}}')                        
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":30,"OME_A":3}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"addres":{"home":"xxx","company":"xxx"},"age":0,"name":"xxx","hobby":["book","music","run","food"]}
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":2},"OME_A":3}}

2 rows fetched.

SQL> select json_mergepatch(a, '{"B":{"ADC_A":{"BBC_A":{"LOL":400}}}}') from tbl_json_ft3_test where b = 2;

JSON_MERGEPATCH(A, '{"B":{"ADC_A":{"BBC_A":{"LOL":400}}}}')     
----------------------------------------------------------------
{"A":{"KMP":"1","ADC":{"BBC":"2"},"OME":3},"B":{"KMP_A":1,"ADC_A":{"BBC_A":{"LOL":400}},"OME_A":3}}

1 rows fetched.

SQL> insert into tbl_json_ft3_test values('{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}',3);

1 rows affected.

SQL> ----replace
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"KEY":100}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"KEY":100}')                               
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}},"KEY":100}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"KEY":100}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"KEY":100}}')                         
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7,"KEY":100},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P1":{"KEY":100}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P1":{"KEY":100}}}')                  
----------------------------------------------------------------
{"A":{"P1":{"KEY":100},"P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"KEY":100}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"KEY":100}}}')                  
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}},"KEY":100},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z2":20}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z2":20}}}')                    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":20,"Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T1":40}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T1":40}}}}')             
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":40,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T2":{"K1":50}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T2":{"K1":50}}}}}')      
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":50,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":100}}}}}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":{"M1":{"M2":{"M3":{"M4":100}}}}}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> ----delete
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":null}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":NULL}')                                
----------------------------------------------------------------
{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}              

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":null}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":NULL}}')                         
----------------------------------------------------------------
{"A":{"P1":"1","P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P3":null}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P3":NULL}}')                         
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}}},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P4":null}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P4":NULL}}')                         
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z1":null}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z1":NULL}}}')                  
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T1":null}}}}') from tbl_json_ft3_test where b = 3; ---不支持大写

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T1":NULL}}}}')           
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T2":{"K1":null}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T2":{"K1":NULL}}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T2":{"K2":null}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T2":{"K2":NULL}}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T2":{"K3":null}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T2":{"K3":NULL}}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T2":{"K4":null}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T2":{"K4":NULL}}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"B":{"P":{"Z":{"T":{"E":{"C":null}}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"B":{"P":{"Z":{"T":{"E":{"C":NULL}}}}}}')  
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"B":9,"D":10}}}}}}

1 rows fetched.

SQL> ---insert
SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"C":{"P1":1}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"C":{"P1":1}}')                            
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}},"C":{"P1":1}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P4":{"KEY":121}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P4":{"KEY":121}}}')                  
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7,"P4":{"KEY":121}},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z4":{"T1":[1,2,3,4,5]}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z4":{"T1":[1,2,3,4,5]}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}},"Z4":{"T1":[1,2,3,4,5]}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T3":[1,2,3,4,5]}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T3":[1,2,3,4,5]}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6},"T3":[1,2,3,4,5]}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T3":{"K3":1000}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T3":{"K3":1000}}}}}')    
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6},"T3":{"K3":1000}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":123}}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":123}}}}}}
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6},"T3":{"K3":{"LL":123}}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_mergepatch(a, '{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}') from tbl_json_ft3_test where b = 3;

JSON_MERGEPATCH(A, '{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2"
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6},"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> select json_query(a, '$') from tbl_json_ft3_test where b =3;

JSON_QUERY(A, '$')                                              
----------------------------------------------------------------
{"A":{"P1":"1","P2":{"Z1":"2","Z2":"3","Z3":{"T1":4,"T2":{"K1":5,"K2":6}}},"P3":7},"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}

1 rows fetched.

SQL> ------------------------------------
SQL> -- JSONB_SET
SQL> ------------------------------------
SQL> insert into tbl_json_ft3_test values('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}',4);

1 rows affected.

SQL> ---delete
SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.name') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.manny') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.addr') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.ho') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.ho[3].o') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.ho[3]') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.case') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.case.A') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.case.B') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.case.C') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age','$.case.D') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> 
SQL> ---replece
SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.age',100) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":100,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.name','"ZHANGFEI"') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"ZHANGFEI","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.manny',false) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.addr','"CHANBANPO"') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"CHANBANPO","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho',[1,3,4,5]) from tbl_json_ft3_test where b=4;

CT-00601, [1:124]Sql syntax error: text is incorrect
SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[3].o','"LING"') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":"LING"}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[3]',123) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,123],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case','{"M":"LINGDANFA"}') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"M":"LINGDANFA"}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case.A',101) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":101,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case.B',false) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case.C','"ONE"') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":"ONE"}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case.D',123) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3,"D":123}}

1 rows fetched.

SQL> 
SQL> ---insert
SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ADD1',100) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3},"ADD1":100}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[6]',1234) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0},1234],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[3].k','"K"' error on error) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0,"k":"K"}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case.D',100) from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3,"D":100}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.case.E','{"kay":"val"}') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3,"E":{"kay":"val"}}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[5].case.A','{"kay":"val"}') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[4].case.A','{"kay":"val"}') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[4]','{"kay":"val"}') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0},{"kay":"val"}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> select json_set('{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0}],"case":{"A":1,"B":2,"C":3}}','$.ho[5]','{"kay":"val"}') from tbl_json_ft3_test where b=4;

JSON_SET('{"NAME":"XXX","AGE":0,"MANNY":FALSE,"ADDR":"XXX","HO":
----------------------------------------------------------------
{"name":"xxx","age":0,"manny":false,"addr":"xxx","ho":[0,0,0,{"o":0},{"kay":"val"}],"case":{"A":1,"B":2,"C":3}}

1 rows fetched.

SQL> 
SQL> drop table if exists tbl_jsonb_ft4_test;          ---Succeed.

Succeed.

SQL> create table tbl_jsonb_ft4_test(a CLOB check(a IS JSON), b int primary key);  ---Succeed.

Succeed.

SQL> ------------------------------------
SQL> -- JSON_ARRAY_LENGTH
SQL> ------------------------------------
SQL> select json_array_length('[]');

JSON_ARRAY_LENGTH('[]')
-----------------------
0                      

1 rows fetched.

SQL> select json_array_length('[{}]');

JSON_ARRAY_LENGTH('[{}]')
-------------------------
1                        

1 rows fetched.

SQL> select json_array_length('[[],[],[],[]]');

JSON_ARRAY_LENGTH('[[],[],[],[]]')
----------------------------------
4                                 

1 rows fetched.

SQL> select json_array_length('[[[1],[2],[3],[4]],[[1,2,3,4],[3,4,5,6],[7,8,9,1],[1,3,4,5]],[1,1,2,1],[2,2,2,1]]');

JSON_ARRAY_LENGTH('[[[1],[2],[3],[4]],[[1,2,3,4],[3,4,5,6],[7,8,
----------------------------------------------------------------
4                                                               

1 rows fetched.

SQL> select json_array_length('[[[1],[2],[3],[4]],[[1,2,3,{"ket":1}],[3,4,5,6],[7,8,9,1],[1,3,4,5]],[1,1,2,1],[2,2,2,1]]');

JSON_ARRAY_LENGTH('[[[1],[2],[3],[4]],[[1,2,3,{"KET":1}],[3,4,5,
----------------------------------------------------------------
4                                                               

1 rows fetched.

SQL> ------------------------------------
SQL> -- JSON_OBJECT
SQL> ------------------------------------
SQL> select json_object(key 'NAME' is 1);---{"NAME":1}

JSON_OBJECT(KEY 'NAME' IS 1)                                    
----------------------------------------------------------------
{"NAME":1}                                                      

1 rows fetched.

SQL> select json_object(key 'NAME' is 'adc');---{"NAME":"adc"}

JSON_OBJECT(KEY 'NAME' IS 'ADC')                                
----------------------------------------------------------------
{"NAME":"adc"}                                                  

1 rows fetched.

SQL> select json_object(key 'NAME' is 'true');---{"NAME":"true"}

JSON_OBJECT(KEY 'NAME' IS 'TRUE')                               
----------------------------------------------------------------
{"NAME":"true"}                                                 

1 rows fetched.

SQL> select json_object(key 'NAME' is '[1,2,3,5]' format json);---{"NAME":[1,2,3,5]}

JSON_OBJECT(KEY 'NAME' IS '[1,2,3,5]' FORMAT JSON)              
----------------------------------------------------------------
{"NAME":[1,2,3,5]}                                              

1 rows fetched.

SQL> select json_object(key 'NAME' is 'true' format json);---{"NAME":true}

JSON_OBJECT(KEY 'NAME' IS 'TRUE' FORMAT JSON)                   
----------------------------------------------------------------
{"NAME":true}                                                   

1 rows fetched.

SQL> select json_object(key 'NAME' is 'null'  format json);---{"NAME":null}

JSON_OBJECT(KEY 'NAME' IS 'NULL'  FORMAT JSON)                  
----------------------------------------------------------------
{"NAME":null}                                                   

1 rows fetched.

SQL> select json_object(key 'NAME' is '{"A":[1,2,3,4]}'  format json);---{"NAME":{"A":[1,2,3,4]}}

JSON_OBJECT(KEY 'NAME' IS '{"A":[1,2,3,4]}'  FORMAT JSON)       
----------------------------------------------------------------
{"NAME":{"A":[1,2,3,4]}}                                        

1 rows fetched.

SQL> 
SQL> ------------------------------------
SQL> -- JSON_ERROR
SQL> ------------------------------------
SQL> select json_array_length('{}');  ---CT-02504, [1:27]JSON syntax error, unexpected { found

CT-02504, [1:27]JSON syntax error, unexpected { found
SQL> select json_object(key 'NAME' is true);---CT-02504, [1:35]JSON syntax error, unexpected T found

CT-02504, [1:35]JSON syntax error, unexpected T found
SQL> 
SQL> drop table if exists tbl_js_eror_test_xy; ---Succeed.

Succeed.

SQL> create table tbl_js_eror_test_xy(a CLOB check(a IS JSON));---Succeed.

Succeed.

SQL> insert into tbl_js_eror_test_xy values('[aaa]');    ---CT-01222, Check constraint violated

CT-01127, Check constraint violated
SQL> insert into tbl_js_eror_test_xy values('[123,]');   ---CT-00601, Check constraint violated

CT-01127, Check constraint violated
SQL> insert into tbl_js_eror_test_xy values('[123,[NULL]]'); ---CT-00601, Sql syntax error: too many value expressions

CT-01127, Check constraint violated
SQL> insert into tbl_js_eror_test_xy values('[aaa]'); ---CT-00601, Sql syntax error: too many value expressions

CT-01127, Check constraint violated
SQL> insert into tbl_js_eror_test_xy values('[123,]');---CT-00601, Sql syntax error: too many value expressions

CT-01127, Check constraint violated
SQL> insert into tbl_js_base_test_xy values('{"kex_1":2738937798.925638525,"kex_2":"string","kex_3":false,"kex_4":[1,2,3,4],"kex_5":{"k_1":1,"k_2":'string'}}');---  CT-00601, [1:144]Sql syntax error: , expected but string foun

CT-00601, [1:144]Sql syntax error: , expected but string found
SQL> 
SQL> insert into tbl_js_eror_test_xy values('{"kex_1":2738937798.925638525,"kex_2":"string","kex_3":false,"kex_4":[1,2,3,4],"kex_5":{"k_1":1,"k_2":"string"}}');     --1 rows affected.

1 rows affected.

SQL> select json_value(a, '$[0].programmers[0].firstName' error on error) as jb_res from tbl_js_eror_test_xy ; ---CT-02506, JSON_VALUE evaluated to no value

CT-02506, JSON_VALUE evaluated to no value
SQL> select json_value(a, '$[0].kex_' error on error) as jb_res from tbl_js_eror_test_xy ; ---CT-02506, JSON_VALUE evaluated to no value

CT-02506, JSON_VALUE evaluated to no value
SQL> select json_value(a, '$[0].kex_4' error on error) as jb_res from tbl_js_eror_test_xy ; ---CT-02506, JSON_VALUE evaluated to non-scalar value

CT-02506, JSON_VALUE evaluated to non-scalar value
SQL> select json_query(a, '$' ,returning varchar2(512) with wrapper ) as jbq_res from tbl_js_eror_test_xy ; ---CT-02501, Invalid RETURNING/ON clause

CT-02501, Invalid RETURNING/ON clause, 
SQL> select json_query(a, '$.kex_1' returning varchar2(512) error on error) as jbq_res from tbl_js_eror_test_xy ; ---CT-02506, JSON_VALUE evaluated to scalar value

CT-02506, JSON_VALUE evaluated to scalar value
SQL> 
SQL> drop table if exists tbl_js_eror_test_xy; ---Succeed.

Succeed.

SQL> create table tbl_js_eror_test_xy(a CLOB check(a IS JSON),b int primary key);---Succeed.

Succeed.

SQL> insert into tbl_js_eror_test_xy values('[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[1,"z"],2],3],4],5],6],7],8],9],10],11],12],13],14],15],16],17],18],19],20],21],22],23],24],25],26],27],28],29],30],31],32],33],34],35],36],37],38],39],40],41],42],43],44],45]',1);

1 rows affected.

SQL> 
SQL> select json_value(a, '$.[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][1]') from tbl_js_eror_test_xy  where b=1;---CT-02503, JSON path expression syntax error, exceed max path nest level(maximum: 32)

CT-02503, JSON path expression syntax error, exceed max path nest level(maximum: 32)
SQL> select json_mergepatch(a,'{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"B":{"C":{"D":{"E":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}') from tbl_js_eror_test_xy where b=1; ---1 rows fetched.

JSON_MERGEPATCH(A,'{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":
----------------------------------------------------------------
{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"P2":{"Z3":{"T2":{"K2":{"M1":{"M2":{"M3":{"M4":{"A":{"B":{"C":{"D":{"E":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"A":{"P2":{"Z3":{"T3":{"K3":{"LL":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"10":{"11":{"12":{"13":{"14":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":{"B":{"P":{"Z":{"T":{"E":{"C":8,"B":9,"D":10}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}

1 rows fetched.

SQL> 


