

SQL> DROP TABLE IF EXISTS T_UNION_1;

Succeed.

SQL> DROP TABLE IF EXISTS T_UNION_2;

Succeed.

SQL> CREATE TABLE T_UNION_1 (F_INT1 INT, F_INT2 DECIMAL(20,0), F_CHAR CHAR(16), F_DATE DATE);

Succeed.

SQL> CREATE TABLE T_UNION_2 (F_INT1 INT, F_INT2 DECIMAL(20,0), F_CHAR CHAR(16), F_DATE DATE);

Succeed.

SQL> 
SQL> --EXPECT ERROR
SQL> SELECT * FROM T_UNION_1 UNION SELECT * FROM T_UNION_2 ORDER BY F_INT1 ORDER BY F_INT1;

CT-00601, [1:71]Sql syntax error: INVALID ORDER
SQL> SELECT * FROM T_UNION_1 ORDER BY F_INT1 ORDER BY F_INT1 UNION SELECT * FROM T_UNION_2;

CT-00601, [1:41]Sql syntax error: INVALID ORDER
SQL> SELECT F_INT1 FROM T_UNION_1 UNION SELECT * FROM T_UNION_2;

CT-00601, [1:36]Sql syntax error: query block has incorrect number of result columns
SQL> SELECT * FROM T_UNION_1 UNION SELECT F_INT1 FROM T_UNION_2;

CT-00601, [1:31]Sql syntax error: query block has incorrect number of result columns
SQL> SELECT F_INT1 FROM T_UNION_1 UNION SELECT F_INT1,F_INT2 FROM T_UNION_2;

CT-00601, [1:36]Sql syntax error: query block has incorrect number of result columns
SQL> SELECT F_INT1,F_INT2 FROM T_UNION_1 UNION SELECT F_INT1 FROM T_UNION_2;

CT-00601, [1:43]Sql syntax error: query block has incorrect number of result columns
SQL> 
SQL> --EMPTY RECORD
SQL> (SELECT F_INT1 FROM T_UNION_1 GROUP BY F_INT1) UNION (SELECT F_INT1 FROM T_UNION_2 GROUP BY F_INT1) ORDER BY F_INT1 DESC;

F_INT1      
------------

0 rows fetched.

SQL> SELECT * FROM T_UNION_1 UNION SELECT * FROM T_UNION_2 ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------

0 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------

0 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) ORDER BY F_DATE DESC,F_INT1 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------

0 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) UNION ALL (SELECT * FROM T_UNION_1) ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------

0 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) UNION ALL (SELECT * FROM T_UNION_1) ORDER BY F_DATE DESC,F_INT1 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------

0 rows fetched.

SQL> (SELECT * FROM T_UNION_1 WHERE F_INT1 = 1) UNION ALL (SELECT * FROM T_UNION_2 WHERE F_INT2 = 3) UNION ALL (SELECT * FROM T_UNION_1) ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------

0 rows fetched.

SQL> 
SQL> INSERT INTO T_UNION_1 VALUES(1,2,'A','2017-12-11 14:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_1 VALUES(3,4,'C','2017-12-12 16:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_1 VALUES(1,3,'A','2017-12-11 14:18:00');

1 rows affected.

SQL> INSERT INTO T_UNION_1 VALUES(2,3,'B','2017-12-11 16:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(4,2,'A','2017-12-11 14:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(3,4,'C','2017-12-12 16:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(6,4,'C','2017-12-12 16:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(4,3,'A','2017-12-11 14:18:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(5,3,'B','2017-12-11 16:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(2,3,'B','2017-12-11 16:08:00');

1 rows affected.

SQL> INSERT INTO T_UNION_2 VALUES(1,3,'A','2017-12-11 14:18:00');

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> 
SQL> --TEST if there is a virtual memory leak in nl join + hash union
SQL> SELECT 1 FROM (SELECT * FROM T_UNION_1 A),(SELECT * FROM T_UNION_1 UNION SELECT * FROM T_UNION_1);

1           
------------
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           

16 rows fetched.

SQL> SELECT 1 FROM T_UNION_1 A LEFT JOIN T_UNION_1 B ON A.F_INT1 = B.F_INT1 JOIN (SELECT * FROM T_UNION_1 UNION SELECT * FROM T_UNION_1);

1           
------------
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           
1           

24 rows fetched.

SQL> 
SQL> (SELECT F_INT1 FROM T_UNION_1 GROUP BY F_INT1) UNION (SELECT F_INT1 FROM T_UNION_2 GROUP BY F_INT1) ORDER BY F_INT1 DESC;

F_INT1      
------------
6           
5           
4           
3           
2           
1           

6 rows fetched.

SQL> SELECT * FROM T_UNION_1 UNION SELECT * FROM T_UNION_2 ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
1            3                                        A                2017-12-11 14:18:00   
1            2                                        A                2017-12-11 14:08:00   
2            3                                        B                2017-12-11 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
4            2                                        A                2017-12-11 14:08:00   
5            3                                        B                2017-12-11 16:08:00   
6            4                                        C                2017-12-12 16:08:00   

8 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
1            3                                        A                2017-12-11 14:18:00   
1            2                                        A                2017-12-11 14:08:00   
2            3                                        B                2017-12-11 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
4            2                                        A                2017-12-11 14:08:00   
5            3                                        B                2017-12-11 16:08:00   
6            4                                        C                2017-12-12 16:08:00   

8 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) ORDER BY F_DATE DESC,F_INT1 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
6            4                                        C                2017-12-12 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
5            3                                        B                2017-12-11 16:08:00   
2            3                                        B                2017-12-11 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
1            3                                        A                2017-12-11 14:18:00   
4            2                                        A                2017-12-11 14:08:00   
1            2                                        A                2017-12-11 14:08:00   

8 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION (SELECT * FROM T_UNION_2) UNION (SELECT * FROM T_UNION_1) ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
1            3                                        A                2017-12-11 14:18:00   
1            2                                        A                2017-12-11 14:08:00   
2            3                                        B                2017-12-11 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
4            2                                        A                2017-12-11 14:08:00   
5            3                                        B                2017-12-11 16:08:00   
6            4                                        C                2017-12-12 16:08:00   

8 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION ALL (SELECT * FROM T_UNION_2) UNION (SELECT * FROM T_UNION_1) ORDER BY F_DATE DESC,F_INT1 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
6            4                                        C                2017-12-12 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
5            3                                        B                2017-12-11 16:08:00   
2            3                                        B                2017-12-11 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
1            3                                        A                2017-12-11 14:18:00   
4            2                                        A                2017-12-11 14:08:00   
1            2                                        A                2017-12-11 14:08:00   

8 rows fetched.

SQL> (SELECT * FROM T_UNION_1) UNION ALL ((SELECT * FROM T_UNION_2) UNION (SELECT * FROM T_UNION_1)) ORDER BY F_DATE DESC,F_INT1 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
6            4                                        C                2017-12-12 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
5            3                                        B                2017-12-11 16:08:00   
2            3                                        B                2017-12-11 16:08:00   
2            3                                        B                2017-12-11 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
1            3                                        A                2017-12-11 14:18:00   
1            3                                        A                2017-12-11 14:18:00   
4            2                                        A                2017-12-11 14:08:00   
1            2                                        A                2017-12-11 14:08:00   
1            2                                        A                2017-12-11 14:08:00   

12 rows fetched.

SQL> (SELECT * FROM T_UNION_1 WHERE F_INT1 = 1) UNION (SELECT * FROM T_UNION_2 WHERE F_INT2 = 3) UNION ALL (SELECT * FROM T_UNION_1) ORDER BY F_INT1,F_INT2 DESC;

F_INT1       F_INT2                                   F_CHAR           F_DATE                
------------ ---------------------------------------- ---------------- ----------------------
1            3                                        A                2017-12-11 14:18:00   
1            3                                        A                2017-12-11 14:18:00   
1            2                                        A                2017-12-11 14:08:00   
1            2                                        A                2017-12-11 14:08:00   
2            3                                        B                2017-12-11 16:08:00   
2            3                                        B                2017-12-11 16:08:00   
3            4                                        C                2017-12-12 16:08:00   
4            3                                        A                2017-12-11 14:18:00   
5            3                                        B                2017-12-11 16:08:00   

9 rows fetched.

SQL> 
SQL> --TEST DATATYPE
SQL> SELECT F_INT1 FROM T_UNION_1 UNION SELECT F_DATE FROM T_UNION_1 ORDER BY F_INT1;

CT-00601, [1:36]Sql syntax error: expression must have same datatype as corresponding expression
SQL> SELECT F_CHAR FROM T_UNION_1 UNION SELECT F_DATE FROM T_UNION_1 ORDER BY F_CHAR;

F_CHAR                                          
------------------------------------------------
2017-12-11 14:08:00                             
2017-12-11 14:18:00                             
2017-12-11 16:08:00                             
2017-12-12 16:08:00                             
A                                               
B                                               
C                                               

7 rows fetched.

SQL> SELECT F_INT1 FROM T_UNION_1 UNION SELECT F_INT2 FROM T_UNION_1 ORDER BY F_INT1;

F_INT1                                  
----------------------------------------
1                                       
2                                       
3                                       
4                                       

4 rows fetched.

SQL> SELECT F_INT1 FROM T_UNION_1 UNION SELECT F_CHAR FROM T_UNION_1 ORDER BY F_INT1;

F_INT1          
----------------
1               
2               
3               
A               
B               
C               

6 rows fetched.

SQL> SELECT F_INT2 FROM T_UNION_1 UNION SELECT F_CHAR FROM T_UNION_1 ORDER BY F_INT2;

F_INT2                                                          
----------------------------------------------------------------
2                                                               
3                                                               
4                                                               
A                                                               
B                                                               
C                                                               

6 rows fetched.

SQL> SELECT F_INT1,F_INT2 FROM T_UNION_1 UNION SELECT F_CHAR,F_INT2 FROM T_UNION_1 ORDER BY F_INT1,F_INT2;

F_INT1           F_INT2                                  
---------------- ----------------------------------------
1                2                                       
1                3                                       
2                3                                       
3                4                                       
A                2                                       
A                3                                       
B                3                                       
C                4                                       

8 rows fetched.

SQL> SELECT F_INT1,F_INT2 FROM T_UNION_1 UNION SELECT F_INT1,F_CHAR FROM T_UNION_1 ORDER BY F_INT1,F_INT2;

F_INT1       F_INT2                                                          
------------ ----------------------------------------------------------------
1            2                                                               
1            3                                                               
1            A                                                               
2            3                                                               
2            B                                                               
3            4                                                               
3            C                                                               

7 rows fetched.

SQL> SELECT F_INT1,F_CHAR FROM T_UNION_1 UNION SELECT F_INT1,F_INT2 FROM T_UNION_1 ORDER BY F_INT1,F_CHAR;

F_INT1       F_CHAR                                                          
------------ ----------------------------------------------------------------
1            2                                                               
1            3                                                               
1            A                                                               
2            3                                                               
2            B                                                               
3            4                                                               
3            C                                                               

7 rows fetched.

SQL> SELECT F_INT1,F_INT2 FROM T_UNION_1 UNION SELECT F_CHAR,F_INT1 FROM T_UNION_1 ORDER BY F_INT1,F_INT2;

F_INT1           F_INT2                                  
---------------- ----------------------------------------
1                2                                       
1                3                                       
2                3                                       
3                4                                       
A                1                                       
B                2                                       
C                3                                       

7 rows fetched.

SQL> SELECT * FROM T_UNION_1 UNION SELECT F_INT2,F_CHAR,F_INT1,F_DATE FROM T_UNION_1 ORDER BY F_INT1,F_INT2,F_CHAR;

F_INT1                                   F_INT2                                                           F_CHAR           F_DATE                
---------------------------------------- ---------------------------------------------------------------- ---------------- ----------------------
1                                        2                                                                A                2017-12-11 14:08:00   
1                                        3                                                                A                2017-12-11 14:18:00   
2                                        3                                                                B                2017-12-11 16:08:00   
2                                        A                                                                1                2017-12-11 14:08:00   
3                                        4                                                                C                2017-12-12 16:08:00   
3                                        A                                                                1                2017-12-11 14:18:00   
3                                        B                                                                2                2017-12-11 16:08:00   
4                                        C                                                                3                2017-12-12 16:08:00   

8 rows fetched.

SQL> SELECT F_INT2,F_CHAR,F_INT1,F_DATE FROM T_UNION_1 UNION SELECT * FROM T_UNION_1 ORDER BY F_INT1,F_INT2,F_CHAR;

F_INT2                                   F_CHAR                                                           F_INT1           F_DATE                
---------------------------------------- ---------------------------------------------------------------- ---------------- ----------------------
2                                        A                                                                1                2017-12-11 14:08:00   
3                                        A                                                                1                2017-12-11 14:18:00   
3                                        B                                                                2                2017-12-11 16:08:00   
4                                        C                                                                3                2017-12-12 16:08:00   
1                                        2                                                                A                2017-12-11 14:08:00   
1                                        3                                                                A                2017-12-11 14:18:00   
2                                        3                                                                B                2017-12-11 16:08:00   
3                                        4                                                                C                2017-12-12 16:08:00   

8 rows fetched.

SQL> 
SQL> desc -q select current_date,current_timestamp from dual union (select current_timestamp,current_date from dual);

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
CURRENT_DATE                                 TIMESTAMP(6) WITH TIME ZONE         
CURRENT_TIMESTAMP                            TIMESTAMP(6) WITH TIME ZONE         

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select current_timestamp(3) c from dual union select current_timestamp(6) c from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            TIMESTAMP(6) WITH TIME ZONE         

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select current_timestamp(3) c from dual union select current_timestamp(6) c from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            TIMESTAMP(6) WITH TIME ZONE         

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select sysdate c from dual union select current_timestamp(5) c from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            TIMESTAMP(5) WITH TIME ZONE         

SQL> 
SQL> desc -q select to_date('2012-12-12') from dual minus select cast(systimestamp as timestamp(5) with time zone) from dual; 

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
TO_DATE('2012-12-12')                        TIMESTAMP(5) WITH TIME ZONE         

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast(systimestamp as timestamp with local time zone) c from dual union select cast(systimestamp as timestamp with time zone) from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            TIMESTAMP(6) WITH TIME ZONE         

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast(systimestamp as timestamp(1) with local time zone) c from dual union select cast(systimestamp as timestamp(2) with time zone) from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            TIMESTAMP(2) WITH TIME ZONE         

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select systimestamp(0) c from dual union select cast(systimestamp as timestamp(2) with time zone) from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            TIMESTAMP(2) WITH TIME ZONE         

SQL> 
SQL> -- BOOLEAN union datatype
SQL> desc -q select true X from dual union select false from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            BOOLEAN                             

SQL> desc -q select true X from dual union select 1 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            BOOLEAN                             

SQL> desc -q select true X from dual union select 1.0 from dual;

CT-00601, [1:31]Sql syntax error: expression must have same datatype as corresponding expression

SQL> 
SQL> -- NULL union datatype
SQL> desc -q select NULL X from dual union select 1.0 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select NULL X from dual union select cast(2.3 as number(30, 2)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select NULL X from dual union select sysdate from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(48 BYTE)                    

SQL> desc -q select NULL X from dual union select 'asdasdasd' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(9 BYTE)                     

SQL> desc -q select NULL X from dual union select 'asdasdasd' from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(9 BYTE)                     

SQL> desc -q select NULL X from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR                             

SQL> desc -q select 'asdasdasd' X from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(9 BYTE)                     

SQL> desc -q select 'asdasdasd' X from dual union select NULL from dual union select to_char(sin(1)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> create or replace view UNION_VIEW_TEST1 as select NULL c from dual union select NULL from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            VARCHAR                             

SQL> desc -q select NULL c from dual union select NULL from dual order by 1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            VARCHAR                             

SQL> desc -q select cast(NULL as varchar(2)) c from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            VARCHAR(2 BYTE)                     

SQL> desc -q select '' X  from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR                                

SQL> select NULL X from dual union select '' from dual;

X
-
 

1 rows fetched.

SQL> desc -q select NULL X from dual union select '' + 1 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select '' X from dual union select '' + 1 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select '' X from dual minus select '' from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR                             

SQL> desc -q select '' X from dual minus select '1' from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(1 BYTE)                     

SQL> desc -q select '2' X from dual minus select '1' from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(1 BYTE)                     

SQL> desc -q select '2' X from dual minus select '1' from dual union select '' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(1 BYTE)                        

SQL> desc -q select null - null X from dual minus select '1' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select null - null X from dual minus select 1 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            NUMBER                              

SQL> desc -q select null - null X from dual minus select null from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select null - null X from dual minus select null || null from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select null X from dual minus select null || null from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR                             

SQL> desc -q select 'TRUE' X from dual minus select FALSE from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(5 BYTE)                     

SQL> desc -q select cast('' as char(2)) X from dual minus select 'FA' from  dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(2 BYTE)                        

SQL> desc -q select cast('X' as char(2)) X from dual minus select 'FA' from  dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(2 BYTE)                        

SQL> desc -q select cast(dummy as char(2)) X from dual minus select 'FA' from  dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(2 BYTE)                        

SQL> desc -q select cast(dummy as varchar(2)) X from dual minus select 'FA' from  dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(2 BYTE)                     

SQL> desc -q select cast(dummy as number(38)) X from dual minus select 'FA' + NULL from  dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            NUMBER                              

SQL> desc -q select cast(dummy as number(38)) X from dual minus select NULL from  dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select cast(dummy as number(38)) X from dual minus select NULL from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select (select to_date('') from dual) X from dual minus select NULL from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(48 BYTE)                    

SQL> desc -q select (select to_date('') from dual) X from dual minus select NULL from dual union select systimestamp(0) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(48 BYTE)                    

SQL> desc -q select X from (select to_date('') X from dual) minus select NULL from dual union select systimestamp(2) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(48 BYTE)                    

SQL> 
SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast(NULL as varchar(12)) c from dual union select NULL from dual order by 1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            VARCHAR(12 BYTE)                    

SQL> 
SQL> desc -q select cast(NULL as varchar(2)) c from dual union select cast(NULL as date) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            VARCHAR(48 BYTE)                    

SQL> 
SQL> -- union string datatype group
SQL> desc -q select '2012-12-12' c from dual union select cast(NULL as date) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C                                            VARCHAR(48 BYTE)                    

SQL> desc -q select cast('1' as char(100)) X from dual union select cast(3 as char(100)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(100 BYTE)                      

SQL> desc -q select cast('1' as char(100 char)) X from dual union select cast(3 as char(100)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(100 CHAR)                      

SQL> desc -q select cast('1' as varchar(100)) X from dual union select cast('123' as varchar(200)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(3 BYTE)                     

SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as char(100 char)) X from dual union select cast(3 as char(200) )  from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(200 CHAR)                      

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as varchar(100 char)) X from dual union select cast(3 as char(100) )  from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(100 CHAR)                   

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as char(100 char)) X from dual union select cast(3 as char(100 char) )  from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(100 CHAR)                      

SQL> 
SQL> desc -q select cast(dummy as char(38)) X from dual union select cast(dummy as varchar(38 char)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(228 BYTE)                   

SQL> desc -q select cast(dummy as char(38)) X from dual union select cast(dummy as varchar(5 char)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(38 BYTE)                    

SQL> desc -q select cast(dummy as char(38)) X from dual union select cast(dummy as varchar(40 char)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(240 BYTE)                   

SQL> desc -q select cast(dummy as varchar(38 char)) X from dual union select cast(dummy as varchar(40 char)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(40 CHAR)                    

SQL> desc -q select cast(dummy as varchar(38 char)) X from dual union select cast(dummy as varchar(40)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(40 CHAR)                    

SQL> desc -q select cast(dummy as varchar(38 char)) X from dual union select cast(dummy as varchar(400)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(400 CHAR)                   

SQL> desc -q select cast(dummy as varchar(38 char)) X from dual union select null X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(38 CHAR)                    

SQL> desc -q select cast(dummy as varchar(380)) X from dual union select cast(dummy as varchar(400)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(400 BYTE)                   

SQL> desc -q select cast(dummy as varchar(380 char)) X from dual union select cast(dummy as varchar(400)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(400 CHAR)                   

SQL> desc -q select cast(dummy as varchar(1 char)) X from dual union select cast(dummy as varchar(400)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(400 CHAR)                   

SQL> desc -q select cast(dummy as char(1 char)) X from dual union select cast(dummy as char(400)) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(400 CHAR)                      

SQL> 
SQL> -- testing for numeric datatype group
SQL> desc -q select cast(1 as binary_integer) from dual union select cast(3.1 as binary_bigint) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
CAST(1 AS BINARY_INTEGER)                    BINARY_BIGINT                       

SQL> desc -q select cast(1 as binary_integer) from dual union select 3.1 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
CAST(1 AS BINARY_INTEGER)                    NUMBER                              

SQL> desc -q select cast(1 as NUMBER(10)) from dual union select 3.1::NUMBER(10) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
CAST(1 AS NUMBER(10))                        NUMBER(10)                          

SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as NUMBER(10)) X from dual union select cast(3 as NUMBER(10, 0)) from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            NUMBER(10)                          

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as NUMBER(10)) X from dual union select cast(3 as NUMBER(10, 1)) from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            NUMBER                              

SQL> 
SQL> desc -q select cast('1' as NUMBER(10)) X from dual union select cast(3 as NUMBER(11,1)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            NUMBER                              

SQL> 
SQL> desc -q select cast('1' as BINARY_BIGINT) X from dual union select cast(3 as NUMBER(10, 1)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            NUMBER                              

SQL> desc -q select cast('1' as BINARY_BIGINT) X from dual union select cast(3 as BINARY_DOUBLE) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            BINARY_DOUBLE                       

SQL> desc -q select '1' X from dual union select cast(3 as BINARY_DOUBLE) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(24 BYTE)                    

SQL> desc -q select cast('1' as raw(100)) X from dual union select cast('123' as BINARY_DOUBLE) from dual;

CT-00601, [1:48]Sql syntax error: expression must have same datatype as corresponding expression

SQL> desc -q select cast('1' as raw(100)) X from dual union select cast('123' as raw(100)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            RAW(2)                              

SQL> desc -q select cast('1' as raw(100)) X from dual union select cast('123' as raw(200)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            RAW(2)                              

SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as raw(100)) X from dual union select cast('123' as raw(200)) from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            RAW(2)                              

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as raw(100)) X from dual union select cast('123' as raw(200)) from dual union select true from dual;

CT-00601, [1:136]Sql syntax error: expression must have same datatype as corresponding expression
SQL> 
SQL> desc -q select cast('1' as raw(100)) X from dual union select '123' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(3 BYTE)                     

SQL> create or replace view UNION_VIEW_TEST1 as select NULL || cast('1' as char(100)) X from dual union select '123' from dual;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(100 BYTE)                   

SQL> 
SQL> create or replace view UNION_VIEW_TEST1 as select NULL * cast('1' as char(100)) X from dual union select '123' from dual;

Succeed.

SQL> 
SQL> desc -q select NULL * NULL X from dual union select '123' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select NULL * 1 X from dual union select '123' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select NULL + 1 X from dual union select '123' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select NULL || 1 X from dual union select '123' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(3 BYTE)                     

SQL> desc -q select NULL | 1 X from dual union select '123' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(20 BYTE)                    

SQL> desc -q select NULL | 1 X from dual union select 123 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            BINARY_BIGINT                       

SQL> desc -q select cast('123' as binary(30)) X from dual union select cast('123' as binary(30)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            BINARY(30)                          

SQL> desc -q select cast('123' as binary(30)) X from dual union select cast('123' as binary(32)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            BINARY(32)                          

SQL> desc -q select cast('123' as binary(30)) X from dual union select cast('123' as varbinary(30)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARBINARY(30)                       

SQL> desc -q select cast('123' as binary(36)) X from dual union select cast('123' as varbinary(30)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARBINARY(36)                       

SQL> 
SQL> desc -q select cast('123' as binary(30)) X from dual union select cast('123' as char(30)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(30 BYTE)                    

SQL> desc -q select cast('123' as binary(30)) X from dual union select cast('123' as raw(30)) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            RAW(30)                             

SQL> 
SQL> desc -q select interval '12-1' year to month X from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(10 BYTE)                    

SQL> desc -q select null from dual union select interval '12-1' year to month X from dual union select NULL from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
NULL                                         VARCHAR(10 BYTE)                    

SQL> desc -q select interval '12-1' year(2) to month X from dual union select interval '123-1' year(4) to month from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            INTERVAL YEAR(4) TO MONTH           

SQL> desc -q select interval '12-1' year to month X from dual union select numtoyminterval(8888, 'month') from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            INTERVAL YEAR(4) TO MONTH           

SQL> desc -q select interval '12-1' year to month X from dual union select cast('' as interval year(3) to month) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            INTERVAL YEAR(3) TO MONTH           

SQL> desc -q select null from dual union select interval '12-1' year to month X from dual union select 'X' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
NULL                                         VARCHAR(10 BYTE)                    

SQL> desc -q select null from dual union select interval '0 0:0:1' day to second X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
NULL                                         VARCHAR(24 BYTE)                    

SQL> desc -q select numtodsinterval(999999, 'second') H from dual union select interval '0 0:0:1' day to second X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
H                                            INTERVAL DAY(7) TO SECOND(6)        

SQL> desc -q select interval '0 0:0:1' day(5) to second(2) X from dual union select interval '0 0:0:1' day(3) to second(5) X from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            INTERVAL DAY(5) TO SECOND(5)        

SQL> desc -q select interval '0 0:0:1' day(5) to second(2) X from dual union select interval '12-1' year to month X from dual;

CT-00601, [1:65]Sql syntax error: expression must have same datatype as corresponding expression

SQL> 
SQL> drop table if exists UNION_TAB_TEST1;

Succeed.

SQL> create table UNION_TAB_TEST1(c_varchar varchar(100), c_char char(36), c_char2 char(36 char), c_bool bool, c_clob clob, c_int binary_integer, c_dec number);

Succeed.

SQL> 
SQL> desc -q select c_char from UNION_TAB_TEST1 union select c_varchar from UNION_TAB_TEST1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C_CHAR                                       VARCHAR(100 BYTE)                   

SQL> desc -q select c_char2 from UNION_TAB_TEST1 union select c_varchar from UNION_TAB_TEST1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C_CHAR2                                      VARCHAR(100 CHAR)                   

SQL> desc -q select c_char2 from UNION_TAB_TEST1 union select c_char from UNION_TAB_TEST1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C_CHAR2                                      CHAR(36 CHAR)                       

SQL> desc -q select c_char2 from UNION_TAB_TEST1 union select cast(1 as char(110)) from UNION_TAB_TEST1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C_CHAR2                                      CHAR(110 CHAR)                      

SQL> create or replace view UNION_VIEW_TEST1 as select cast('1' as char(100)) X from dual union select c_char from UNION_TAB_TEST1;

Succeed.

SQL> desc UNION_VIEW_TEST1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(100 BYTE)                      

SQL> desc -q select X from UNION_VIEW_TEST1 union select c_char2 from UNION_TAB_TEST1;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            CHAR(216 BYTE)                      

SQL> 
SQL> -- FUNC_AS_TABLE
SQL> desc -q select * from table(dba_analyze_table('sys','UNION_TAB_TEST1'));

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
STAT_ITEM                           NOT NULL VARCHAR(128 BYTE)                   
VALUE                               NOT NULL BINARY_BIGINT                       

SQL> desc -q select VALUE from table(dba_analyze_table('sys','UNION_TAB_TEST1')) union select  to_number(123) from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
VALUE                                        NUMBER                              

SQL> desc -q select STAT_ITEM from table(dba_analyze_table('sys','UNION_TAB_TEST1')) union select '' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
STAT_ITEM                                    VARCHAR(128 BYTE)                   

SQL> 
SQL> desc -q select -null X from dual minus select +'a' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select sin(null) X from dual minus select -'a' from dual;

CT-00636, [1:43]Invalid number -- unexpected character

SQL> desc -q select -null X from dual minus select null from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> desc -q select -null X from dual minus select +null from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            VARCHAR(72 BYTE)                    

SQL> 
SQL> desc -q select null from dual union select null from dual union select 2.3 from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
NULL                                         VARCHAR(72 BYTE)                    

SQL> desc -q select null from dual union select null from dual union select 2.3 from dual minus select null from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
NULL                                         VARCHAR(72 BYTE)                    

SQL> desc -q select null from dual union select null from dual union select 'abcd' from dual minus select null from dual union select 'hijklmn' from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
NULL                                         VARCHAR(7 BYTE)                     

SQL> 
SQL> -- testing for BOOLEAN union
SQL> select min(true) from dual;

MIN(TRUE)
---------
TRUE     

1 rows fetched.

SQL> select min(x), max(x), count(x) from (select true X from dual connect by rownum < 10 union select false from dual);

MIN(X) MAX(X) COUNT(X)            
------ ------ --------------------
FALSE  TRUE   2                   

1 rows fetched.

SQL> select min(x), max(x), count(x) from (select true X from dual connect by rownum < 10 union all select false from dual);

MIN(X) MAX(X) COUNT(X)            
------ ------ --------------------
FALSE  TRUE   10                  

1 rows fetched.

SQL> select max(false) from dual union select count(sysdate) from dual;

MAX(FALSE)
----------
TRUE      
FALSE     

2 rows fetched.

SQL> select max(false) from dual union select count(1) from dual;

MAX(FALSE)
----------
TRUE      
FALSE     

2 rows fetched.

SQL> 
SQL> 


